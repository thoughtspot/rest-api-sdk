openapi: 3.0.0
info:
  title: ThoughtSpot Public REST API
  version: "2.0"
servers:
- url: "{base-url}"
  variables:
    base-url:
      default: https://localhost:443
security:
- bearerAuth: []
paths:
  /api/rest/2.0/ai/conversation/create:
    post:
      description: |2+

        Version: 10.4.0.cl or later


        Creates a Conversation object to start an AI-driven conversation based on a specific data model.

        Requires at least view access to the metadata object specified in the request.

        #### Usage guidelines

        This API requires the `metadata_identifier` parameter to define the context for the conversation.

        You can also specify the tokens to initiate the conversation as shown in this example:

        `"tokens": "[tea],[sales],[type]"`

        If the API request is successful, ThoughtSpot returns the ID of the conversation.

        > ###### Note:
        > * This endpoint is currently in Beta. Breaking changes may be introduced before the endpoint is made Generally Available.
        > * This endpoint requires Spotter - please contact ThoughtSpot support to enable Spotter on your cluster.





      operationId: createConversation
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createConversation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
          description: Common successful response
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
          description: Common error response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed
      tags:
      - AI
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/ai/analytical-questions:
    post:
      description: |
        Version: 10.7.0.cl or later
      operationId: queryGetDecomposedQuery
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queryGetDecomposedQuery_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eureka_DecomposeQueryResponse'
          description: Common successful response
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eureka_DecomposeQueryResponse'
          description: Common error response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed
      tags:
      - AI
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/ai/conversation/{conversation_identifier}/converse:
    post:
      description: |2+

        Version: 10.4.0.cl or later


        Allows sending a follow-up message to an ongoing conversation within the context of the metadata model.

        Requires at least view access to the metadata object specified in the request.

        #### Usage guidelines

        The API requires you to specify the `conversation_identifier` in the request path, and a `metadata_identifier` and `message` string in the request body.

        If the API request is successful, ThoughtSpot returns the session ID, tokens used in the conversation, and visualization type.

        > ###### Note:
        > * This endpoint is currently in Beta. Breaking changes may be introduced before the endpoint is made Generally Available.
        > * This endpoint requires Spotter - please contact ThoughtSpot support to enable Spotter on your cluster.





      operationId: sendMessage
      parameters:
      - description: Unique identifier of the conversation.
        explode: false
        in: path
        name: conversation_identifier
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sendMessage_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ResponseMessage'
                type: array
          description: Common successful response
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ResponseMessage'
                type: array
          description: Common error response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed
      tags:
      - AI
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/ai/answer/create:
    post:
      description: |2+

        Version: 10.4.0.cl or later


        Processes a natural language query and returns an AI-generated response based on a specified data model.

        Requires at least view access to the metadata object specified in the request.

        > ###### Note:
        > * This endpoint is currently in Beta. Breaking changes may be introduced before the endpoint is made Generally Available.
        > * This endpoint requires Spotter - please contact ThoughtSpot support to enable Spotter on your cluster.





      operationId: singleAnswer
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/singleAnswer_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
          description: Common successful response
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
          description: Common error response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed
      tags:
      - AI
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/auth/session/user:
    get:
      description: "\n Version: 9.0.0.cl or later\n\n\n\nGets session information\
        \ for the currently logged-in user.\n\nThis API does not require any parameters\
        \ to be passed in the request.  \n\nAny ThoughtSpot user can access this endpoint\
        \ and send an API request. The data returned in the API response varies according\
        \ to user's privilege and object access permissions.\n\n\n\n\n\n"
      operationId: getCurrentUserInfo
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Fetch current session user detail successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Authentication
      - ThoughtSpotRest
      x-accepts:
      - application/json
  /api/rest/2.0/auth/session/token:
    get:
      description: "\nGet token for the currently logged-in user. \n  Version: 9.4.0.cl\
        \ or later\n\n\nGets token details for the currently logged-in user.  You\
        \ can use this endpoint to obtain the token associated with the user's session.\n\
        \nThis API does not require any parameters to be passed in the request.  \n\
        \nAny ThoughtSpot user can access this endpoint and send an API request.\n\
        \n\n\n\n\n"
      operationId: getCurrentUserToken
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTokenResponse'
          description: Fetching token for current user successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Authentication
      - ThoughtSpotRest
      x-accepts:
      - application/json
  /api/rest/2.0/auth/token/custom:
    post:
      description: |2+

         Version: 10.4.0.cl or later


        Gets an authentication token with custom rules and security attributes and creates a full session in ThoughtSpot for a given user. By default, the token obtained from ThoughtSpot remains valid for 5 mins.

        To add a new user and assign privileges during auto creation, you need `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege. If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled, the `CONTROL_TRUSTED_AUTH`(**Can Enable or Disable Trusted Authentication**) privilege and edit access to the data source is required.

        To assign security attributes with filter rules and Parameters to the JWT token, you'll need administrator privileges and edit access to the data source (Worksheet or Model). If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled, the `CONTROL_TRUSTED_AUTH`(**Can Enable or Disable Trusted Authentication**) privilege and edit access to the data source is required.

        #### Usage guidelines

        You can generate the token for a user by providing a `username` and `password`, or by using the cluster’s `secret_key`.

        To generate a `secret_key` on your cluster, the administrator must enable [Trusted authentication](https://developers.thoughtspot.com/docs/?pageid=trusted-auth#trusted-auth-enable) in the **Develop** > **Customizations** > **Security Settings** page.

        **Note**: When both `password` and `secret_key` are included in the API request, `password` takes precedence.

        If Multi-Factor Authentication (MFA) is enabled on your instance, the API login request with basic authentication (`username`  and `password` ) returns an error. You can switch to token-based authentication with  `secret_key`  or contact ThoughtSpot Support for assistance.

        ##### Attribute-Based Access Control (ABAC) with tokens

        To implement Attribute-Based Access Control (ABAC) and assign security entitlements to users during session creation, you can generate a token with custom filtering rules and Parameters in the `filter_rules` and `parameter_values` array respectively. These attributes can be configured to persist on a specific set of objects for user sessions initiated using the token. Once defined, the rules are added to the user's `access_control_properties` object, after which all sessions will use the persisted values.

        Specify the object type as `LOGICAL_TABLE`.  The `LIVEBOARD` and `ANSWER` object types are not supported.

        For more information, see [ABAC via tokens Documentation](https://developers.thoughtspot.com/docs/api-authv2#_get_tokens_with_custom_rules_and_filter_conditions).

        ##### Just-in-time provisioning

        For just-in-time user creation and provisioning, define the following attributes:

        * `auto_create`
        * `username`
        * `display_name`
        * `email`
        * `groups`

        Set `auto_create` to `true` if the user is not available in ThoughtSpot. If the user already exists in ThoughtSpot and the `auto_create` parameter is set to `true` in the API request, the user properties such as the display name, email, Org and group assignment will not be updated with new values.

        For more information, see [Just-in-time provisioning](https://developers.thoughtspot.com/docs/just-in-time-provisioning).

        ##### Important point to note
        All options in the token creation APIs that define access to the content in ThoughtSpot will do so during the token creation and not when the token is being used for authentication. For example, `auto_create:true` will create the user when the authentication token is created. Persist options such as  `APPEND`, `REPLACE`, `RESET` will persist security parameters on the user profile when the token is created, while Persist option `NONE` will not persist anything but will be honoured in the session.





      operationId: getCustomAccessToken
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getCustomAccessToken_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
          description: ABAC token creation was successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request. This could be due to missing or incorrect
            parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access. The request could not be authenticated.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access. The user does not have permission to access
            this resource.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error occurred on the server.
      security: []
      tags:
      - Authentication
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/auth/token/full:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Gets an authentication token and creates a full session in ThoughtSpot for a given user. By default, the token obtained from ThoughtSpot remains valid for 5 mins.

        You can generate the token for a user by providing a `username` and `password`, or by using the cluster’s `secret_key` (for [Trusted authentication](https://developers.thoughtspot.com/docs/?pageid=trusted-auth#trusted-auth-enable)).

        To generate a `secret_key` on your cluster, the administrator must enable **Trusted authentication** in the **Develop** > **Customizations** > **Security Settings** page. For more information, see [Trusted authentication](https://developers.thoughtspot.com/docs/?pageid=trusted-auth#trusted-auth-enable).

        **Note**: When both `password` and `secret_key` are included in the API request, `password` takes precedence.

        If Multi-Factor Authentication (MFA) is enabled on your instance, the API login request with basic authentication (`username`  and `password` ) returns an error. You can switch to token-based authentication with  `secret_key`  or contact ThoughtSpot Support for assistance.

        #### Just-in-time provisioning

        For just-in-time user creation and provisioning, define the following attributes:

        * `auto_create`
        * `username`
        * `display_name`
        * `email`
        * `group_identifiers`

        Set `auto_create` to `True` if the user is not available in ThoughtSpot. If the user already exists in ThoughtSpot and the `auto_create` parameter is set to `true`, the API call will update user properties like display name, email and group assignment.

        For more information, see [Just-in-time provisioning](https://developers.thoughtspot.com/docs/just-in-time-provisioning).

        To add a new user and assign privileges, you need `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege. If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled, the `CONTROL_TRUSTED_AUTH`(**Can Enable or Disable Trusted Authentication**) privilege is required.

        #### Important point to note
        All options in the token creation APIs changing the content in ThoughtSpot will do so during the token creation and not when the token is being used for authentication. For example, `auto_create:true` will create the user when the authentication token is created.





      operationId: getFullAccessToken
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getFullAccessToken_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Bearer auth token creation successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security: []
      tags:
      - Authentication
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/auth/token/object:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Gets an authentication token that provides access to a specific metadata object. By default, the token obtained from ThoughtSpot remains valid for 5 mins.

        You can generate the token for a user by providing a `username` and `password`, or by using the cluster’s `secret key` (for [Trusted authentication](https://developers.thoughtspot.com/docs/?pageid=trusted-auth#trusted-auth-enable)).

        To generate a `secret_key` on your cluster, the administrator must enable **Trusted authentication** in the **Develop** > **Customizations** > **Security Settings** page.

        **Note**: When both `password` and `secret_key` are included in the API request,  `password` takes precedence.

        If Multi-Factor Authentication (MFA) is enabled on your instance, the API login request with basic authentication (`username`  and `password` ) returns an error. You can switch to token-based authentication with  `secret_key`  or contact ThoughtSpot Support for assistance.

        #### Just-in-time provisioning

        For just-in-time user creation and provisioning, define the following attributes:

        * `auto_create`
        * `username`
        * `display_name`
        * `email`
        * `group_identifiers`

        Set `auto_create` to `True` if the user is not available in ThoughtSpot. If the user already exists in ThoughtSpot and the `auto_create` parameter is set to `true`, the API call will update user properties like display name, email and group assignment.

        For more information, see [Just-in-time provisioning](https://developers.thoughtspot.com/docs/just-in-time-provisioning).

        To add a new user and assign privileges, you need `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege. If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled, the `CONTROL_TRUSTED_AUTH`(**Can Enable or Disable Trusted Authentication**) privilege is required.

        #### Important point to note
        All options in the token creation APIs changing the content in ThoughtSpot will do so during the token creation and not when the token is being used for authentication. For example, `auto_create:true` will create the user when the authentication token is created.





      operationId: getObjectAccessToken
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getObjectAccessToken_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Bearer auth token creation successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security: []
      tags:
      - Authentication
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/auth/session/login:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Creates a login session for a ThoughtSpot user with Basic authentication.

        In Basic authentication method, REST clients log in to ThoughtSpot using `username` and `password` attributes. On a multi-tenant cluster with Orgs, users can pass the ID of the Org in the API request to log in to a specific Org context.

        **Note**: If Multi-Factor Authentication (MFA) is enabled on your instance, the API login request with basic authentication (`username`  and `password` ) returns an error. Contact ThoughtSpot Support for assistance.

        A successful login returns a session cookie that can be used in your subsequent API requests.




      operationId: login
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login_request'
        required: true
      responses:
        "204":
          description: User login successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Authentication
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/auth/session/logout:
    post:
      description: |2+

         Version: 9.0.0.cl or later



        Logs out a user from their current session.





      operationId: logout
      parameters: []
      responses:
        "204":
          description: User logout successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Authentication
      - ThoughtSpotRest
      x-accepts:
      - application/json
  /api/rest/2.0/auth/token/revoke:
    post:
      description: |2+

         Version: 9.0.0.cl or later



        Revokes the authentication token issued for current user session.

        The token of your current session expires when you make a call to the `/api/rest/2.0/auth/token/revoke` endpoint.
        the users will not be able to access ThoughtSpot objects until a new token is obtained.

        To restart your session, request for a new token from ThoughtSpot. See [Get Full Access Token](#/http/api-endpoints/authentication/get-full-access-token).





      operationId: revokeToken
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/revokeToken_request'
        required: true
      responses:
        "204":
          description: Token successfully revoked.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Authentication
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/auth/token/validate:
    post:
      description: |2+

         Version: 9.12.0.cl or later



        Validates the authentication token specified in the API request.

        If your token is not valid, [Get a new token](#/http/api-endpoints/authentication/get-full-access-token).





      operationId: validateToken
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/validateToken_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenValidationResponse'
          description: Token validation successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Authentication
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/connection/create:
    post:
      description: "\n Version: 9.2.0.cl or later\n\n\nCreates a connection to a data\
        \ warehouse for live query services.  \n\nRequires `DATAMANAGEMENT` (**Can\
        \ manage data**) or `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.\n\
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac)\
        \ is enabled on your instance, the `CAN_CREATE_OR_EDIT_CONNECTIONS` (**Can\
        \ create/edit Connections**) privilege is required.\n\n#### Create a connection\
        \ without tables\n\nTo create a connection without tables:\n\n1. Pass these\
        \ parameters in your API request.\n * Name of the connection.\n * Type of\
        \ the data warehouse to connect to.\n * A JSON map of configuration attributes\
        \ in `data_warehouse_config`. The following example shows the configuration\
        \ attributes for a SnowFlake connection:\n  ```\n  {\n     \"configuration\"\
        :{\n        \"accountName\":\"thoughtspot_partner\",\n        \"user\":\"\
        tsadmin\",\n        \"password\":\"TestConn123\",\n        \"role\":\"sysadmin\"\
        ,\n        \"warehouse\":\"MEDIUM_WH\"\n     },\n     \"externalDatabases\"\
        :[\n\n     ]\n  }\n  ```\n2. Set `validate` to `false`.\n\n#### Create a connection\
        \ with tables\n\nTo create a connection with tables:\n\n1. Pass these parameters\
        \ in your API request.\n * Name of the connection.\n * Type of the data warehouse\
        \ to connect to.\n * A JSON map of configuration attributes, database details,\
        \ and table properties in `data_warehouse_config` as shown in the following\
        \ example:\n  ```\n  {\n     \"configuration\":{\n        \"accountName\"\
        :\"thoughtspot_partner\",\n        \"user\":\"tsadmin\",\n        \"password\"\
        :\"TestConn123\",\n        \"role\":\"sysadmin\",\n        \"warehouse\":\"\
        MEDIUM_WH\"\n     },\n     \"externalDatabases\":[\n        {\n          \
        \ \"name\":\"AllDatatypes\",\n           \"isAutoCreated\":false,\n      \
        \     \"schemas\":[\n              {\n                 \"name\":\"alldatatypes\"\
        ,\n                 \"tables\":[\n                    {\n                \
        \       \"name\":\"allDatatypes\",\n                       \"type\":\"TABLE\"\
        ,\n                       \"description\":\"\",\n                       \"\
        selected\":true,\n                       \"linked\":true,\n              \
        \         \"columns\":[\n                          {\n                   \
        \          \"name\":\"CNUMBER\",\n                             \"type\":\"\
        INT64\",\n                             \"canImport\":true,\n             \
        \                \"selected\":true,\n                             \"isLinkedActive\"\
        :true,\n                             \"isImported\":false,\n             \
        \                \"tableName\":\"allDatatypes\",\n                       \
        \      \"schemaName\":\"alldatatypes\",\n                             \"dbName\"\
        :\"AllDatatypes\"\n                          },\n                        \
        \  {\n                             \"name\":\"CDECIMAL\",\n              \
        \               \"type\":\"INT64\",\n                             \"canImport\"\
        :true,\n                             \"selected\":true,\n                \
        \             \"isLinkedActive\":true,\n                             \"isImported\"\
        :false,\n                             \"tableName\":\"allDatatypes\",\n  \
        \                           \"schemaName\":\"alldatatypes\",\n           \
        \                  \"dbName\":\"AllDatatypes\"\n                         \
        \ }\n                       ]\n                    }\n                 ]\n\
        \              }\n           ]\n        }\n     ]\n  }\n  ```\n2. Set `validate`\
        \ to `true`.\n\n\n\n\n\n"
      operationId: createConnection
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createConnection_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConnectionResponse'
          description: Connection to the datasource successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Connections
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/connection/delete:
    post:
      deprecated: true
      description: "\n Version: 9.2.0.cl or later\n\n\n\n**Important**: This endpoint\
        \ is deprecated and will be removed from ThoughtSpot in September 2025. ThoughtSpot\
        \ strongly recommends using the\n[Delete Connection V2](#/http/api-endpoints/connections/delete-connection-v2)\
        \ endpoint to delete your connection objects.  \n\n#### Usage guidelines\n\
        \nDeletes a connection object.\n\nRequires `DATAMANAGEMENT` (**Can manage\
        \ data**) and edit permissions to the connection object, or `ADMINISTRATION`\
        \ (**Can administer ThoughtSpot**) privilege.\nIf [Role-Based Access Control\
        \ (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your\
        \ instance, the `CAN_CREATE_OR_EDIT_CONNECTIONS` (**Can create/edit Connections**)\
        \ privilege is required.\n\n**Note**: If a connection has dependent objects,\
        \ make sure you remove its associations before the delete operation.\n\n\n\
        \n\n"
      operationId: deleteConnection
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteConnection_request'
        required: true
      responses:
        "204":
          description: Connection successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Connections
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/connections/{connection_identifier}/delete:
    post:
      description: |2+

         Version: 10.4.0.cl or later


        Deletes a connection object.

        **Note**: If a connection has dependent objects, make sure you remove its associations before the delete operation.

        Requires `DATAMANAGEMENT` (**Can manage data**) and edit permissions to the connection object, or `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `CAN_CREATE_OR_EDIT_CONNECTIONS` (**Can create/edit Connections**) privilege is required.





      operationId: deleteConnectionV2
      parameters:
      - description: Unique ID or name of the connection.
        explode: false
        in: path
        name: connection_identifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Connection successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Connections
      - ThoughtSpotRest
      x-accepts:
      - application/json
  /api/rest/2.0/connections/download-connection-metadata-changes/{connection_identifier}:
    post:
      description: "\n Version: 9.9.0.cl or later\n\n\nExports the difference in connection\
        \ metadata between CDW and ThoughtSpot\n\nRequires `DATAMANAGEMENT` (**Can\
        \ manage data**) privilege.\nIf [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac)\
        \ is enabled on your instance, the following Data control privileges may be\
        \ required:  \n- `CAN_MANAGE_CUSTOM_CALENDAR`(**Can manage custom calendars**)\n\
        - `CAN_CREATE_OR_EDIT_CONNECTIONS` (**Can create/edit Connections**)\n- `CAN_MANAGE_WORKSHEET_VIEWS_TABLES`\
        \ (**Can manage data models**)\n\nTo download the connection metadata difference\
        \ between ThoughtSpot and CDW, pass the connection GUID as `connection_identifier`\
        \ in the API request.\n\n\n\n\n\n"
      operationId: downloadConnectionMetadataChanges
      parameters:
      - description: GUID of the connection
        explode: false
        in: path
        name: connection_identifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Export metadata changes.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Connections
      - ThoughtSpotRest
      x-accepts:
      - application/json
      - application/octet-stream
  /api/rest/2.0/connections/fetch-connection-diff-status/{connection_identifier}:
    post:
      description: |2+

         Version: 9.9.0.cl or later


        Validates the difference in connection metadata between CDW and ThoughtSpot.

        Requires `DATAMANAGEMENT` (**Can manage data**) privilege.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the following Data control privileges may be required:

        - `CAN_MANAGE_CUSTOM_CALENDAR`(**Can manage custom calendars**)
        - `CAN_CREATE_OR_EDIT_CONNECTIONS` (**Can create/edit Connections**)
        - `CAN_MANAGE_WORKSHEET_VIEWS_TABLES` (**Can manage data models**)

        Returns a boolean indicating whether there is any difference between the connection metadata at ThoughtSpot and CDW.

        To get the connection metadata difference status, pass the connection GUID as `connection_identifier` in the API request.





      operationId: fetchConnectionDiffStatus
      parameters:
      - description: GUID of the connection
        explode: false
        in: path
        name: connection_identifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchConnectionDiffStatusResponse'
          description: true/false
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Connections
      - ThoughtSpotRest
      x-accepts:
      - application/json
  /api/rest/2.0/connection/search:
    post:
      description: |2+

         Version: 9.2.0.cl or later


        Gets connection objects.
        Requires `DATAMANAGEMENT` (**Can manage data**) or `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `CAN_CREATE_OR_EDIT_CONNECTIONS` (**Can create/edit Connections**) privilege is required.

        - To get a list of all connections available in the ThoughtSpot system, send the API request without any attributes in the request body.
        - To get the connection objects for a specific type of data warehouse, specify the type in `data_warehouse_types`.
        - To fetch details of a connection object, specify the connection object GUID or name. The `name_pattern` attribute allows passing partial text with `%` for a wildcard match.
        - To get details of the database, schemas, tables, or columns from a data connection object, specify `data_warehouse_object_type`.
        - To get a specific database, schema, table, or column from a connection object, define the object type in `data_warehouse_object_type` and object properties in the `data_warehouse_objects` array. For example, to search for a column, you must pass the database, schema, and table names in the API request.
          Note that in the following example, object properties are set in a hierarchical order (`database` > `schema` > `table` > `column`).

        ```
        {
          "connections": [
            {
              "identifier": "b9d1f2ef-fa65-4a4b-994e-30fa2d57b0c2",
              "data_warehouse_objects": [
                {
                  "database": "NEBULADEV",
                  "schema": "INFORMATION_SCHEMA",
                  "table": "APPLICABLE_ROLES",
                  "column": "ROLE_NAME"
                }
              ]
            }
          ],
          "data_warehouse_object_type": "COLUMN"
        }
        ```

        - To fetch data by `configuration`, specify `data_warehouse_object_type`. For example, to fetch columns from the `DEVELOPMENT` database, specify the `data_warehouse_object_type` as `DATABASE` and define the `configuration` string as `{"database":"DEVELOPMENT"}`. To get column data for a specific table, specify the table, for example,`{"database":"RETAILAPPAREL","table":"PIPES"}`.
        - To query connections by `authentication_type`, specify `data_warehouse_object_type`. Supported values for `authentication_type` are:
          - `SERVICE_ACCOUNT`: For connections that require service account credentials to authenticate to the Cloud Data Warehouse and fetch data.
          - `OAUTH`: For connections that require OAuth credentials to authenticate to the Cloud Data Warehouse and fetch data. Teradata, Oracle, and Presto Cloud Data Warehouses do not support the OAuth authentication type.
          - `IAM`: For connections that have the IAM OAuth set up. This authentication type is supported on Amazon Redshift connections only.
          - `EXTOAUTH`: For connections that have external OAuth set up. ThoughtSpot supports external [OAuth with Microsoft Azure Active Directory (AD)](https://docs.thoughtspot.com/cloud/latest/ connections-snowflake-azure-ad-oauth) and [Okta for Snowflake data connections](https://docs.thoughtspot.com/cloud/latest/connections-snowflake-okta-oauth).
        - To include more details about connection objects in the API response, set `include_details` to `true`.
        - You can also sort the output by field names and filter connections by tags.

        **NOTE**: When filtering connection records by parameters other than `data_warehouse_types` or `tag_identifiers`, ensure that you set `record_size` to `-1` and `record_offset` to `0` for precise results.





      operationId: searchConnection
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/searchConnection_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SearchConnectionResponse'
                type: array
          description: List of connections to the datasource.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Connections
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/connection/update:
    post:
      deprecated: true
      description: "\n Version: 9.2.0.cl or later\n\n\n**Important**: This endpoint\
        \ is deprecated and will be removed from ThoughtSpot in September 2025. ThoughtSpot\
        \ strongly recommends using the\n[Update connection V2](#/http/api-endpoints/connections/update-connection-v2)\
        \ endpoint to update your connection objects.\n\n#### Usage guidelines\n\n\
        Updates a connection object.  \n\nRequires `DATAMANAGEMENT` (**Can manage\
        \ data**) and edit permissions to the connection object, or `ADMINISTRATION`\
        \ (**Can administer ThoughtSpot**) privilege.\nIf [Role-Based Access Control\
        \ (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your\
        \ instance, the `CAN_CREATE_OR_EDIT_CONNECTIONS` (**Can create/edit Connections**)\
        \ privilege is required.\n\nTo update a connection object, pass these parameters\
        \ in your API request:\n\n1. GUID of the connection object.\n2. If you are\
        \ updating tables or database schema of a connection object:\n   a. Add the\
        \ updated JSON map of metadata with database, schema, and tables in `data_warehouse_config`.\n\
        \   b. Set `validate` to `true`.\n3. If you are updating a configuration attribute,\
        \ connection name, or description, you can set `validate` to `false`.\n\n\n\
        \n\n\n"
      operationId: updateConnection
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateConnection_request'
        required: true
      responses:
        "204":
          description: Connection successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Connections
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/connections/{connection_identifier}/update:
    post:
      description: |2+

         Version: 10.4.0.cl or later


        Updates a connection object.

        Requires `DATAMANAGEMENT` (**Can manage data**) and edit permissions to the connection object, or `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `CAN_CREATE_OR_EDIT_CONNECTIONS` (**Can create/edit Connections**) privilege is required.

        To update a connection object, pass these parameters in your API request:

        1. GUID of the connection object.
        2. If you are updating tables or database schema of a connection object:
           a. Add the updated JSON map of metadata with database, schema, and tables in `data_warehouse_config`.
           b. Set `validate` to `true`.
           * A JSON map of configuration attributes, database details, and table properties in `data_warehouse_config` as shown in the following example:

           ```
           {
              "configuration":{
                 "accountName":"thoughtspot_partner",
                 "user":"tsadmin",
                 "password":"TestConn123",
                 "role":"sysadmin",
                 "warehouse":"MEDIUM_WH"
              },
              "externalDatabases":[
                 {
                    "name":"AllDatatypes",
                    "isAutoCreated":false,
                    "schemas":[
                       {
                          "name":"alldatatypes",
                          "tables":[
                             {
                                "name":"allDatatypes",
                                "type":"TABLE",
                                "description":"",
                                "selected":true,
                                "linked":true,
                                "columns":[
                                   {
                                      "name":"CNUMBER",
                                      "type":"INT64",
                                      "canImport":true,
                                      "selected":true,
                                      "isLinkedActive":true,
                                      "isImported":false,
                                      "tableName":"allDatatypes",
                                      "schemaName":"alldatatypes",
                                      "dbName":"AllDatatypes"
                                   },
                                   {
                                      "name":"CDECIMAL",
                                      "type":"INT64",
                                      "canImport":true,
                                      "selected":true,
                                      "isLinkedActive":true,
                                      "isImported":false,
                                      "tableName":"allDatatypes",
                                      "schemaName":"alldatatypes",
                                      "dbName":"AllDatatypes"
                                   }
                                ]
                             }
                          ]
                       }
                    ]
                 }
              ]
           }
           ```

        3. If you are updating a configuration attribute, connection name, or description, you can set `validate` to `false`.
        * A JSON map of configuration attributes in `data_warehouse_config`. The following example shows the configuration attributes for a Snowflake connection:
         ```
         {
            "configuration":{
               "accountName":"thoughtspot_partner",
               "user":"tsadmin",
               "password":"TestConn123",
               "role":"sysadmin",
               "warehouse":"MEDIUM_WH"
            },
            "externalDatabases":[

            ]
         }
         ```





      operationId: updateConnectionV2
      parameters:
      - description: Unique ID or name of the connection.
        explode: false
        in: path
        name: connection_identifier
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateConnectionV2_request'
        required: true
      responses:
        "204":
          description: Connection successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Connections
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/customization/custom-actions:
    post:
      description: "\n Version: 9.6.0.cl or later\n\n\nCreates a custom action that\
        \ appears as a menu action on a saved Answer or Liveboard visualization.\n\
        \nRequires `DEVELOPER` (**Has Developer privilege**) or `ADMINISTRATION` (**Can\
        \ administer ThoughtSpot**) privilege.\nIf [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac)\
        \ is enabled on your instance, the `DEVELOPER` (**Has developer privilege**)\
        \ privilege is required.\n\n#### Usage Guidelines\n\nThe API lets you create\
        \ the following types of custom actions:\n\n* URL-based action     \n  Allows\
        \ pushing data to an external URL.\n* Callback action        \n  Triggers\
        \ a callback to the host application and initiates a response payload on an\
        \ embedded ThoughtSpot instance.\n\nBy default, custom actions are visible\
        \ to only administrator or developer users. To make a custom action available\
        \ to other users, and specify the groups in `group_identifiers`.\n\nBy default,\
        \ the custom action is set as a _global_ action on all visualizations and\
        \ saved Answers. To assign a custom action to specific Liveboard visualization,\
        \ saved Answer, or Worksheet, set `visibility` to `false` in `default_action_config`\
        \ property and specify the GUID or name of the object in `associate_metadata`.\n\
        \nFor more information, see [Custom actions](https://developers.thoughtspot.com/docs/custom-action-intro).\n\
        \n\n\n\n\n"
      operationId: createCustomAction
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createCustomAction_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example_1:
                  value:
                    action_details:
                      CALLBACK:
                        reference: customaction
                    default_action_config:
                      visibility: true
                    id: 3d3cad0f-e57b-4faa-8e24-da596c727ee0
                    metadata_association: []
                    name: customactionsample
                    user_groups: []
              schema:
                $ref: '#/components/schemas/ResponseCustomAction'
          description: Custom action created successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Custom Action
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/customization/custom-actions/{custom_action_identifier}/delete:
    post:
      description: |2+

         Version: 9.6.0.cl or later


        Removes the custom action specified in the API request.

        Requires `DEVELOPER` (**Has Developer privilege**) or `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `DEVELOPER` (**Has developer privilege**) privilege is required.





      operationId: deleteCustomAction
      parameters:
      - description: Unique ID or name of the custom action.
        explode: false
        in: path
        name: custom_action_identifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Custom action is successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Custom Action
      - ThoughtSpotRest
      x-accepts:
      - application/json
  /api/rest/2.0/customization/custom-actions/search:
    post:
      description: |2+

         Version: 9.6.0.cl or later


        Gets custom actions configured on the cluster.

        Requires `DEVELOPER` (**Has Developer privilege**) or `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `DEVELOPER` (**Has developer privilege**) privilege is required.





      operationId: searchCustomActions
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/searchCustomActions_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example_1:
                  value:
                  - action_details:
                      CALLBACK:
                        reference: LEDE
                    default_action_config:
                      visibility: true
                    id: c59262df-cf9e-4947-96fa-52d494688797
                    name: LEDE
              schema:
                items:
                  $ref: '#/components/schemas/ResponseCustomAction'
                type: array
          description: Custom action search is successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Custom Action
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/customization/custom-actions/{custom_action_identifier}/update:
    post:
      description: |2+

         Version: 9.6.0.cl or later


        Updates a custom action.

        Requires `DEVELOPER` (**Has Developer privilege**) or `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `DEVELOPER` (**Has developer privilege**) privilege is required.

        #### Usage Guidelines

        The API allows you to modify the following properties:

        * Name of the custom action
        * Action availability to groups
        * Association to metadata objects
        * Authentication settings for a URL-based action

        For more information, see [Custom actions](https://developers.thoughtspot.com/docs/custom-action-intro).





      operationId: updateCustomAction
      parameters:
      - description: Unique ID or name of the custom action.
        explode: false
        in: path
        name: custom_action_identifier
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateCustomAction_request'
        required: true
      responses:
        "204":
          description: Custom action updated successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Custom Action
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/metadata/answer/data:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Fetches data from a saved Answer.

        Requires at least view access to the saved Answer.

        The `record_size` attribute determines the number of records to retrieve in an API call. For more information about pagination, record size, and maximum row limit, see [Pagination and record size settings](https://developers.thoughtspot.com/docs/fetch-data-and-report-apis#_pagination_settings_for_data_and_report_apis).




      operationId: fetchAnswerData
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fetchAnswerData_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnswerDataResponse'
          description: Fetching data of specified metadata object is successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Data
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/metadata/liveboard/data:
    post:
      description: "\n Version: 9.0.0.cl or later\n\n\nGets data from a Liveboard\
        \ object and its visualization.  \n\nRequires at least view access to the\
        \ Liveboard.\n\n#### Usage guidelines\n\nIn the request body, specify the\
        \ GUID or name of the Liveboard. To get data for specific visualizations,\
        \ add the GUIDs or names of the visualizations in the API request.\n\nTo include\
        \ unsaved changes in the report, pass the `transient_pinboard_content` script\
        \ generated from the `getExportRequestForCurrentPinboard` method in the Visual\
        \ Embed SDK. Upon successful execution, the API returns the report with unsaved\
        \ changes. If the new Liveboard experience mode, the transient content includes\
        \ ad hoc changes to visualizations such as sorting, toggling of legends, and\
        \ data drill down.\n\nFor more information, and see [Liveboard data API](https://developers.thoughtspot.com/docs/fetch-data-and-report-apis#_fetch_liveboard_data_api).\n\
        \n\n\n\n"
      operationId: fetchLiveboardData
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fetchLiveboardData_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveboardDataResponse'
          description: Fetching data of specified metadata object is successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Data
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/searchdata:
    post:
      description: "\n Version: 9.0.0.cl or later\n\n\nGenerates an Answer from a\
        \ given data source.\n\nRequires at least view access to the data source object\
        \ (Worksheet or View).\n\n#### Usage guidelines\n\nTo search data, specify\
        \ the data source GUID in `logical_table_identifier`. The data source can\
        \ be a Worksheet, View, Table, or SQL view.\n\nPass search tokens in the `query_string`\
        \ attribute in the API request as shown in the following example:\n\n```\n\
        {\n  \"query_string\": \"[sales] by [store]\",\n  \"logical_table_identifier\"\
        : \"cd252e5c-b552-49a8-821d-3eadaa049cca\",\n}\n```\n\nFor more information\
        \ about the `query_string` format and data source attribute, see [Search data\
        \ API](https://developers.thoughtspot.com/docs/fetch-data-and-report-apis#_search_data_api).\
        \  \n\nThe `record_size` attribute determines the number of records to retrieve\
        \ in an API call. For more information about pagination, record size, and\
        \ maximum row limit, see [Pagination and record size settings](https://developers.thoughtspot.com/docs/fetch-data-and-report-apis#_pagination_settings_for_data_and_report_api).\
        \  \n\n\n\n\n"
      operationId: searchData
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/searchData_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchDataResponse'
          description: Fetching data of specified metadata object is successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Data
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/dbt/dbt-connection:
    post:
      description: |2+

         Version: 9.9.0.cl or later


        Creates a DBT connection object in ThoughtSpot.

        Requires `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege or `DATAMANAGEMENT` (**Can manage data**) privilege.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the following Data control privileges may be required:

        - `CAN_MANAGE_CUSTOM_CALENDAR`(**Can manage custom calendars**)
        - `CAN_CREATE_OR_EDIT_CONNECTIONS` (**Can create/edit Connections**)
        - `CAN_MANAGE_WORKSHEET_VIEWS_TABLES` (**Can manage data models**)

        #### About create DBT connection
        DBT connection in ThoughtSpot is used by the user to define DBT credentials for cloud . The API needs  embrace connection, embrace database name, DBT url, import type, DBT account identifier, DBT project identifier, DBT access token and environment details (or) embrace connection, embrace database name, import type, file_content to create a connection object. To know more about DBT, see ThoughtSpot Product Documentation.





      operationId: dbtConnection
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dbtConnection_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Succesfully created DBT Connection.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - DBT
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/dbt/generate-sync-tml:
    post:
      description: |2+

         Version: 9.9.0.cl or later


        Resynchronize the existing list of models, tables, worksheet tml’s and import them to Thoughtspot based on the DBT connection object.

        Requires `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege or `DATAMANAGEMENT` (**Can manage data**) privilege, along with an existing DBT connection.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the following data control privileges may be required:

        - `CAN_MANAGE_CUSTOM_CALENDAR`(**Can manage custom calendars**)
        - `CAN_CREATE_OR_EDIT_CONNECTIONS` (**Can create/edit Connections**)
        - `CAN_MANAGE_WORKSHEET_VIEWS_TABLES` (**Can manage data models**)





      operationId: dbtGenerateSyncTml
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dbtGenerateSyncTml_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Sync Table and Worksheet TML's are successfully generated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - DBT
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/dbt/generate-tml:
    post:
      description: |2+

         Version: 9.9.0.cl or later


        Generate required table and worksheet and import them.

        Requires `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege or `DATAMANAGEMENT` (**Can manage data**) privilege, along with an existing DBT connection.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the following data control privileges may be required:

        - `CAN_MANAGE_CUSTOM_CALENDAR`(**Can manage custom calendars**)
        - `CAN_CREATE_OR_EDIT_CONNECTIONS` (**Can create/edit Connections**)
        - `CAN_MANAGE_WORKSHEET_VIEWS_TABLES` (**Can manage data models**)

        #### About generate TML
        Models and Worksheets to be imported can be selected by the user as part of the API.





      operationId: dbtGenerateTml
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dbtGenerateTml_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Required Table and Worksheet TML's are successfully generated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - DBT
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/dbt/search:
    post:
      description: |2+

         Version: 9.9.0.cl or later


        Gets a list of DBT connection objects by user and organization, available on the ThoughtSpot system.

        Requires `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege or `DATAMANAGEMENT` (**Can manage data**) privilege.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the following Data control privileges may be required:

        - `CAN_MANAGE_CUSTOM_CALENDAR`(**Can manage custom calendars**)
        - `CAN_CREATE_OR_EDIT_CONNECTIONS` (**Can create/edit Connections**)
        - `CAN_MANAGE_WORKSHEET_VIEWS_TABLES` (**Can manage data models**)

        #### About search DBT connection
        To get details of a specific DBT connection identifier, database connection identifier, database connection name, database name, project name, project identifier, environment identifier , import type and author.





      operationId: dbtSearch
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DbtSearchResponse'
                type: array
          description: Retrieved list of DBT connections successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - DBT
      - ThoughtSpotRest
      x-accepts:
      - application/json
  /api/rest/2.0/dbt/{dbt_connection_identifier}/delete:
    post:
      description: |2+

         Version: 9.9.0.cl or later


        Removes the specified DBT connection object from the ThoughtSpot system.

        Requires `ADMINISTRATION` (**Can administer ThoughtSpot**) or `DATAMANAGEMENT` (**Can manage data ThoughtSpot**) privilege.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the following Data control privileges may be required:

        - `CAN_MANAGE_CUSTOM_CALENDAR`(**Can manage custom calendars**)
        - `CAN_CREATE_OR_EDIT_CONNECTIONS` (**Can create/edit Connections**)
        - `CAN_MANAGE_WORKSHEET_VIEWS_TABLES` (**Can manage data models**)





      operationId: deleteDbtConnection
      parameters:
      - description: Unique ID of the DBT Connection.
        explode: false
        in: path
        name: dbt_connection_identifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: DBT Connection successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - DBT
      - ThoughtSpotRest
      x-accepts:
      - application/json
  /api/rest/2.0/dbt/update-dbt-connection:
    post:
      description: |2+

         Version: 9.9.0.cl or later


        Updates a DBT connection object.

        Requires `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege or `DATAMANAGEMENT` (**Can manage data ThoughtSpot**) privilege, along with an existing DBT connection.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the following data control privileges may be required:

        - `CAN_MANAGE_CUSTOM_CALENDAR`(**Can manage custom calendars**)
        - `CAN_CREATE_OR_EDIT_CONNECTIONS` (**Can create/edit Connections**)
        - `CAN_MANAGE_WORKSHEET_VIEWS_TABLES` (**Can manage data models**)

        #### About update DBT connection
        You can modify DBT connection object properties such as embrace connection name, embrace database name, import type, account identifier, access token, project identifier and environment (or) embrace connection, embrace database name, import type, file_content settings.





      operationId: updateDbtConnection
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateDbtConnection_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: DBT Connection successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - DBT
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/groups/create:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Creates a group object in ThoughtSpot.

        Requires `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `GROUP_ADMINISTRATION` (**Can manage groups**) privilege is required.

        #### About groups
        Groups in ThoughtSpot are used by the administrators to define privileges and organize users based on their roles and access requirements. To know more about groups and privileges, see [ThoughtSpot Product Documentation](https://docs.thoughtspot.com/cloud/latest/groups-privileges).

        #### Supported operations

        The API endpoint lets you perform the following operations:

        * Assign privileges
        * Add users
        * Define sharing visibility
        * Add sub-groups
        * Assign a default Liveboard





      operationId: createUserGroup
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUserGroup_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupResponse'
          description: User group successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Groups
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/groups/{group_identifier}/delete:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Removes the specified group object from the ThoughtSpot system.

        Requires `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `GROUP_ADMINISTRATION` (**Can manage groups**) privilege is required.





      operationId: deleteUserGroup
      parameters:
      - description: GUID or name of the group.
        explode: false
        in: path
        name: group_identifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: User group successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Groups
      - ThoughtSpotRest
      x-accepts:
      - application/json
  /api/rest/2.0/groups/import:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Imports group objects from external databases into ThoughtSpot.

        Requires `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `GROUP_ADMINISTRATION` (**Can manage groups**) privilege is required.

        During the import operation:

        * If the specified group is not available in ThoughtSpot, it will be added to ThoughtSpot.
        * If `delete_unspecified_groups` is set to `true`, the groups not specified in the API request, excluding administrator and system user groups, are deleted.
        * If the specified groups are already available in ThoughtSpot, the object properties of these groups are modified and synchronized as per the input data in the API request.

        A successful API call returns the object that represents the changes made in the ThoughtSpot system.





      operationId: importUserGroups
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/importUserGroups_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportUserGroupsResponse'
          description: Import user groups operation successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Groups
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/groups/search:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Gets a list of user group objects from the ThoughtSpot system.

        To get details of a specific user group, specify the user group GUID or name. You can also filter the API response based on User ID, Org ID, Role ID, type of group, sharing visibility, privileges assigned to the group, and the Liveboard IDs assigned to the users in the group.

        Available to all users. Users with `ADMINISTRATION` (**Can administer ThoughtSpot**) privileges can view all users properties.

        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `GROUP_ADMINISTRATION` (**Can manage groups**) privilege is required.

        **NOTE**: If you do not get precise results, try setting `record_size` to `-1` and `record_offset` to `0`.





      operationId: searchUserGroups
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/searchUserGroups_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserGroupResponse'
                type: array
          description: User group search result.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Groups
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/groups/{group_identifier}/update:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Updates the properties of a group object in ThoughtSpot.

        Requires `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `GROUP_ADMINISTRATION` (**Can manage groups**) privilege is required.

        #### Supported operations

        This API endpoint lets you perform the following operations in a single API request:

        * Edit [privileges](https://developers.thoughtspot.com/docs/?pageid=api-user-management#group-privileges)
        * Add or remove users
        * Change sharing visibility settings
        * Add or remove sub-groups
        * Assign a default Liveboard  or update the existing settings





      operationId: updateUserGroup
      parameters:
      - description: GUID or name of the group.
        explode: false
        in: path
        name: group_identifier
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateUserGroup_request'
        required: true
      responses:
        "204":
          description: User group successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Groups
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/logs/fetch:
    post:
      description: "\n Version: 9.0.0.cl or later\n\n\nFetches security audit logs.\
        \  \n\nRequires `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.\n\
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac)\
        \ is enabled on your instance, the [Admin Control](https://developers.thoughtspot.com/docs/rbac#_admin_control)\
        \ privileges are required.\n\n\n#### Usage guidelines\n\nBy default, the API\
        \ retrieves logs for the last 24 hours. You can set a custom duration in EPOCH\
        \ time. Make sure the log duration specified in your API request doesn’t exceed\
        \ 24 hours. If you must fetch logs for a longer time range, modify the duration\
        \ and make multiple sequential API requests.\n\nUpon successful execution,\
        \ the API returns logs with the following information:\n* timestamp of the\
        \ event\n* event ID\n* event type\n* name and GUID of the user\n* IP address\
        \ of ThoughtSpot instance\n\nFor more information see [Audit logs Documentation](https://developers.thoughtspot.com/docs/audit-logs).\n\
        \n\n\n\n\n"
      operationId: fetchLogs
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fetchLogs_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LogResponse'
                type: array
          description: Log fetched successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Log
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/metadata/worksheets/convert:
    post:
      description: "\nConvert worksheets to models \n  Version: 10.6.0.cl or later\n\
        \n\n## Prerequisites\n- **Privileges Required:**\n  - `DATAMANAGEMENT` (Can\
        \ manage data) or `ADMINISTRATION` (Can administer ThoughtSpot).\n- **Additional\
        \ Privileges (if RBAC is enabled):**\n  - `CAN_MANAGE_WORKSHEET_VIEWS_TABLES`\
        \ (Can manage data models).\n\n---\n\n## Usage Guidelines\n\n### Parameters\n\
        \n1. **worksheet_ids**  \n   - **Description:** A comma-separated list of\
        \ GUIDs (Globally Unique Identifiers) specifying the Worksheets to be converted.\
        \  \n   - **Usage:**  \n     - Used only when `convert_all` is set to `false`.\
        \  \n     - Leave empty or omit when `convert_all` is set to `true`.\n\n2.\
        \ **exclude_worksheet_ids**  \n   - **Description:** A comma-separated list\
        \ of GUIDs specifying Worksheets to be excluded from conversion.  \n   - **Usage:**\
        \  \n     - Useful when `convert_all` is set to `true` and specific Worksheets\
        \ should not be converted.\n\n3. **convert_all**  \n   - **Description:**\
        \ Sets the scope of conversion.\n   - **Options:**  \n     - `true`: Converts\
        \ all Worksheets in the system, except those specified in `exclude_worksheet_ids`.\
        \  \n     - `false`: Converts only the Worksheets listed in `worksheet_ids`.\n\
        \n4. **apply_changes**  \n   - **Description:** Specifies whether to apply\
        \ changes directly to ThoughtSpot or to generate a preview before applying\
        \ any changes.Used for validation of conversion.\n   - **Options:**  \n  \
        \   - `true`: Applies conversion changes directly to ThoughtSpot.\n     -\
        \ `false`: Generates only a preview of the changes and does not apply any\
        \ changes to ThoughtSpot\n\n---\n\n## Best Practices\n\n1. **Backup Before\
        \ Conversion:**  \n   Always export metadata as a backup before initiating\
        \ the conversion process\n\n2. **Partial Conversion for Testing:**  \n   Test\
        \ the conversion process by setting `convert_all` to `false` and specifying\
        \ a small number of `worksheet_ids`.\n\n3. **Verify Dependencies:**  \n  \
        \ Check for dependent objects, such as Tables and Connections, to avoid invalid\
        \ references.\n\n4. **Review Changes:**  \n   Use `apply_changes: false` to\
        \ preview the impact of the conversion before applying changes.\n\n---\n\n\
        ## Examples\n\n### Convert Specific Worksheets\n```json\n{\n  \"worksheet_ids\"\
        : [\"guid1\", \"guid2\", \"guid3\"],\n  \"exclude_worksheet_ids\": [],\n \
        \ \"convert_all\": false,\n  \"apply_changes\": true\n}\n```\n\n### Convert\
        \ All Accessible Worksheets\n```json\n{\n  \"worksheet_ids\": [],\n  \"exclude_worksheet_ids\"\
        : [],\n  \"convert_all\": true,\n  \"apply_changes\": true\n}\n```\n\n###\
        \ Exclude Specific Worksheets While Converting All Accessible Worksheets\n\
        ```json\n{\n  \"worksheet_ids\": [],\n  \"exclude_worksheet_ids\": [\"abc\"\
        ],\n  \"convert_all\": true,\n  \"apply_changes\": true\n}\n```\n\n\n\n\n"
      operationId: convertWorksheetToModel
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/convertWorksheetToModel_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWorksheetToModelConversion'
          description: Conversion of worksheets to model done successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Metadata
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/metadata/copyobject:
    post:
      description: "\nMakes a copy of an Answer or Liveboard saved in Atlas \n  Version:\
        \ 10.3.0.cl or later\n\n\nCreates a copy of a metadata object.\n\nRequires\
        \ at least view access to the metadata object being copied.\n\nUpon successful\
        \ execution, the API creates a copy of the metadata object specified in the\
        \ API request and returns the ID of the new object.\n\n\n\n\n\n"
      operationId: copyObject
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/copyObject_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCopyObject'
          description: Successfully created a copy of the object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Object not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Metadata
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/metadata/delete:
    post:
      description: "\n Version: 9.0.0.cl or later\n\n\nRemoves the specified metadata\
        \ object from the ThoughtSpot system.\n\nRequires edit access to the metadata\
        \ object. \n\n\n\n\n\n"
      operationId: deleteMetadata
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteMetadata_request'
        required: true
      responses:
        "204":
          description: Metadata objects successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Metadata
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/metadata/tml/export:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Exports the [TML](https://docs.thoughtspot.com/cloud/latest/tml) representation of metadata objects in JSON or YAML format.

        Requires `DATADOWNLOADING` (**Can download Data**) and at least view access to the metadata object.

        #### Usage guidelines

        * You can export one or several objects by passing metadata object GUIDs in the `metadata` array.
        * When exporting TML content for a Liveboard or Answer object, you can set `export_associated` to `true` to retrieve TML content for underlying Worksheets, Tables, or Views, including the GUID of each object within the headers. When   `export_associated` is set to `true`, consider retrieving one metadata object at a time.
        * Set `export_fqns` to `true` to add FQNs of the referenced objects in the TML content. For example, if you send an API request to retrieve TML for a Liveboard and its associated objects, the API returns the TML content with FQNs of the referenced Worksheet. Exporting TML with FQNs is useful if ThoughtSpot has multiple objects with the same name and you want to eliminate ambiguity when importing TML files into ThoughtSpot. It eliminates the need for adding FQNs of the referenced objects manually during the import operation.
        * To export only the TML of feedbacks associated with an object, set the GUID of the object as `identifier`, and set the `type` as `FEEDBACK` in the `metadata` array.
        * To export the TML of an object along with the feedbacks associated with it, set the GUID of the object as `identifier`, set the `type` as `LOGIAL_TABLE` in the `metadata` array, and set `export_with_associated_feedbacks` in `export_options` to true.

        For more information, see [TML Documentation](https://developers.thoughtspot.com/docs/tml#_export_a_tml).

        For more information on feedbacks, see [Feedback Documentation](https://docs.thoughtspot.com/cloud/latest/sage-feedback).




      operationId: exportMetadataTML
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportMetadataTML_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Export TMLs of specified metadata objects is successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Metadata
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/metadata/tml/export/batch:
    post:
      description: |2+

         Version: 10.1.0.cl or later


        Exports the [TML](https://docs.thoughtspot.com/cloud/latest/tml) representation of metadata objects in JSON or YAML format.

        ### **Permissions Required**

        Requires `DATAMANAGEMENT` (**Can manage data**) and `USERMANAGEMENT` (**Can manage users**) privileges.

        #### **Usage Guidelines**

        This API is only applicable for `USER`, `GROUP`, and `ROLES` metadata types.

        - `batch_offset` Indicates the starting position within the complete dataset from which the API should begin returning objects. Useful for paginating results efficiently.
        - `batch_size` Specifies the number of objects or items to retrieve in a single request. Helps control response size for better performance.
        - `edoc_format` Defines the format of the TML content. The exported metadata can be in JSON or YAML format.
        - `export_dependent` Specifies whether to include dependent metadata objects in the export. Ensures related objects are also retrieved if needed.
        - `all_orgs_override` Indicates whether the export operation applies across all organizations. Useful for multi-tenant environments where cross-org exports are required.





      operationId: exportMetadataTMLBatched
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportMetadataTMLBatched_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Export TMLs of specified metadata objects is successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Metadata
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/metadata/answer/sql:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Fetches the underlying SQL query data for an Answer object.

        Requires at least view access to the Answer object.

        Upon successful execution, the API returns the SQL queries for the specified object as shown in this example:
        ```
        {
           "metadata_id":"8fbe44a8-46ad-4b16-8d39-184b2fada490",
           "metadata_name":"Total sales",
           "metadata_type":"ANSWER",
           "sql_queries":[
              {
                 "metadata_id":"8fbe44a8-46ad-4b16-8d39-184b2fada490",
                 "metadata_name":"Total sales -test",
                 "sql_query":"SELECT \n  \"ta_1\".\"REGION\" \"ca_1\", \n  \"ta_2\".\"PRODUCTNAME\" \"ca_2\", \n  \"ta_1\".\"STORENAME\" \"ca_3\", \n  CASE\n    WHEN sum(\"ta_3\".\"SALES\") IS NOT NULL THEN sum(\"ta_3\".\"SALES\")\n    ELSE 0\n  END \"ca_4\", \n  CASE\n    WHEN sum(\"ta_3\".\"QUANTITYPURCHASED\") IS NOT NULL THEN sum(\"ta_3\".\"QUANTITYPURCHASED\")\n    ELSE 0\n  END \"ca_5\"\nFROM \"RETAILAPPAREL\".\"PUBLIC\".\"FACT_RETAPP_SALES\" \"ta_3\"\n  JOIN \"RETAILAPPAREL\".\"PUBLIC\".\"DIM_RETAPP_STORES\" \"ta_1\"\n    ON \"ta_3\".\"STOREID\" = \"ta_1\".\"STOREID\"\n  JOIN \"RETAILAPPAREL\".\"PUBLIC\".\"DIM_RETAPP_PRODUCTS\" \"ta_2\"\n    ON \"ta_3\".\"PRODUCTID\" = \"ta_2\".\"PRODUCTID\"\nGROUP BY \n  \"ca_1\", \n  \"ca_2\", \n  \"ca_3\"\n"
              }
           ]
        }
        ```





      operationId: fetchAnswerSqlQuery
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fetchAnswerSqlQuery_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlQueryResponse'
          description: Fetching SQL query of specified metadata object is successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Metadata
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/metadata/tml/async/status:
    post:
      description: "\n Version: 10.4.0.cl or later\n\n\nGets information about the\
        \ status of the TML async import task scheduled using the `/api/rest/2.0/metadata/tml/async/import`\
        \ API call.\n\nTo fetch the task details, specify the ID of the TML async\
        \ import task.  \n\nRequires access to the task ID. The API allows users who\
        \ initiated the asynchronous TML import via `/api/rest/2.0/metadata/tml/async/import`\
        \ to view the status of their tasks.  Users with administration privilege\
        \ can view the status of all import tasks initiated by the users in their\
        \ Org.\n\n#### Usage guidelines\n\nSee [TML API Documentation](https://developers.thoughtspot.com/docs/tml#_fetch_status_of_the_tml_import_task)\
        \ for usage guidelines.\n\n\n\n\n"
      operationId: fetchAsyncImportTaskStatus
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fetchAsyncImportTaskStatus_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAsyncImportStatusResponse'
          description: Async TML Import Task statuses fetched successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Metadata
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/metadata/liveboard/sql:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Fetches the underlying SQL query data for a Liveboard object and its visualizations.

        Requires at least view access to the Liveboard object.

        To get SQL query data for a Liveboard, specify the GUID of the Liveboard. Optionally, you can add an array of visualization GUIDs to retrieve the SQL query data for visualizations in the Liveboard.

        Upon successful execution, the API returns the SQL queries for the specified object as shown in this example:
        ```
        {
          "metadata_id": "fa68ae91-7588-4136-bacd-d71fb12dda69",
          "metadata_name": "Total Sales",
          "metadata_type": "LIVEBOARD",
          "sql_queries": [
            {
              "metadata_id": "b3b6d2b9-089a-490c-8e16-b144650b7843",
              "metadata_name": "Total quantity purchased, Total sales by region",
              "sql_query": "SELECT \n  \"ta_1\".\"REGION\" \"ca_1\", \n  CASE\n    WHEN sum(\"ta_2\".\"QUANTITYPURCHASED\") IS NOT NULL THEN sum(\"ta_2\".\"QUANTITYPURCHASED\")\n    ELSE 0\n  END \"ca_2\", \n  CASE\n    WHEN sum(\"ta_2\".\"SALES\") IS NOT NULL THEN sum(\"ta_2\".\"SALES\")\n    ELSE 0\n  END \"ca_3\"\nFROM \"RETAILAPPAREL\".\"PUBLIC\".\"FACT_RETAPP_SALES\" \"ta_2\"\n  JOIN \"RETAILAPPAREL\".\"PUBLIC\".\"DIM_RETAPP_STORES\" \"ta_1\"\n    ON \"ta_2\".\"STOREID\" = \"ta_1\".\"STOREID\"\nGROUP BY \"ca_1\""
            }
          ]
        }
        ```





      operationId: fetchLiveboardSqlQuery
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fetchLiveboardSqlQuery_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlQueryResponse'
          description: Fetching SQL query of specified metadata object is successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Metadata
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/metadata/tml/import:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Imports [TML](https://docs.thoughtspot.com/cloud/latest/tml) files into ThoughtSpot.

        Requires `DATAMANAGEMENT` (**Can manage data**) or `ADMINISTRATION` (**Can administer ThoughtsSpot**) privilege.

        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the following Data control privileges may be required:
        - `CAN_CREATE_OR_EDIT_CONNECTIONS` (**Can create/edit Connections**)
        - `CAN_MANAGE_WORKSHEET_VIEWS_TABLES` (**Can manage data models**)

        #### Usage guidelines

        *  Import all related objects in a single TML Import API call. For example, Tables that use the same Connection object and Worksheets connected to these Tables.
        * Include the `fqn` property to distinguish objects that have the same name.
          For example, if you have multiple Connections or Worksheets with the same name on ThoughtSpot and the Connection or Worksheet referenced in your TML file does not have a unique name to distinguish, it may result in invalid object references.
          Adding `fqn` helps ThoughtSpot differentiate a Table from another with the same name.
          We recommend [exporting TML with FQNs](#/http/api-endpoints/metadata/export-metadata-tml) and using these during the import operation.
        * You can upload multiple TML files at a time.
          If you import a Worksheet along with Liveboards, Answers, and other dependent objects in a single API call, the imported objects will be immediately available for use.
          When you import only a Worksheet object, it may take some time for the Worksheet to become available in the ThoughtSpot system. Please wait for a few minutes, and then proceed to create an Answer and Liveboard from the newly imported Worksheet.

        For more information, see [TML Documentation](https://developers.thoughtspot.com/docs/tml#_import_a_tml).





      operationId: importMetadataTML
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/importMetadataTML_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Import metadata objects using specified TMLs is successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Metadata
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/metadata/tml/async/import:
    post:
      description: |2+

         Version: 10.4.0.cl or later


        Schedules a task to import [TML](https://docs.thoughtspot.com/cloud/latest/tml) files into ThoughtSpot. You can use this API endpoint to process TML objects asynchronously when importing TMLs of large and complex metadata objects into ThoughtSpot. Unlike the synchronous import TML operation, the API processes TML data in the background and returns a task ID, which can be used to check the status of the import task via `/api/rest/2.0/metadata/tml/async/status` API endpoint.

        Requires `DATAMANAGEMENT` (**Can manage data**) or `ADMINISTRATION` (**Can administer ThoughtsSpot**) privilege, and edit access to the TML objects.

        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the following Data control privileges may be required:
        - `CAN_CREATE_OR_EDIT_CONNECTIONS` (**Can create/edit Connections**)
        - `CAN_MANAGE_WORKSHEET_VIEWS_TABLES` (**Can manage data models**)

        #### Usage guidelines

        See [Async TML API Documentation](https://developers.thoughtspot.com/docs/tml#_import_tml_objects_asynchronously) for usage guidelines.





      operationId: importMetadataTMLAsync
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/importMetadataTMLAsync_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportEPackAsyncTaskStatus'
          description: Async TML Import Task submitted successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Metadata
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/metadata/search:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Gets a list of metadata objects available on the ThoughtSpot system.

        This API endpoint is available to all users who have view access to the object. Users with `ADMINISTRATION` (**Can administer ThoughtSpot**) privileges can view data for all metadata objects, including users and groups.

        #### Usage guidelines

        - To get all metadata objects, send the API request without any attributes.
        - To get metadata objects of a specific type, set the `type` attribute. For example, to fetch a Worksheet, set the type as `LOGICAL_TABLE`.
        - To get a specific metadata object, specify the GUID.
        - To customize your search and filter the API response, you can use several parameters.
          You can search for objects created or modified by specific users, by tags applied to the objects, or by using the include parameters like `include_auto_created_objects`, `include_dependent_objects`, `include_headers`, `include_incomplete_objects`, and so on.
          You can also define sorting options to sort the data retrieved in the API response.
        - To get discoverable objects when linientmodel is enabled you can use `include_discoverable_objects` as true else false. Default value is true.

        **NOTE**: The following parameters support pagination of metadata records:

        - `tag_identifiers`
        - `type`
        - `created_by_user_identifiers`
        - `modified_by_user_identifiers`
        - `owned_by_user_identifiers`
        - `exclude_objects`
        - `include_auto_created_objects`
        - `favorite_object_options`
        If you are using other parameters to search metadata, set `record_size` to `-1` and `record_offset` to `0`.





      operationId: searchMetadata
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/searchMetadata_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MetadataSearchResponse'
                type: array
          description: Metadata objects search result.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Metadata
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/metadata/headers/update:
    post:
      description: "\nUpdate header attributes for a given list of header objects.\
        \ \n Version: 10.6.0.cl or later\n\n\n## Prerequisites\n- **Privileges Required:**\n\
        \  - `DATAMANAGEMENT` (Can manage data) or `ADMINISTRATION` (Can administer\
        \ ThoughtSpot).\n- **Additional Privileges (if RBAC is enabled):**\n  - `ORG_ADMINISTRATION`\
        \ (Can manage orgs).\n\n---\n\n## Usage Guidelines\n\n### Parameters\n\n1.\
        \ **headers_update**  \n   - **Description:** List of header objects with\
        \ their attributes to be updated. Each object contains a list of attributes\
        \ to be updated in the header.\n   - **Usage:**\n      - You must provide\
        \ either `identifier` or `obj_identifier`, but not both. Both fields cannot\
        \ be empty.\n      - When `org_identifier` is set to `-1`, only the `identifier`\
        \ value is accepted; `obj_identifier` is not allowed.\n\n2. **org_identifier**\
        \  \n   - **Description:** GUID (Globally Unique Identifier) or name of the\
        \ organization.  \n   - **Usage:**\n     - Leaving this field empty assumes\
        \ that the changes should be applied to the current organization \n     -\
        \ Provide `org_guid` or `org_name` to uniquely identify the organization where\
        \ changes need to be applied. .\n     - Provide `-1` if changes have to be\
        \ applied across all the org.\n\n---\n\n## Note\nCurrently, this API is enabled\
        \ only for updating the `obj_identifier` attribute. Only `text` will be allowed\
        \ in attribute's value.\n\n## Best Practices\n\n1. **Backup Before Conversion:**\
        \  \n   Always export metadata as a backup before initiating the update process\n\
        \n---\n\n## Examples\n\n### Only `identifier` is given \n```json\n{\n  \"\
        headers_update\":\n  [\n    {\n      \"identifier\": \"guid_1\",\n      \"\
        obj_identifier\": \"\",\n      \"type\": \"LOGICAL_COLUMN\",\n      \"attributes\"\
        :\n      [\n        {\n          \"name\": \"obj_id\",\n          \"value\"\
        : \"custom_object_id\"\n        }\n      ]\n    }\n  ],\n  \"org_identifier\"\
        : \"orgGuid\"\n}\n```\n\n### Only `obj_identifier` is given\n```json\n{\n\
        \  \"headers_update\":\n  [\n    {\n      \"obj_identifier\": \"custom_object_id\"\
        ,\n      \"type\": \"ANSWER\",\n      \"attributes\":\n      [\n        {\n\
        \          \"name\": \"obj_id\",\n          \"value\": \"custom_object_id\"\
        \n        }\n      ]\n    }\n  ],\n  \"org_identifier\": \"orgName\"\n}\n\
        ```\n\n### Executing update for all org `-1`\n```json\n{\n  \"headers_update\"\
        :\n  [\n    {\n      \"identifier\": \"guid_1\",\n      \"type\": \"ANSWER\"\
        ,\n      \"attributes\":\n      [\n        {\n          \"name\": \"obj_id\"\
        ,\n          \"value\": \"custom_object_id\"\n        }\n      ]\n    }\n\
        \  ],\n  \"org_identifier\": -1\n}\n```\n\n### Optional `type` is not provided\n\
        ```json\n{\n  \"headers_update\":\n  [\n    {\n      \"identifier\": \"guid_1\"\
        ,\n      \"attributes\":\n      [\n        {\n          \"name\": \"obj_id\"\
        ,\n          \"value\": \"custom_object_id\"\n        }\n      ]\n    }\n\
        \  ],\n  \"org_identifier\": -1\n}\n```\n\n\n\n\n"
      operationId: updateMetadataHeader
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateMetadataHeader_request'
        required: true
      responses:
        "204":
          description: Headers update was successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Metadata
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/metadata/update-obj-id:
    post:
      description: "\nUpdate object IDs for given metadata objects. \n Version: 10.8.0.cl\
        \ or later\n\n\n## Prerequisites\n- **Privileges Required:**\n  - `DATAMANAGEMENT`\
        \ (Can manage data) or `ADMINISTRATION` (Can administer ThoughtSpot).\n- **Additional\
        \ Privileges (if RBAC is enabled):**\n  - `ORG_ADMINISTRATION` (Can manage\
        \ orgs).\n\n---\n\n## Usage Guidelines\n\n### Parameters\n\n1. **metadata**\
        \  \n   - **Description:** List of metadata objects to update their object\
        \ IDs.\n   - **Usage:**\n      - Use either `current_obj_id` alone OR use\
        \ `metadata_identifier` with `type` (when needed).\n      - When using `metadata_identifier`,\
        \ the `type` field is required if using a name instead of a GUID.\n      -\
        \ The `new_obj_id` field is always required.\n\n---\n\n## Note\nThis API is\
        \ specifically designed for updating object IDs of metadata objects. It internally\
        \ uses the header update mechanism to perform the changes.\n\n## Best Practices\n\
        \n1. **Backup Before Update:**  \n   Always export metadata as a backup before\
        \ initiating the update process.\n\n2. **Validation:**\n   - When using `current_obj_id`,\
        \ ensure it matches the existing object ID exactly.\n   - When using `metadata_identifier`\
        \ with a name, ensure the `type` is specified correctly.\n   - Verify that\
        \ the `new_obj_id` follows your naming conventions and is unique within your\
        \ system.\n\n---\n\n## Examples\n\n### Using current_obj_id\n```json\n{\n\
        \  \"metadata\": [\n    {\n      \"current_obj_id\": \"existing_object_id\"\
        ,\n      \"new_obj_id\": \"new_object_id\"\n    }\n  ]\n}\n```\n\n### Using\
        \ metadata_identifier with GUID\n```json\n{\n  \"metadata\": [\n    {\n  \
        \    \"metadata_identifier\": \"01234567-89ab-cdef-0123-456789abcdef\",\n\
        \      \"new_obj_id\": \"new_object_id\"\n    }\n  ]\n}\n```\n\n### Using\
        \ metadata_identifier with name and type\n```json\n{\n  \"metadata\": [\n\
        \    {\n      \"metadata_identifier\": \"My Answer\",\n      \"type\": \"\
        ANSWER\",\n      \"new_obj_id\": \"new_object_id\"\n    }\n  ]\n}\n```\n\n\
        ### Multiple objects update\n```json\n{\n  \"metadata\": [\n    {\n      \"\
        current_obj_id\": \"existing_object_id_1\",\n      \"new_obj_id\": \"new_object_id_1\"\
        \n    },\n    {\n      \"metadata_identifier\": \"My Worksheet\",\n      \"\
        type\": \"LOGICAL_TABLE\",\n      \"new_obj_id\": \"new_object_id_2\"\n  \
        \  }\n  ]\n}\n```\n\n\n\n\n\n"
      operationId: updateMetadataObjId
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateMetadataObjId_request'
        required: true
      responses:
        "204":
          description: Headers update was successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Metadata
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/orgs/create:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Creates an Org object.

        To use this API, the [Orgs](https://docs.thoughtspot.com/cloud/latest/orgs-overview) feature must be enabled in your cluster.

        Requires cluster administration (**Can administer Org**) privileges.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `ORG_ADMINISTRATION` (**Can manage Orgs**) privilege is required.





      operationId: createOrg
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOrg_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example_1:
                  value:
                    id: 1980035173
                    name: test_org
                    status: ACTIVE
                    description: test_org
                    visibility: SHOW
              schema:
                $ref: '#/components/schemas/OrgResponse'
          description: Organization successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Orgs
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/orgs/{org_identifier}/delete:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Deletes an Org object from the ThoughtSpot system.

        Requires cluster administration (**Can administer Org**) privilege.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `ORG_ADMINISTRATION` (**Can manage Orgs**) privilege is required.

        When you delete an Org, all its users and objects created in that Org context are removed. However, if the users in the deleted Org also exists in other Orgs, they are removed only from the deleted Org.





      operationId: deleteOrg
      parameters:
      - description: ID or name of the Org
        explode: false
        in: path
        name: org_identifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Organization successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Orgs
      - ThoughtSpotRest
      x-accepts:
      - application/json
  /api/rest/2.0/orgs/search:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Gets a list of Orgs configured on the ThoughtSpot system. To get details of a specific Org, specify the Org ID or name. You can also pass parameters such as status, visibility, and user identifiers to get a specific list of Orgs.

        Requires cluster administration (**Can administer Org**) privileges.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `ORG_ADMINISTRATION` (**Can manage Orgs**) privilege is required.





      operationId: searchOrgs
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/searchOrgs_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example_1:
                  value:
                  - id: 0
                    name: Primary
                    status: ACTIVE
                    description: Primary Org
                    visibility: SHOW
                  - id: 583464508
                    name: test_org
                    status: ACTIVE
                    description: test_org
                    visibility: SHOW
              schema:
                items:
                  $ref: '#/components/schemas/OrgResponse'
                type: array
          description: Organization search result.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Orgs
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/orgs/{org_identifier}/update:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Updates an Org object. You can modify Org properties such as name, description, and user associations.

        Requires cluster administration (**Can administer Org**) privileges.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `ORG_ADMINISTRATION` (**Can manage Orgs**) privilege is required.





      operationId: updateOrg
      parameters:
      - description: ID or name of the Org
        explode: false
        in: path
        name: org_identifier
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateOrg_request'
        required: true
      responses:
        "204":
          description: Organization successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Orgs
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/report/answer:
    post:
      description: "\n Version: 9.0.0.cl or later\n\n\nExports an Answer in the given\
        \ file format. You can download the Answer data as a PDF, PNG, CSV, or XLSX\
        \ file.\n\nRequires at least view access to the Answer.\n\n#### Usage guidelines\n\
        \nIn the request body, the GUID or name of the Answer and set `file_format`.\
        \ The default file format is CSV.\n\n**NOTE**:\n* The downloadable file returned\
        \ in API response file is extensionless. Please rename the downloaded file\
        \ by typing in the relevant extension.\n* HTML rendering is not supported\
        \ for PDF exports of Answers with tables.\n\nOptionally, you can define [runtime\
        \ overrides](https://developers.thoughtspot.com/docs/fetch-data-and-report-apis#_runtime_overrides)\
        \ to apply to the Answer data.\n\nThe `record_size` attribute determines the\
        \ number of records to retrieve in an API call. For more information about\
        \ pagination, record size, and maximum row limit, see [Pagination and record\
        \ size settings](https://developers.thoughtspot.com/docs/fetch-data-and-report-apis#_pagination_settings_for_data_and_report_api).\
        \  \n\n\n\n\n"
      operationId: exportAnswerReport
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportAnswerReport_request'
        required: true
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Export report file of specified metadata object is successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Reports
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/octet-stream
  /api/rest/2.0/report/liveboard:
    post:
      description: "\n Version: 9.0.0.cl or later\n\n\nExports a Liveboard and its\
        \ visualizations in PDF or PNG file format.\n\nRequires at least view access\
        \ to the Liveboard.\n\n#### Usage guidelines\n\nIn the request body, specify\
        \ the GUID or name of the Liveboard. To generate a Liveboard report with specific\
        \ visualizations, add GUIDs or names of the visualizations.\n\nThe default\
        \ `file_format` is PDF. For PDF downloads, you can specify additional parameters\
        \ to customize the page orientation and include or exclude the cover page,\
        \ logo, footer text, and page numbers. Similar customization options are also\
        \ available for PNG output.\n\n**NOTE**: The downloadable file returned in\
        \ API response file is extensionless. Please rename the downloaded file by\
        \ typing in the relevant extension.\n\nOptionally, you can define [runtime\
        \ overrides](https://developers.thoughtspot.com/docs/fetch-data-and-report-apis#_runtime_overrides)\
        \ to apply to the Answer data.\n\nTo include unsaved changes in the report,\
        \ pass the `transient_pinboard_content` script generated from the `getExportRequestForCurrentPinboard`\
        \ method in the Visual Embed SDK. Upon successful execution, the API returns\
        \ the report with unsaved changes, including ad hoc changes to visualizations.\
        \ For more information, see [Liveboard Report API](https://developers.thoughtspot.com/docs/fetch-data-and-report-apis#_liveboard_report_api).\
        \  \n\n\n\n\n"
      operationId: exportLiveboardReport
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportLiveboardReport_request'
        required: true
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Export report file of specified metadata object is successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Reports
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/octet-stream
  /api/rest/2.0/roles/create:
    post:
      description: |2+

         Version: 9.5.0.cl or later


        Creates a Role object in ThoughtSpot.

        Available only if [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance. To create a Role, the `ROLE_ADMINISTRATION` (**Can manage roles**) privilege is required.





      operationId: createRole
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createRole_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
          description: Role successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
      tags:
      - Roles
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/roles/{role_identifier}/delete:
    post:
      description: |2+

         Version: 9.5.0.cl or later


        Deletes a Role object from the ThoughtSpot system.

        Available only if [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance. To delete a Role, the `ROLE_ADMINISTRATION` (**Can manage roles**) privilege is required.





      operationId: deleteRole
      parameters:
      - description: Unique ID or name of the Role. ReadOnly roles cannot be deleted.
        explode: false
        in: path
        name: role_identifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Role successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
      tags:
      - Roles
      - ThoughtSpotRest
      x-accepts:
      - application/json
  /api/rest/2.0/roles/search:
    post:
      description: |2+

         Version: 9.5.0.cl or later


        Gets a list of Role objects from the ThoughtSpot system.

        Available if [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance. To search for Roles, the `ROLE_ADMINISTRATION` (**Can manage roles**) privilege is required.

        To get details of a specific Role object, specify the GUID or name. You can also filter the API response based on user group and Org identifiers, privileges assigned to the Role, and deprecation status.





      operationId: searchRoles
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/searchRoles_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SearchRoleResponse'
                type: array
          description: Roles search result.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
      tags:
      - Roles
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/roles/{role_identifier}/update:
    post:
      description: |2+

         Version: 9.5.0.cl or later


        Updates the properties of a Role object.

        Available only if [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance. To update a Role, the `ROLE_ADMINISTRATION` (**Can manage roles**) privilege is required.





      operationId: updateRole
      parameters:
      - description: Unique ID or name of the Role.
        explode: false
        in: path
        name: role_identifier
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRole_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
          description: Role successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Roles
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/schedules/create:
    post:
      description: "\nCreate schedule. \n  Version: 9.4.0.cl or later\n\n\nCreates\
        \ a Liveboard schedule job.\n\nRequires at least edit access to Liveboards.\
        \ To create a schedule on behalf of another user, you need  `ADMINISTRATION`\
        \ (**Can administer Org**) or `JOBSCHEDULING` (**Can schedule for others**)\
        \ privilege and edit access to the Liveboard.\nIf [Role-Based Access Control\
        \ (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your\
        \ instance, the `JOBSCHEDULING` (**Can schedule for others**) privilege is\
        \ required.\n\n#### Usage guidelines\n\n* The description text is mandatory.\
        \  The description text appears as **Description: <your content>** in the\
        \ Liveboard schedule email notifications.\n* For Liveboards with both charts\
        \ and tables, schedule creation is only supported in PDF and XLS formats.\
        \ Schedules created in CSV formats for such Liveboards will fail to run. If\
        \ `PDF` is set as the `file_format`, enable `pdf_options` to get the correct\
        \ attachment. Not doing so may cause the attachment to be rendered empty.\n\
        * To include only specific visualizations, specify the visualization GUIDs\
        \ in the `visualization_identifiers` array.\n* You can schedule a Liveboard\
        \ job to run periodically by setting frequency parameters. You can set the\
        \ schedule to run daily, weekly, monthly or every n minutes or hours. The\
        \ scheduled job can also be configured to run at a specific time of the day\
        \ or on specific days of the week or month. Please ensure that when setting\
        \ the schedule frequency for _minute of the object_, only values that are\
        \ multiples of 5 are included.\n* If the `frequency` parameters are defined,\
        \ you can set the time zone to a value that matches your server's time zone.\
        \ For example, `US/Central`, `Etc/UTC`, `CET`. The default time zone is `America/Los_Angeles`.\n\
        \nFor more information about Liveboard jobs, see [ThoughtSpot Product Documentation](https://docs.thoughtspot.com/cloud/latest/liveboard-schedule).\n\
        \n\n\n\n"
      operationId: createSchedule
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createSchedule_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSchedule'
          description: Schedule successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Schedules
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/schedules/{schedule_identifier}/delete:
    post:
      description: "\nDeletes a scheduled job. \n  Version: 9.4.0.cl or later\n\n\n\
        Deletes a scheduled Liveboard job.\n\nRequires at least edit access to Liveboard\
        \ or `ADMINISTRATION` (**Can administer Org**) privilege.   \nIf [Role-Based\
        \ Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is\
        \ enabled on your instance, the `JOBSCHEDULING` (**Can schedule for others**)\
        \ privilege is required.\n\n\n\n\n\n"
      operationId: deleteSchedule
      parameters:
      - description: Unique ID or name of the scheduled job.
        explode: false
        in: path
        name: schedule_identifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Schedule successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Schedules
      - ThoughtSpotRest
      x-accepts:
      - application/json
  /api/rest/2.0/schedules/search:
    post:
      description: "\nSearch Schedules \n  Version: 9.4.0.cl or later\n\n\nGets a\
        \ list of scheduled jobs configured for a Liveboard.\n\nTo get details of\
        \ a specific scheduled job, specify the name or GUID of the scheduled job.\n\
        \nRequires at least view access to Liveboards.\n\n**NOTE**: When filtering\
        \ schedules by parameters other than `metadata`, set `record_size` to `-1`\
        \ and `record_offset` to `0` for accurate results.\n\n\n\n\n\n"
      operationId: searchSchedules
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/searchSchedules_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ResponseSchedule'
                type: array
          description: Schedule search result.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Schedules
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/schedules/{schedule_identifier}/update:
    post:
      description: "\nUpdate schedule. \n  Version: 9.4.0.cl or later\n\n\nUpdates\
        \ a scheduled Liveboard job.\n\nRequires at least edit access to Liveboards.\
        \ To update a schedule on behalf of another user, you need `ADMINISTRATION`\
        \ (**Can administer Org**) or `JOBSCHEDULING` (**Can schedule for others**)\
        \ privilege and edit access to the Liveboard.\nIf [Role-Based Access Control\
        \ (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your\
        \ instance, the `JOBSCHEDULING` (**Can schedule for others**) privilege is\
        \ required.\n\nThe API endpoint allows you to pause a scheduled job, change\
        \ the status of a paused job. You can also edit the recipients list, frequency\
        \ of the job, format of the file to send to the recipients in email notifications,\
        \ PDF options, and time zone setting.\n\n\n\n\n\n"
      operationId: updateSchedule
      parameters:
      - description: Unique ID or name of the schedule.
        explode: false
        in: path
        name: schedule_identifier
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateSchedule_request'
        required: true
      responses:
        "204":
          description: Schedule successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Schedules
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/security/metadata/assign:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Transfers the ownership of one or several objects from one user to another.

        Requires `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.

        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `USER_ADMINISTRATION` (**Can manage users**) privilege and edit access to the objects are required.





      operationId: assignChangeAuthor
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assignChangeAuthor_request'
        required: true
      responses:
        "204":
          description: Author assignment for given metadata objects is successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Security
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/security/principals/fetch-permissions:
    post:
      description: "\n Version: 9.0.0.cl or later\n\n\nFetches object permission details\
        \ for a given principal object such as a user and group.\n\nRequires view\
        \ access to the metadata object. \n\n#### Usage guidelines\n\n* To get a list\
        \ of all metadata objects that a user or group can access, specify the `type`\
        \ and GUID or name of the principal.\n* To get permission details for a specific\
        \ object, add the `type` and GUID or name of the metadata object to your API\
        \ request.\n\nUpon successful execution, the API returns a list of metadata\
        \ objects and permission details for each object.  \n\n\n\n\n\n"
      operationId: fetchPermissionsOfPrincipals
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fetchPermissionsOfPrincipals_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example_1:
                  value:
                    principal_permission_details:
                    - principal_id: 7f5e7f87-09a1-487c-a1da-c4bb35e45270
                      principal_name: test_user
                      principal_type: USER
                      principal_sub_type: LOCAL_USER
                      metadata_permission_info:
                      - metadata_type: LIVEBOARD
                        metadata_permissions:
                        - metadata_id: 2ff57a24-cf90-485f-8b4b-45fc17474c6f
                          metadata_name: Learn how to use ThoughtSpot
                          metadata_owner:
                            id: 2ff57a24-cf90-485f-8b4b-45fc17474c6f
                            name: Learn how to use ThoughtSpot
                          metadata_author:
                            id: 59481331-ee53-42be-a548-bd87be6ddd4a
                            name: tsadmin
                          permission: READ_ONLY
                          shared_permission: NO_ACCESS
                          group_permission: []
              schema:
                $ref: '#/components/schemas/PermissionOfPrincipalsResponse'
          description: Fetching permissions of principals is successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Security
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/security/metadata/fetch-permissions:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Fetches permission details for a given metadata object.

        Requires view access to the metadata object.

        #### Usage guidelines

        * To fetch a list of users and groups for a metadata object, specify `type` and GUID or name of the metadata object.
        * To get permission details for a specific user or group, add `type` and GUID or name of the principal object to your API request.

        Upon successful execution, the API returns permission details and principal information for the object specified in the API request.





      operationId: fetchPermissionsOnMetadata
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fetchPermissionsOnMetadata_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example_1:
                  value:
                    metadata_permission_details:
                    - metadata_id: a62a5bf3-9f16-45b2-a174-7d30b3b577a9
                      metadata_name: testing
                      metadata_type: LIVEBOARD
                      metadata_owner:
                        id: a62a5bf3-9f16-45b2-a174-7d30b3b577a9
                        name: testing
                      metadata_author:
                        id: 59481331-ee53-42be-a548-bd87be6ddd4a
                        name: tsadmin
                      principal_permission_info:
                      - principal_type: USER_GROUP
                        principal_sub_type: LOCAL_GROUP
                        principal_permissions:
                        - principal_id: d0326b56-ef23-4c8a-8327-a30e99bcc72b
                          principal_name: Administrator
                          permission: MODIFY
                          shared_permission: NO_ACCESS
                          group_permission: []
                      - principal_type: USER
                        principal_sub_type: LOCAL_USER
                        principal_permissions:
                        - principal_id: 0f0dd0f7-7411-4195-a4aa-0dc6b58413c9
                          principal_name: su
                          permission: MODIFY
                          shared_permission: NO_ACCESS
                          group_permission: []
                        - principal_id: 59481331-ee53-42be-a548-bd87be6ddd4a
                          principal_name: tsadmin
                          permission: MODIFY
                          shared_permission: NO_ACCESS
                          group_permission: []
              schema:
                $ref: '#/components/schemas/PermissionOfMetadataResponse'
          description: Fetching permissions of metadata objects is successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Security
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/security/metadata/share:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Allows sharing one or several metadata objects with users and groups in ThoughtSpot.

        Requires edit access to the metadata object.

        The API endpoint allows sharing only the following types of metadata objects:
        * Liveboards
        * Visualizations
        * Answers
        * Worksheets
        * Views
        * Connections

        You can provide `READ_ONLY` or `MODIFY` access when sharing an object with another user or group. With `READ_ONLY` access grants view access to the shared object, whereas `MODIFY` provides edit access.

        To prevent a user or group from accessing the shared object, specify the GUID or name of the principal and set `shareMode` to `NO_ACCESS`.





      operationId: shareMetadata
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shareMetadata_request'
        required: true
      responses:
        "204":
          description: Sharing metadata objects is successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Security
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/system/config:
    get:
      description: |2+

         Version: 9.0.0.cl or later


        Retrieves the current configuration details of the cluster. If the request is successful, the API returns a list configuration settings applied on the cluster.

        Requires `ADMINISTRATION`(**Can administer ThoughtSpot**) privilege to view these complete configuration settings of the cluster.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `SYSTEM_INFO_ADMINISTRATION` (**Can view system activities**) privilege is required.

        This API does not require any parameters to be passed in the request.





      operationId: getSystemConfig
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples:
                example_1:
                  value:
                    onboarding_content_url: ""
              schema:
                $ref: '#/components/schemas/SystemConfig'
          description: Cluster config information.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - System
      - ThoughtSpotRest
      x-accepts:
      - application/json
  /api/rest/2.0/system:
    get:
      description: "\n Version: 9.0.0.cl or later\n\n\nGets system information such\
        \ as the release version, locale, time zone, deployment environment, date\
        \ format, and date time format of the cluster.\n\nRequires `ADMINISTRATION`\
        \ (**Can administer ThoughtSpot**) privileges.\nIf [Role-Based Access Control\
        \ (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your\
        \ instance, the `SYSTEM_INFO_ADMINISTRATION` (**Can view system activities**)\
        \ privilege is required.\n\nThis API does not require any parameters to be\
        \ passed in the request.  \n\n\n\n\n\n"
      operationId: getSystemInformation
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples:
                example_1:
                  value:
                    id: local
                    name: local
                    release_version: test
                    time_zone: America/Los_Angeles
                    locale: ""
                    date_format: MM/dd/yyyy
                    api_version: v1
                    type: SW
                    environment: DEV
                    license: EAE
                    date_time_format: MM/dd/yyyy h:mm a
                    time_format: HH:mm:ss
                    system_user_id: 67e15c06-d153-4924-a4cd-ff615393b60f
                    super_user_id: 0f0dd0f7-7411-4195-a4aa-0dc6b58413c9
                    hidden_object_id: 31745bb4-defd-4e8b-8de9-8fd01db78827
                    system_group_id: 179d8867-cf36-4a8d-a019-63a226fd3196
                    tsadmin_user_id: 59481331-ee53-42be-a548-bd87be6ddd4a
                    admin_group_id: d0326b56-ef23-4c8a-8327-a30e99bcc72b
                    all_tables_connection_id: bfc6feb4-8dac-402c-8ae8-78b43d318777
                    all_user_group_id: b25ee394-9d13-49e3-9385-cd97f5b253b4
                    accept_language: undefined
                    all_user_group_member_user_count: 13
                    logical_model_version: 43
              schema:
                $ref: '#/components/schemas/SystemInfo'
          description: Cluster information.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - System
      - ThoughtSpotRest
      x-accepts:
      - application/json
  /api/rest/2.0/system/config-overrides:
    get:
      description: "\n Version: 9.2.0.cl or later\n\n\nGets a list of configuration\
        \ overrides applied on the cluster.  \n\nRequires `ADMINISTRATION` (**Can\
        \ administer ThoughtSpot**) privilege.\nIf [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac)\
        \ is enabled on your instance, the `APPLICATION_ADMINISTRATION` (**Can manage\
        \ application settings**) privilege is required.\n\nThis API does not require\
        \ any parameters to be passed in the request.  \n\n\n\n\n\n"
      operationId: getSystemOverrideInfo
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Cluster configuration which can be overridden.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - System
      - ThoughtSpotRest
      x-accepts:
      - application/json
  /api/rest/2.0/system/config-update:
    post:
      description: |2+

         Version: 9.2.0.cl or later


        Updates the current configuration of the cluster. You must send the configuration data in JSON format.

        Requires `ADMINISTRATION` (**Can administer ThoughtSpot**) privileges.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `APPLICATION_ADMINISTRATION` (**Can manage application settings**) privilege is required.





      operationId: updateSystemConfig
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateSystemConfig_request'
        required: true
      responses:
        "204":
          description: Configuration successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - System
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/tags/assign:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Assigns tags to Liveboards, Answers, Tables, and Worksheets.

        Requires edit access to the metadata object.





      operationId: assignTag
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assignTag_request'
        required: true
      responses:
        "204":
          description: Tags successfully assigned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Tags
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/tags/create:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Creates a tag object.

        Tags are labels that identify a metadata object. For example, you can create a tag to designate subject areas, such as sales, HR, marketing, and finance.

        Requires `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `TAGMANAGEMENT` (**Can manage tags**) privilege is required to create, edit, and delete tags.





      operationId: createTag
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createTag_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example_1:
                  value:
                    name: test5
                    id: 6abf5aec-3485-4f83-b25f-8c55b92e2b20
                    color: '#342323'
                    deleted: false
                    hidden: false
                    external: false
                    deprecated: false
                    creation_time_in_millis: 1685441468684
                    modification_time_in_millis: 1685441468684
                    author_id: 59481331-ee53-42be-a548-bd87be6ddd4a
                    modifier_id: 59481331-ee53-42be-a548-bd87be6ddd4a
                    owner_id: 6abf5aec-3485-4f83-b25f-8c55b92e2b20
              schema:
                $ref: '#/components/schemas/Tag'
          description: Tag successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Tags
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/tags/{tag_identifier}/delete:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Deletes a tag object from the ThoughtSpot system

        Requires `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `TAGMANAGEMENT` (**Can manage tags**) privilege is required to create, edit, and delete tags.





      operationId: deleteTag
      parameters:
      - description: Tag identifier Tag name or Tag id.
        explode: false
        in: path
        name: tag_identifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Tag successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Tags
      - ThoughtSpotRest
      x-accepts:
      - application/json
  /api/rest/2.0/tags/search:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Gets a list of tag objects available on the ThoughtSpot system. To get details of a specific tag object, specify the GUID or name.

        Any authenticated user can search for tag objects.





      operationId: searchTags
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/searchTags_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example_1:
                  value:
                  - name: test4
                    id: 0935bbb5-17e2-43ab-b657-da6bf347cbb4
                    color: '#342323'
                    deleted: false
                    hidden: false
                    external: false
                    deprecated: false
                    creation_time_in_millis: 1684937524885
                    modification_time_in_millis: 1684937524885
                    author_id: 59481331-ee53-42be-a548-bd87be6ddd4a
                    modifier_id: 59481331-ee53-42be-a548-bd87be6ddd4a
                    owner_id: 0935bbb5-17e2-43ab-b657-da6bf347cbb4
                  - name: test6
                    id: 65a5c39a-daf5-4cae-975f-44283628494e
                    color: '#342323'
                    deleted: false
                    hidden: false
                    external: false
                    deprecated: false
                    creation_time_in_millis: 1684988834183
                    modification_time_in_millis: 1684988887888
                    author_id: 59481331-ee53-42be-a548-bd87be6ddd4a
                    modifier_id: 59481331-ee53-42be-a548-bd87be6ddd4a
                    owner_id: 65a5c39a-daf5-4cae-975f-44283628494e
              schema:
                items:
                  $ref: '#/components/schemas/Tag'
                type: array
          description: Tags search result.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Tags
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/tags/unassign:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Removes the tags applied to a Liveboard, Answer, Table, or Worksheet.

        Requires edit access to the metadata object.





      operationId: unassignTag
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assignTag_request'
        required: true
      responses:
        "204":
          description: Tags successfully unassigned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Tags
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/tags/{tag_identifier}/update:
    post:
      description: "\n Version: 9.0.0.cl or later\n\n\nUpdates a tag object.\n\nYou\
        \ can modify the `name` and `color` properties of a tag object.  \n\nRequires\
        \ `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.\nIf [Role-Based\
        \ Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is\
        \ enabled on your instance, the `TAGMANAGEMENT` (**Can manage tags**) privilege\
        \ is required to create, edit, and delete tags.\n\n\n\n\n\n"
      operationId: updateTag
      parameters:
      - description: Name or Id of the tag.
        explode: false
        in: path
        name: tag_identifier
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateTag_request'
        required: true
      responses:
        "204":
          description: Tag successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Tags
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/users/activate:
    post:
      description: |2+

         Version: 9.7.0.cl or later


        Activates a deactivated user account.

        Requires `ADMINISTRATION` (**Can administer Thoughtspot**) privilege.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `USER_ADMINISTRATION` (**Can manage users**) privilege is required.

        To activate an inactive user account, the API request body must include the following information:

        - Username or the GUID of the user account.
        - Auth token generated for the deactivated user. The auth token is sent in the API response when a user is deactivated.
        - Password for the user account.





      operationId: activateUser
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/activateUser_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User activated successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Users
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/users/change-password:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Updates the current password of the user.

        Requires `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `USER_ADMINISTRATION` (**Can manage users**) privilege is required.





      operationId: changeUserPassword
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changeUserPassword_request'
        required: true
      responses:
        "204":
          description: User password change operation successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Users
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/users/create:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Creates a user in ThoughtSpot.

        The API endpoint allows you to configure several user properties such as email address, account status, share notification preferences, and sharing visibility. You can provision the user to [groups](https://docs.thoughtspot.com/cloud/latest/groups-privileges) and [Orgs](https://docs.thoughtspot.com/cloud/latest/orgs-overview). You can also add Liveboard, Answer, and Worksheet objects to the user’s favorites list, assign a default Liveboard for the user, and set user preferences.

        Requires `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `USER_ADMINISTRATION` (**Can manage users**) privilege is required.





      operationId: createUser
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Users
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/users/deactivate:
    post:
      description: |2+

         Version: 9.7.0.cl or later


        Deactivates a user account.

        Requires `ADMINISTRATION` (**Can administer Thoughtspot**) privilege. If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `USER_ADMINISTRATION` (**Can manage users**) privilege is required.

        To deactivate a user account, the API request body must include the following information:

        - Username or the GUID of the user account
        - Base URL of the ThoughtSpot instance

        If the API request is successful, ThoughtSpot returns the activation URL in the response. The activation URL is valid for 14 days and can be used to re-activate the account and reset the password of the deactivated account.





      operationId: deactivateUser
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deactivateUser_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseActivationURL'
          description: User deactivated successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Users
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/users/{user_identifier}/delete:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Deletes a user from the ThoughtSpot system.

        If you want to remove a user from a specific Org but not from ThoughtSpot, update the group and Org mapping properties of the user object via a POST API call to the [/api/rest/2.0/users/{user_identifier}/update](#/http/api-endpoints/users/update-user) endpoint.

        Requires `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `USER_ADMINISTRATION` (**Can manage users**) privilege is required.





      operationId: deleteUser
      parameters:
      - description: GUID / name of the user
        explode: false
        in: path
        name: user_identifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: User successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Users
      - ThoughtSpotRest
      x-accepts:
      - application/json
  /api/rest/2.0/users/force-logout:
    post:
      description: "\n Version: 9.0.0.cl or later\n\n\nEnforces logout on current\
        \ user sessions.  \n\nUse this API with caution as it may invalidate active\
        \ user sessions and force users to re-login. Make sure you specify the usernames\
        \ or GUIDs. If you pass null values in the API call, all user sessions on\
        \ your cluster become invalid, and the users are forced to re-login.\n\nRequires\
        \ `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.\nIf [Role-Based\
        \ Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is\
        \ enabled on your instance, the `USER_ADMINISTRATION` (**Can manage users**)\
        \ privilege is required.\n\n\n\n\n\n"
      operationId: forceLogoutUsers
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/forceLogoutUsers_request'
        required: true
      responses:
        "204":
          description: Force logging out of users operation successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Users
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/users/import:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Imports user data from external databases into ThoughtSpot. During the user import operation:

        * If the specified users are not available in ThoughtSpot, the users are created and assigned a default password. Defining a `default_password` in the API request is optional.
        * If `delete_unspecified_users` is set to `true`, the users not specified in the API request, excluding the `tsadmin`, `guest`, `system` and `su` users, are deleted.
        * If the specified user objects are already available in ThoughtSpot, the object properties are updated and synchronized as per the input data in the API request.

        A successful API call returns the object that represents the changes made in the ThoughtSpot system.

        Requires `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `USER_ADMINISTRATION` (**Can manage users**) privilege is required.





      operationId: importUsers
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/importUsers_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportUsersResponse'
          description: Import users operation successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Users
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/users/reset-password:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Resets the password of a user account. Administrators can reset password on behalf of a user.

        Requires `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `USER_ADMINISTRATION` (**Can manage users**) privilege is required.





      operationId: resetUserPassword
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resetUserPassword_request'
        required: true
      responses:
        "204":
          description: User password reset operation successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Users
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/users/search:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Gets a list of users available on the ThoughtSpot system.

        To get details of a specific user, specify the user GUID or name. You can also filter the API response based on groups, Org ID, user visibility, account status, user type, and user preference settings and favorites.

        Available to all users. Users with `ADMINISTRATION` (**Can administer ThoughtSpot**) privileges can view all users properties. If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `USER_ADMINISTRATION` (**Can manage users**) privilege is required.

        **NOTE**: If the API returns an empty list, consider increasing the value of the `record_size` parameter. To search across all available users, set `record_size` to `-1`.





      operationId: searchUsers
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/searchUsers_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: User search result.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Users
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/users/{user_identifier}/update:
    post:
      description: |2+

         Version: 9.0.0.cl or later


        Updates the properties of a user object.

        You can modify user properties such as username, email, and share notification settings. You can also assign new groups and Orgs, remove the user from a group or Org, reset password, and modify user preferences.

        Requires `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.
        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance, the `USER_ADMINISTRATION` (**Can manage users**) privilege is required.





      operationId: updateUser
      parameters:
      - description: GUID / name of the user
        explode: false
        in: path
        name: user_identifier
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateUser_request'
        required: true
      responses:
        "204":
          description: User successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Users
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/vcs/git/branches/commit:
    post:
      description: |2+

         Version: 9.2.0.cl or later


        Commits TML files of metadata objects to the Git branch configured on your instance.

        Requires at least edit access to objects used in the commit operation.

        Before using this endpoint to push your commits:

        * Enable Git integration on your instance.
        * Make sure the Git repository and branch details are configured on your instance.

        For more information, see [Git integration documentation](https://developers.thoughtspot.com/docs/git-integration).





      operationId: commitBranch
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/commitBranch_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitResponse'
          description: Successfully committed the metadata objects
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Version Control
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/vcs/git/config/create:
    post:
      description: |2+

         Version: 9.2.0.cl or later


        Allows you to connect a ThoughtSpot instance to a Git repository.

        Requires `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.

        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance on your instance, the `CAN_SETUP_VERSION_CONTROL` (**Can set up version control**) privilege.

        You can use this API endpoint to connect your ThoughtSpot development and production environments to the development and production branches of a Git repository.

        Before using this endpoint to connect your ThoughtSpot instance to a Git repository, check the following prerequisites:

        * You have a Git repository. If you are using GitHub, make sure you have a valid account and an access token to connect ThoughtSpot to GitHub. For information about generating a token, see [GitHub Documentation](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens).

        * Your access token has `repo` scope that grants full access to public and private repositories.
        * Your Git repository has a branch that can be configured as a default branch in ThoughtSpot.

        For more information, see [Git integration documentation](https://developers.thoughtspot.com/docs/?pageid=git-integration).

        **Note**: ThoughtSpot supports only GitHub / itHub Enterprise for CI/CD.





      operationId: createConfig
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createConfig_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoConfigObject'
          description: Successfully configured local repository
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Version Control
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/vcs/git/config/delete:
    post:
      description: |2+

         Version: 9.2.0.cl or later


        Deletes Git repository configuration from your ThoughtSpot instance.

        Requires `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.

        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance on your instance, the `CAN_SETUP_VERSION_CONTROL` (**Can set up version control**) privilege.





      operationId: deleteConfig
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteConfig_request'
        required: true
      responses:
        "204":
          description: Successfully deleted local repository configuration
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Version Control
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/vcs/git/commits/deploy:
    post:
      description: |2+

         Version: 9.2.0.cl or later


        Allows you to deploy a commit and publish TML content to your ThoughtSpot instance.

        Requires at least edit access to the objects used in the deploy operation.

        The API deploys the head of the branch unless a `commit_id` is specified in the API request. If the branch name is not defined in the request, the default branch is considered for deploying commits.

        For more information, see [Git integration documentation](https://developers.thoughtspot.com/docs/git-integration).





      operationId: deployCommit
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deployCommit_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeployResponse'
                type: array
          description: Successfully deployed the changes
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Version Control
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/vcs/git/commits/{commit_id}/revert:
    post:
      description: |2+

         Version: 9.2.0.cl or later


        Reverts TML objects to a previous commit specified in the API request.

        Requires at least edit access to objects.

        In the API request, specify the `commit_id`. If the branch name is not specified in the request, the API will consider the default branch configured on your instance.

        By default, the API reverts all objects. If the revert operation fails for one of the objects provided in the commit, the API returns an error and does not revert any object.

        For more information, see [Git integration documentation](https://developers.thoughtspot.com/docs/git-integration).





      operationId: revertCommit
      parameters:
      - description: Commit id to which the object should be reverted
        explode: false
        in: path
        name: commit_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/revertCommit_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevertResponse'
          description: Reverted the object to the commit point specified
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Version Control
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/vcs/git/commits/search:
    post:
      description: |2+

         Version: 9.2.0.cl or later


        Gets a list of commits for a given metadata object.

        Requires `DATAMANAGEMENT` (**Can manage data**) privilege.

        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance on your instance, the `CAN_MANAGE_WORKSHEET_VIEWS_TABLES` (**Can manage data models**) privilege and edit access to the metadata objects.





      operationId: searchCommits
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/searchCommits_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommitHistoryResponse'
                type: array
          description: Commit history of the metadata object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Version Control
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/vcs/git/config/search:
    post:
      description: |2+

         Version: 9.2.0.cl or later


        Gets Git repository connections configured on the ThoughtSpot instance.

        Requires `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.

        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance on your instance, the `CAN_SETUP_VERSION_CONTROL` (**Can set up version control**) privilege.





      operationId: searchConfig
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/searchConfig_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RepoConfigObject'
                type: array
          description: Details of local repository configuration
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Version Control
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/vcs/git/config/update:
    post:
      description: |2+

         Version: 9.2.0.cl or later


        Updates Git repository configuration settings.

        Requires `ADMINISTRATION` (**Can administer ThoughtSpot**) privilege.

        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance on your instance, the `CAN_SETUP_VERSION_CONTROL` (**Can set up version control**) privilege.





      operationId: updateConfig
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateConfig_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoConfigObject'
          description: Successfully updated local repository configuration
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Version Control
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/rest/2.0/vcs/git/branches/validate:
    post:
      description: |2+

         Version: 9.2.0.cl or later


        Validates the content of your source branch against the objects in your destination environment.

        Before merging content from your source branch to the destination branch, run this API operation from your destination environment and ensure that the changes from the source branch function in the destination environment.

        Requires `DATAMANAGEMENT` (**Can manage data**) privilege.

        If [Role-Based Access Control (RBAC)](https://developers.thoughtspot.com/docs/rbac) is enabled on your instance on your instance, the `CAN_MANAGE_WORKSHEET_VIEWS_TABLES` (**Can manage data models**) privilege and edit access to the metadata objects.





      operationId: validateMerge
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/validateMerge_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeployResponse'
                type: array
          description: validation done successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden access.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Version Control
      - ThoughtSpotRest
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  schemas:
    ErrorResponse:
      example:
        error: "{}"
      properties:
        error:
          nullable: true
          type: object
      type: object
    GetTokenResponse:
      example:
        creation_time_in_millis: 0.8008282
        valid_for_username: valid_for_username
        valid_for_user_id: valid_for_user_id
        expiration_time_in_millis: 6.0274563
        token: token
      properties:
        token:
          description: Bearer auth token.
          type: string
        creation_time_in_millis:
          description: Token creation time in milliseconds.
          format: float
          type: number
        expiration_time_in_millis:
          description: Token expiration time in milliseconds.
          format: float
          type: number
        valid_for_user_id:
          description: Username to whom the token is issued.
          type: string
        valid_for_username:
          description: Unique identifier of the user to whom the token is issued.
          type: string
      required:
      - creation_time_in_millis
      - expiration_time_in_millis
      - token
      - valid_for_user_id
      - valid_for_username
      type: object
    RiseSetter:
      properties:
        field:
          type: string
        path:
          type: string
      required:
      - field
      - path
      type: object
    User:
      example:
        first_login_time_in_millis: 5.962134
        tenant_id: tenant_id
        privileges:
        - privileges
        - privileges
        preferred_locale: preferred_locale
        account_type: LOCAL_USER
        group_mask: 5
        onboarding_experience_completed: true
        user_inherited_groups:
        - name: name
          id: id
        - name: name
          id: id
        creation_time_in_millis: 0.8008282
        hidden: true
        current_org:
          name: name
          id: 6
        owner_id: owner_id
        deprecated: true
        access_control_properties: "{}"
        modification_time_in_millis: 2.302136
        account_status: ACTIVE
        home_liveboard:
          name: name
          id: id
        favorite_metadata:
        - name: name
          id: id
          type: LIVEBOARD
        - name: name
          id: id
          type: LIVEBOARD
        expiration_time_in_millis: 1.4658129
        super_user: true
        id: id
        system_user: true
        incomplete_details: "{}"
        extended_preferences: "{}"
        email: email
        welcome_email_sent: true
        org_privileges: "{}"
        visibility: SHARABLE
        display_name: display_name
        parent_type: USER
        notify_on_share: true
        tags:
        - name: name
          id: id
        - name: name
          id: id
        show_onboarding_experience: true
        is_first_login: true
        external: true
        user_parameters: "{}"
        deleted: true
        extended_properties: "{}"
        name: name
        modifier_id: modifier_id
        complete_detail: true
        orgs:
        - name: name
          id: 6
        - name: name
          id: 6
        author_id: author_id
        can_change_password: true
        user_groups:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        id:
          description: Unique identifier of the user.
          type: string
        name:
          description: Name of the user.
          type: string
        display_name:
          description: Display name of the user.
          type: string
        visibility:
          description: "Visibility of the users. The `SHARABLE` property makes a user\
            \ visible to other users and group, who can share objects with the user."
          enum:
          - SHARABLE
          - NON_SHARABLE
          type: string
        author_id:
          description: Unique identifier of author of the user.
          nullable: true
          type: string
        can_change_password:
          description: Defines whether the user can change their password.
          nullable: true
          type: boolean
        complete_detail:
          description: Defines whether the response has complete detail of the user.
          nullable: true
          type: boolean
        creation_time_in_millis:
          description: Creation time of the user in milliseconds.
          format: float
          nullable: true
          type: number
        current_org:
          $ref: '#/components/schemas/Org'
        deleted:
          description: Indicates whether the user is deleted.
          nullable: true
          type: boolean
        deprecated:
          description: Indicates whether the user is deprecated.
          nullable: true
          type: boolean
        account_type:
          description: Type of the user account.
          enum:
          - LOCAL_USER
          - LDAP_USER
          - SAML_USER
          - OIDC_USER
          - REMOTE_USER
          nullable: true
          type: string
        account_status:
          description: Status of the user account.
          enum:
          - ACTIVE
          - INACTIVE
          - EXPIRED
          - LOCKED
          - PENDING
          - SUSPENDED
          nullable: true
          type: string
        email:
          description: Email of the user.
          nullable: true
          type: string
        expiration_time_in_millis:
          description: Expiration time of the user in milliseconds.
          format: float
          nullable: true
          type: number
        external:
          description: Indicates whether the user is external.
          nullable: true
          type: boolean
        favorite_metadata:
          description: Metadata objects to add to the users' favorites list.
          items:
            $ref: '#/components/schemas/FavoriteMetadataItem'
          nullable: true
          type: array
        first_login_time_in_millis:
          description: Timestamp of the first login session of the user in milliseconds.
          format: float
          nullable: true
          type: number
        group_mask:
          description: Group mask of the user.
          format: int32
          nullable: true
          type: integer
        hidden:
          description: Indicates whether the user is hidden.
          nullable: true
          type: boolean
        home_liveboard:
          $ref: '#/components/schemas/Object_ID_And_Name'
        incomplete_details:
          description: Incomplete details of user if any present.
          nullable: true
          type: object
        is_first_login:
          description: Indicates whether it is first login of the user.
          nullable: true
          type: boolean
        modification_time_in_millis:
          description: Last modified time of the user in milliseconds.
          format: float
          nullable: true
          type: number
        modifier_id:
          description: Unique identifier of modifier of the user.
          nullable: true
          type: string
        notify_on_share:
          description: User preference for receiving email notifications on shared
            Answers or Liveboard.
          nullable: true
          type: boolean
        onboarding_experience_completed:
          description: The user preference for turning off the onboarding experience.
          nullable: true
          type: boolean
        orgs:
          description: Orgs to which the user belongs.
          items:
            $ref: '#/components/schemas/Org'
          nullable: true
          type: array
        owner_id:
          description: Unique identifier of owner of the user.
          nullable: true
          type: string
        parent_type:
          description: Parent type of the user.
          enum:
          - USER
          - GROUP
          nullable: true
          type: string
        privileges:
          description: Privileges which are assigned to the user.
          items:
            type: string
          nullable: true
          type: array
        show_onboarding_experience:
          description: User's preference to revisit the new user onboarding experience.
          nullable: true
          type: boolean
        super_user:
          description: Indicates whether the user is a super user.
          nullable: true
          type: boolean
        system_user:
          description: Indicates whether the user is a system user.
          nullable: true
          type: boolean
        tags:
          description: Tags associated with the user.
          items:
            $ref: '#/components/schemas/Object_ID_And_Name'
          nullable: true
          type: array
        tenant_id:
          description: Unique identifier of tenant of the user.
          nullable: true
          type: string
        user_groups:
          description: Groups to which the user is assigned.
          items:
            $ref: '#/components/schemas/Object_ID_And_Name'
          nullable: true
          type: array
        user_inherited_groups:
          description: Inherited User Groups which the user is part of.
          items:
            $ref: '#/components/schemas/Object_ID_And_Name'
          nullable: true
          type: array
        welcome_email_sent:
          description: Indicates whether welcome email is sent for the user.
          nullable: true
          type: boolean
        org_privileges:
          description: Privileges which are assigned to the user with org.
          nullable: true
          type: object
        preferred_locale:
          description: Locale for the user.
          nullable: true
          type: string
        extended_properties:
          description: Properties for the user
          nullable: true
          type: object
        extended_preferences:
          description: Preferences for the user
          nullable: true
          type: object
        user_parameters:
          description: User Parameters which are specified for the user via JWToken
          nullable: true
          type: object
        access_control_properties:
          description: Access Control Properties which are specified for the user
            via JWToken
          nullable: true
          type: object
      required:
      - display_name
      - id
      - name
      - visibility
      type: object
    Org:
      description: The current Org context of the user.
      example:
        name: name
        id: 6
      properties:
        id:
          description: The ID of the object.
          format: int32
          type: integer
        name:
          description: Name of the object.
          type: string
      required:
      - id
      - name
      type: object
    FavoriteMetadataItem:
      example:
        name: name
        id: id
        type: LIVEBOARD
      properties:
        id:
          description: Unique ID of the metadata object.
          type: string
        name:
          description: name of the metadata object.
          type: string
        type:
          description: "  Type of metadata object.\n  \n\nRequired if the name of\
            \ the object is set as the identifier. This attribute is optional when\
            \ the object GUID is specified as the identifier."
          enum:
          - LIVEBOARD
          - ANSWER
          - LOGICAL_TABLE
          - LOGICAL_COLUMN
          - CONNECTION
          - TAG
          - USER
          - USER_GROUP
          - LOGICAL_RELATIONSHIP
          type: string
      required:
      - id
      - name
      - type
      type: object
    Object_ID_And_Name:
      description: The object representation with ID and Name.
      example:
        name: name
        id: id
      properties:
        id:
          description: The unique identifier of the object.
          nullable: true
          type: string
        name:
          description: Name of the object.
          nullable: true
          type: string
      type: object
    FavoriteMetadataInput:
      properties:
        identifier:
          description: Unique ID or name of the metadata object.
          nullable: true
          type: string
        type:
          description: "  Type of metadata object.\n  \n\nRequired if the name of\
            \ the object is set as the identifier. This attribute is optional when\
            \ the object GUID is specified as the identifier."
          enum:
          - LIVEBOARD
          - ANSWER
          nullable: true
          type: string
      type: object
    SortOptions:
      description: Sort options.
      properties:
        field_name:
          description: Name of the field to apply the sort on.
          enum:
          - NAME
          - DISPLAY_NAME
          - AUTHOR
          - CREATED
          - MODIFIED
          nullable: true
          type: string
        order:
          description: "Sort order : ASC(Ascending) or DESC(Descending)."
          enum:
          - ASC
          - DESC
          nullable: true
          type: string
      type: object
    SystemInfo:
      example:
        admin_group_id: admin_group_id
        hidden_object_id: hidden_object_id
        logical_model_version: 6
        time_format: time_format
        all_user_group_member_user_count: 0
        all_user_group_id: all_user_group_id
        tsadmin_user_id: tsadmin_user_id
        time_zone: time_zone
        locale: locale
        api_version: api_version
        type: type
        all_tables_connection_id: all_tables_connection_id
        license: license
        environment: environment
        super_user_id: super_user_id
        name: name
        system_group_id: system_group_id
        accept_language: accept_language
        date_format: date_format
        system_user_id: system_user_id
        id: id
        release_version: release_version
        date_time_format: date_time_format
      properties:
        id:
          description: The unique identifier of the object
          nullable: true
          type: string
        name:
          description: Name of the cluster.
          nullable: true
          type: string
        release_version:
          description: The release version of the cluster.
          nullable: true
          type: string
        time_zone:
          description: The timezone of the cluster.
          nullable: true
          type: string
        locale:
          description: The default locale of the cluster.
          nullable: true
          type: string
        date_format:
          description: The default date format representation of the cluster.
          nullable: true
          type: string
        api_version:
          description: The API version of the cluster.
          nullable: true
          type: string
        type:
          description: The deployment type of the cluster.
          nullable: true
          type: string
        environment:
          description: The deployed environment of the cluster.
          nullable: true
          type: string
        license:
          description: The license applied to the cluster.
          nullable: true
          type: string
        date_time_format:
          description: The default date time format representation of the cluster.
          nullable: true
          type: string
        time_format:
          description: The default time format representation of the cluster.
          nullable: true
          type: string
        system_user_id:
          description: The unique identifier of system user.
          nullable: true
          type: string
        super_user_id:
          description: The unique identifier of super user.
          nullable: true
          type: string
        hidden_object_id:
          description: The unique identifier of hidden object.
          nullable: true
          type: string
        system_group_id:
          description: The unique identifier of system group.
          nullable: true
          type: string
        tsadmin_user_id:
          description: The unique identifier of tsadmin user.
          nullable: true
          type: string
        admin_group_id:
          description: The unique identifier of admin group.
          nullable: true
          type: string
        all_tables_connection_id:
          description: The unique identifier of all tables connection.
          nullable: true
          type: string
        all_user_group_id:
          description: The unique identifier of ALL group.
          nullable: true
          type: string
        accept_language:
          description: The supported accept language by the cluster.
          nullable: true
          type: string
        all_user_group_member_user_count:
          description: The count of users of ALL group.
          format: int32
          nullable: true
          type: integer
        logical_model_version:
          description: The version number of logical model of the cluster.
          format: int32
          nullable: true
          type: integer
      type: object
    SystemConfig:
      example:
        onboarding_content_url: onboarding_content_url
      properties:
        onboarding_content_url:
          nullable: true
          type: string
      type: object
    OrgResponse:
      example:
        visibility: SHOW
        name: name
        description: description
        id: 0
        status: ACTIVE
      properties:
        id:
          description: Unique identifier of the Org.
          format: int32
          nullable: true
          type: integer
        name:
          description: Name of the Org.
          nullable: true
          type: string
        status:
          description: Status of the Org.
          enum:
          - ACTIVE
          - IN_ACTIVE
          nullable: true
          type: string
        description:
          description: Description of the Org.
          nullable: true
          type: string
        visibility:
          description: Visibility of the Org.
          enum:
          - SHOW
          - HIDDEN
          nullable: true
          type: string
      type: object
    Tag:
      example:
        external: true
        deleted: true
        color: color
        hidden: true
        creation_time_in_millis: 0.8008282
        owner_id: owner_id
        deprecated: true
        name: name
        modifier_id: modifier_id
        modification_time_in_millis: 6.0274563
        id: id
        author_id: author_id
      properties:
        name:
          type: string
        id:
          type: string
        color:
          nullable: true
          type: string
        deleted:
          nullable: true
          type: boolean
        hidden:
          nullable: true
          type: boolean
        external:
          nullable: true
          type: boolean
        deprecated:
          nullable: true
          type: boolean
        creation_time_in_millis:
          format: float
          nullable: true
          type: number
        modification_time_in_millis:
          format: float
          nullable: true
          type: number
        author_id:
          nullable: true
          type: string
        modifier_id:
          nullable: true
          type: string
        owner_id:
          nullable: true
          type: string
      required:
      - id
      - name
      type: object
    UserGroupResponse:
      example:
        privileges:
        - privileges
        - privileges
        default_liveboards:
        - name: name
          id: id
        - name: name
          id: id
        creation_time_in_millis: 0.8008282
        hidden: true
        owner_id: owner_id
        deprecated: true
        roles:
        - name: name
          id: id
        - name: name
          id: id
        description: description
        modification_time_in_millis: 2.302136
        type: LOCAL_GROUP
        content: "{}"
        index_version: 5
        sub_groups:
        - name: name
          id: id
        - name: name
          id: id
        id: id
        generation_number: 6
        metadata_version: 5
        visibility: SHARABLE
        index: 1
        display_name: display_name
        parent_type: USER
        system_group: true
        users:
        - name: name
          id: id
        - name: name
          id: id
        tags:
        - name: name
          id: id
        - name: name
          id: id
        external: true
        deleted: true
        modifier_id: modifier_id
        name: name
        complete_detail: true
        orgs:
        - name: name
          id: id
        - name: name
          id: id
        author_id: author_id
      properties:
        author_id:
          description: The unique identifier of the object
          nullable: true
          type: string
        complete_detail:
          description: Indicates whether the response has complete detail of the group.
          nullable: true
          type: boolean
        content:
          description: Content details of the group
          nullable: true
          type: object
        creation_time_in_millis:
          description: Creation time of the group in milliseconds
          format: float
          nullable: true
          type: number
        default_liveboards:
          description: Liveboards that are assigned as default Liveboards to the group.
          items:
            $ref: '#/components/schemas/UserGroup'
          nullable: true
          type: array
        deleted:
          description: Indicates whether the group is deleted
          nullable: true
          type: boolean
        deprecated:
          description: Indicates whether the group is deprecated
          nullable: true
          type: boolean
        description:
          description: Description of the group
          nullable: true
          type: string
        display_name:
          description: Display name of the group.
          type: string
        external:
          description: Indicates whether the group is external
          nullable: true
          type: boolean
        generation_number:
          description: Generation number of the group
          format: int32
          nullable: true
          type: integer
        hidden:
          description: Indicates whether the group is hidden
          nullable: true
          type: boolean
        id:
          description: The unique identifier of the object
          type: string
        index:
          description: Index number of the group
          format: int32
          nullable: true
          type: integer
        index_version:
          description: Index version number of the group
          format: int32
          nullable: true
          type: integer
        metadata_version:
          description: Metadata version number of the group
          format: int32
          nullable: true
          type: integer
        modification_time_in_millis:
          description: Last modified time of the group in milliseconds.
          format: float
          nullable: true
          type: number
        modifier_id:
          description: The unique identifier of the object
          nullable: true
          type: string
        name:
          description: Name of the group.
          type: string
        orgs:
          description: Orgs in which group exists.
          items:
            $ref: '#/components/schemas/UserGroup'
          nullable: true
          type: array
        owner_id:
          description: The unique identifier of the object
          nullable: true
          type: string
        parent_type:
          description: Parent type of the group.
          enum:
          - USER
          - GROUP
          nullable: true
          type: string
        privileges:
          description: Privileges which are assigned to the group
          items:
            type: string
          nullable: true
          type: array
        sub_groups:
          description: Groups who are part of the group
          items:
            $ref: '#/components/schemas/UserGroup'
          nullable: true
          type: array
        system_group:
          description: Indicates whether the group is a system group.
          nullable: true
          type: boolean
        tags:
          description: Tags associated with the group.
          items:
            $ref: '#/components/schemas/UserGroup'
          nullable: true
          type: array
        type:
          description: Type of the group.
          enum:
          - LOCAL_GROUP
          - LDAP_GROUP
          nullable: true
          type: string
        users:
          description: Users who are part of the group.
          items:
            $ref: '#/components/schemas/UserGroup'
          nullable: true
          type: array
        visibility:
          description: "Visibility of the group. The SHARABLE makes a group visible\
            \ to other users and groups, and thus allows them to share objects."
          enum:
          - SHARABLE
          - NON_SHARABLE
          type: string
        roles:
          description: List of roles assgined to the user
          items:
            $ref: '#/components/schemas/Role'
          nullable: true
          type: array
      required:
      - display_name
      - id
      - name
      - visibility
      type: object
    Role:
      example:
        name: name
        id: id
      properties:
        id:
          description: id of the role
          nullable: true
          type: string
        name:
          description: name of the role
          nullable: true
          type: string
      type: object
    MetadataListItemInput:
      properties:
        identifier:
          description: Unique ID or name of the metadata.
          nullable: true
          type: string
        obj_identifier:
          description: CustomObjectId of the metadata.
          nullable: true
          type: string
        name_pattern:
          description: A pattern to match the case-insensitive name of the metadata
            object. User % for a wildcard match.
          nullable: true
          type: string
        type:
          description: |-
            Type of metadata. Required if the name of the object is set as identifier. This attribute is optional when the object GUID is specified as identifier.
            1. Liveboard
            2. Answers
            3. LOGICAL_TABLE for any data object such as table, worksheet or view.
            4. LOGICAL_COLUMN for a column of any data object such as table, worksheet or view.
            5. CONNECTION for creating or modify data connections.
            6. TAG for tag objects.
            7. USER for user objects.
            8. USER_GROUP for group objects.
            9. LOGICAL_RELATIONSHIP for table or worksheet joins. A join combines from one or several data object by using matching values
            10. INSIGHT_SPEC for SpotIQ objects
          enum:
          - LIVEBOARD
          - ANSWER
          - LOGICAL_TABLE
          - LOGICAL_COLUMN
          - CONNECTION
          - TAG
          - USER
          - USER_GROUP
          - LOGICAL_RELATIONSHIP
          - INSIGHT_SPEC
          nullable: true
          type: string
      type: object
    PermissionInput:
      description: Details of users or groups.
      properties:
        principal:
          $ref: '#/components/schemas/PrincipalsInput'
        share_mode:
          description: Object share mode.
          enum:
          - READ_ONLY
          - MODIFY
          - NO_ACCESS
          type: string
      required:
      - principal
      - share_mode
      type: object
    ExcludeMetadataListItemInput:
      properties:
        identifier:
          description: Unique ID or name of the metadata.
          type: string
        type:
          description: |-
            Type of metadata. Required if the name of the object is set as identifier. This attribute is optional when the object GUID is specified as identifier.
            1. Liveboard
            2. Answers
            3. LOGICAL_TABLE for any data object such as table, worksheet or view
            4. LOGICAL_COLUMN for a column of any data object such as table, worksheet or view
            5. CONNECTION for connection objects
            6. TAG for tag objects
            7. USER for user objects
            8. USER_GROUP for group objects
            9. LOGICAL_RELATIONSHIP for table or worksheet joins. A join combines from one or several data object by using matching values.
            10. INSIGHT_SPEC for SpotIQ objects
          enum:
          - LIVEBOARD
          - ANSWER
          - LOGICAL_TABLE
          - LOGICAL_COLUMN
          - CONNECTION
          - TAG
          - USER
          - USER_GROUP
          - LOGICAL_RELATIONSHIP
          - INSIGHT_SPEC
          type: string
      required:
      - identifier
      - type
      type: object
    FavoriteObjectOptionsInput:
      description: Favorite object options.
      properties:
        include:
          default: false
          description: Includes objects marked as favorite for the specified users.
          nullable: true
          type: boolean
        user_identifiers:
          description: "Unique ID or name of the users. If not specified, the favorite\
            \ objects of current logged in user are returned."
          items:
            type: string
          nullable: true
          type: array
      type: object
    MetadataSearchSortOptions:
      description: Sort options.
      properties:
        field_name:
          description: Name of the field to apply the sort on.
          enum:
          - NAME
          - DISPLAY_NAME
          - AUTHOR
          - CREATED
          - MODIFIED
          - VIEWS
          - FAVORITES
          - LAST_ACCESSED
          nullable: true
          type: string
        order:
          description: "Sort order : ASC(Ascending) or DESC(Descending)."
          enum:
          - ASC
          - DESC
          nullable: true
          type: string
      type: object
    MetadataSearchResponse:
      description: Metadata Search Response Object.
      example:
        metadata_name: metadata_name
        dependent_objects: "{}"
        metadata_detail: "{}"
        metadata_header: "{}"
        visualization_headers:
        - "{}"
        - "{}"
        incomplete_objects:
        - "{}"
        - "{}"
        stats: "{}"
        metadata_type: LIVEBOARD
        metadata_id: metadata_id
        metadata_obj_id: metadata_obj_id
      properties:
        metadata_id:
          description: Unique identifier of the metadata.
          nullable: true
          type: string
        metadata_name:
          description: Name of the metadata.
          nullable: true
          type: string
        metadata_type:
          description: Type of the metadata.
          enum:
          - LIVEBOARD
          - ANSWER
          - LOGICAL_TABLE
          - LOGICAL_COLUMN
          - CONNECTION
          - TAG
          - USER
          - USER_GROUP
          - LOGICAL_RELATIONSHIP
          - INSIGHT_SPEC
          type: string
        metadata_obj_id:
          description: |-
            Custom identifier of the metadata.
            (Available from 10.8.0.cl onwards)
          nullable: true
          type: string
        dependent_objects:
          description: Details of dependent objects of the metadata objects.
          nullable: true
          type: object
        incomplete_objects:
          description: Details of incomplete information of the metadata objects if
            any.
          items:
            type: object
          nullable: true
          type: array
        metadata_detail:
          description: Complete details of the metadata objects.
          nullable: true
          type: object
        metadata_header:
          description: Header information of the metadata objects.
          nullable: true
          type: object
        visualization_headers:
          description: Visualization header information of the metadata objects.
          items:
            type: object
          nullable: true
          type: array
        stats:
          description: "Stats of the metadata object. Includes views, favorites, last_accessed."
          nullable: true
          type: object
      required:
      - metadata_type
      type: object
    GetAsyncImportStatusResponse:
      example:
        last_batch: true
        status_list:
        - tenant_id: tenant_id
          task_name: task_name
          task_status: COMPLETED
          created_at: 6.0274563
          in_progress_at: 1.4658129
          task_id: task_id
          import_policy: PARTIAL
          object_processed_count: 2
          completed_at: 5.962134
          org_id: 0
          import_response: "{}"
          author_id: author_id
          modified_at: 7.0614014
          total_object_count: 5
        - tenant_id: tenant_id
          task_name: task_name
          task_status: COMPLETED
          created_at: 6.0274563
          in_progress_at: 1.4658129
          task_id: task_id
          import_policy: PARTIAL
          object_processed_count: 2
          completed_at: 5.962134
          org_id: 0
          import_response: "{}"
          author_id: author_id
          modified_at: 7.0614014
          total_object_count: 5
      properties:
        status_list:
          description: List of task statuses.
          items:
            $ref: '#/components/schemas/ImportEPackAsyncTaskStatus'
          nullable: true
          type: array
        last_batch:
          description: Indicates whether there are more task statuses to fetch.
          nullable: true
          type: boolean
      type: object
    ImportEPackAsyncTaskStatus:
      example:
        tenant_id: tenant_id
        task_name: task_name
        task_status: COMPLETED
        created_at: 6.0274563
        in_progress_at: 1.4658129
        task_id: task_id
        import_policy: PARTIAL
        object_processed_count: 2
        completed_at: 5.962134
        org_id: 0
        import_response: "{}"
        author_id: author_id
        modified_at: 7.0614014
        total_object_count: 5
      properties:
        tenant_id:
          description: GUID of tenant from which the task is initiated.
          nullable: true
          type: string
        org_id:
          description: Organisation ID of the user who initiated the task.
          format: int32
          nullable: true
          type: integer
        task_id:
          description: Unique identifier for the task.
          nullable: true
          type: string
        task_name:
          description: Name of the task.
          nullable: true
          type: string
        import_response:
          description: Response of imported objects so far.
          nullable: true
          type: object
        task_status:
          description: Current status of the task.
          enum:
          - COMPLETED
          - IN_QUEUE
          - IN_PROGRESS
          - FAILED
          nullable: true
          type: string
        author_id:
          description: ID of the user who initiated the task.
          nullable: true
          type: string
        import_policy:
          description: Policy used for the import task.
          enum:
          - PARTIAL
          - ALL_OR_NONE
          - VALIDATE_ONLY
          - PARTIAL_OBJECT
          nullable: true
          type: string
        created_at:
          description: Time when the task was created (in ms since epoch).
          format: float
          nullable: true
          type: number
        in_progress_at:
          description: Time when the task started (in ms since epoch).
          format: float
          nullable: true
          type: number
        completed_at:
          description: Time when the task was completed (in ms since epoch).
          format: float
          nullable: true
          type: number
        total_object_count:
          description: Total number of objects to process.
          format: int32
          nullable: true
          type: integer
        object_processed_count:
          description: Number of objects processed so far.
          format: int32
          nullable: true
          type: integer
        modified_at:
          description: Last time the task status was updated (in ms since epoch).
          format: float
          nullable: true
          type: number
      type: object
    SqlQueryResponse:
      example:
        metadata_name: metadata_name
        sql_queries:
        - metadata_name: metadata_name
          metadata_id: metadata_id
          sql_query: sql_query
        - metadata_name: metadata_name
          metadata_id: metadata_id
          sql_query: sql_query
        metadata_type: LIVEBOARD
        metadata_id: metadata_id
      properties:
        metadata_id:
          description: Unique identifier of the metadata.
          type: string
        metadata_name:
          description: Name of the metadata.
          type: string
        metadata_type:
          description: Type of the metadata.
          enum:
          - LIVEBOARD
          - ANSWER
          - LOGICAL_TABLE
          - LOGICAL_COLUMN
          - CONNECTION
          - TAG
          - USER
          - USER_GROUP
          - LOGICAL_RELATIONSHIP
          type: string
        sql_queries:
          description: SQL query details of metadata objects.
          items:
            $ref: '#/components/schemas/SqlQuery'
          type: array
      required:
      - metadata_id
      - metadata_name
      - metadata_type
      - sql_queries
      type: object
    SqlQuery:
      description: Response format associated with fetch SQL query api
      example:
        metadata_name: metadata_name
        metadata_id: metadata_id
        sql_query: sql_query
      properties:
        metadata_id:
          description: Unique identifier of the metadata.
          type: string
        metadata_name:
          description: Name of the metadata.
          type: string
        sql_query:
          description: SQL query of a metadata object.
          type: string
      required:
      - metadata_id
      - metadata_name
      - sql_query
      type: object
    PdfOptionsInput:
      properties:
        include_cover_page:
          default: true
          description: Indicates whether to include the cover page with the Liveboard
            title.
          nullable: true
          type: boolean
        include_custom_logo:
          default: true
          description: Indicates whether to include customized wide logo in the footer
            if available.
          nullable: true
          type: boolean
        include_filter_page:
          default: true
          description: Indicates whether to include a page with all applied filters.
          nullable: true
          type: boolean
        include_page_number:
          default: true
          description: Indicates whether to include page number in the footer of each
            page.
          nullable: true
          type: boolean
        page_orientation:
          default: PORTRAIT
          description: Page orientation of the PDF.
          enum:
          - PORTRAIT
          - LANDSCAPE
          nullable: true
          type: string
        truncate_table:
          default: false
          description: Indicates whether to include only the first page of the tables.
          nullable: true
          type: boolean
        page_footer_text:
          description: Text to include in the footer of each page.
          nullable: true
          type: string
      type: object
    PngOptionsInput:
      properties:
        include_cover_page:
          default: false
          description: Indicates whether to include the cover page with the Liveboard
            title.
          nullable: true
          type: boolean
        include_filter_page:
          default: false
          description: Indicates whether to include a page with all applied filters.
          nullable: true
          type: boolean
        personalised_view_id:
          description: Indicates personalised view of the Liveboard in case of png
          nullable: true
          type: string
      type: object
    RegionalSettingsInput:
      properties:
        currency_format:
          description: ISO code to be appended with currency values.
          enum:
          - ADP
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARA
          - ARS
          - ATS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BEF
          - BGL
          - BGM
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BOP
          - BOV
          - BRL
          - BSD
          - BTN
          - BUK
          - BWP
          - BYN
          - BZD
          - CAD
          - CDF
          - CHE
          - CHF
          - CHW
          - CLE
          - CLP
          - CNX
          - CNY
          - COP
          - COU
          - CRC
          - CSK
          - CUC
          - CUP
          - CVE
          - CYP
          - CZK
          - DDM
          - DEM
          - DJF
          - DKK
          - DOP
          - DZD
          - ECS
          - ECV
          - EEK
          - EGP
          - ERN
          - ESP
          - ETB
          - EUR
          - FIM
          - FJD
          - FKP
          - FRF
          - GBP
          - GEK
          - GEL
          - GHS
          - GIP
          - GMD
          - GNF
          - GNS
          - GQE
          - GRD
          - GTQ
          - GWE
          - GWP
          - GYD
          - HKD
          - HNL
          - HRD
          - HRK
          - HTG
          - HUF
          - IDR
          - IEP
          - ILP
          - ILS
          - INR
          - IQD
          - IRR
          - ISK
          - ITL
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LTL
          - LTT
          - LUC
          - LUF
          - LUL
          - LVL
          - LVR
          - LYD
          - MAD
          - MAF
          - MCF
          - MDC
          - MDL
          - MGA
          - MGF
          - MKD
          - MLF
          - MMK
          - MNT
          - MOP
          - MRU
          - MTL
          - MTP
          - MUR
          - MVR
          - MWK
          - MXN
          - MXV
          - MYR
          - MZE
          - MZN
          - NAD
          - NGN
          - NIO
          - NLG
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEI
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PTE
          - PYG
          - QAR
          - RHD
          - RON
          - RSD
          - RUB
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SIT
          - SKK
          - SLL
          - SOS
          - SRD
          - SRG
          - SSP
          - STN
          - SUR
          - SVC
          - SYP
          - SZL
          - THB
          - TJR
          - TJS
          - TMT
          - TND
          - TOP
          - TPE
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UAK
          - UGX
          - USD
          - UYU
          - UYW
          - UZS
          - VES
          - VND
          - VUV
          - WST
          - XAF
          - XAG
          - XAU
          - XBA
          - XBB
          - XCD
          - XDR
          - XEU
          - XFO
          - XFU
          - XOF
          - XPD
          - XPF
          - XPT
          - XRE
          - XSU
          - XTS
          - XUA
          - XXX
          - YDD
          - YER
          - ZAR
          - ZMW
          nullable: true
          type: string
        user_locale:
          description: Indicates the locale to be used for all formattings.
          enum:
          - en-CA
          - en-GB
          - en-US
          - de-DE
          - ja-JP
          - zh-CN
          - pt-BR
          - fr-FR
          - fr-CA
          - es-US
          - da-DK
          - es-ES
          - fi-FI
          - sv-SE
          - nb-NO
          - pt-PT
          - nl-NL
          - it-IT
          - ru-RU
          - en-IN
          - de-CH
          - en-NZ
          - es-MX
          - en-AU
          - zh-Hant
          - ko-KR
          - en-DE
          nullable: true
          type: string
        number_format_locale:
          description: Indicates the locale to be used for number formatting.
          enum:
          - en-CA
          - en-GB
          - en-US
          - de-DE
          - ja-JP
          - zh-CN
          - pt-BR
          - fr-FR
          - fr-CA
          - es-US
          - da-DK
          - es-ES
          - fi-FI
          - sv-SE
          - nb-NO
          - pt-PT
          - nl-NL
          - it-IT
          - ru-RU
          - en-IN
          - de-CH
          - en-NZ
          - es-MX
          - en-AU
          - zh-Hant
          - ko-KR
          - en-DE
          nullable: true
          type: string
        date_format_locale:
          description: Indicates the locale to be used for date formatting.
          enum:
          - en-CA
          - en-GB
          - en-US
          - de-DE
          - ja-JP
          - zh-CN
          - pt-BR
          - fr-FR
          - fr-CA
          - es-US
          - da-DK
          - es-ES
          - fi-FI
          - sv-SE
          - nb-NO
          - pt-PT
          - nl-NL
          - it-IT
          - ru-RU
          - en-IN
          - de-CH
          - en-NZ
          - es-MX
          - en-AU
          - zh-Hant
          - ko-KR
          - en-DE
          nullable: true
          type: string
      type: object
    PermissionOfPrincipalsResponse:
      example:
        principal_permission_details: "{}"
      properties:
        principal_permission_details:
          nullable: true
          type: object
      type: object
    PermissionOfMetadataResponse:
      example:
        metadata_permission_details: "{}"
      properties:
        metadata_permission_details:
          nullable: true
          type: object
      type: object
    PrincipalsInput:
      properties:
        identifier:
          description: Unique ID or name of the principal object such as a user or
            group.
          type: string
        type:
          description: Principal type.
          enum:
          - USER
          - USER_GROUP
          nullable: true
          type: string
      required:
      - identifier
      type: object
    PermissionsMetadataTypeInput:
      description: MetadataType InputType used in Permission API's
      properties:
        type:
          description: "  Type of metadata object.\n  \n\nRequired if the name of\
            \ the object is set as the identifier. This attribute is optional when\
            \ the object GUID is specified as the identifier."
          enum:
          - LIVEBOARD
          - ANSWER
          - LOGICAL_TABLE
          - LOGICAL_COLUMN
          - CONNECTION
          nullable: true
          type: string
        identifier:
          description: Unique ID or name of the metadata object.
          type: string
      required:
      - identifier
      type: object
    SearchDataResponse:
      description: Response format associated with the search data API.
      example:
        contents:
        - data_rows:
          - "{}"
          - "{}"
          record_size: 1
          available_data_row_count: 0
          sampling_ratio: 5.637377
          column_names:
          - column_names
          - column_names
          returned_data_row_count: 5
          record_offset: 6
        - data_rows:
          - "{}"
          - "{}"
          record_size: 1
          available_data_row_count: 0
          sampling_ratio: 5.637377
          column_names:
          - column_names
          - column_names
          returned_data_row_count: 5
          record_offset: 6
      properties:
        contents:
          description: Data content of metadata objects
          items:
            $ref: '#/components/schemas/AnswerContent'
          type: array
      required:
      - contents
      type: object
    AnswerContent:
      example:
        data_rows:
        - "{}"
        - "{}"
        record_size: 1
        available_data_row_count: 0
        sampling_ratio: 5.637377
        column_names:
        - column_names
        - column_names
        returned_data_row_count: 5
        record_offset: 6
      properties:
        available_data_row_count:
          description: Total available data row count.
          format: int32
          type: integer
        column_names:
          description: Name of the columns.
          items:
            type: string
          type: array
        data_rows:
          description: Rows of data set.
          items:
            type: object
          type: array
        record_offset:
          description: The starting record number from where the records should be
            included.
          format: int32
          type: integer
        record_size:
          description: The number of records that should be included.
          format: int32
          type: integer
        returned_data_row_count:
          description: Total returned data row count.
          format: int32
          type: integer
        sampling_ratio:
          description: "Sampling ratio (0 to 1). If the query was sampled, it is the\
            \ ratio of keys returned in the data set to the total number of keys expected\
            \ in the query. If the value is 1.0, this means that the complete result\
            \ is returned."
          format: float
          type: number
      required:
      - available_data_row_count
      - column_names
      - data_rows
      - record_offset
      - record_size
      - returned_data_row_count
      - sampling_ratio
      type: object
    LiveboardDataResponse:
      example:
        metadata_name: metadata_name
        contents:
        - visualization_id: visualization_id
          data_rows:
          - "{}"
          - "{}"
          record_size: 1
          available_data_row_count: 0
          sampling_ratio: 5.637377
          column_names:
          - column_names
          - column_names
          returned_data_row_count: 5
          visualization_name: visualization_name
          record_offset: 6
        - visualization_id: visualization_id
          data_rows:
          - "{}"
          - "{}"
          record_size: 1
          available_data_row_count: 0
          sampling_ratio: 5.637377
          column_names:
          - column_names
          - column_names
          returned_data_row_count: 5
          visualization_name: visualization_name
          record_offset: 6
        metadata_id: metadata_id
      properties:
        metadata_id:
          description: The unique identifier of the object
          type: string
        metadata_name:
          description: Name of the metadata object
          type: string
        contents:
          description: Data content of metadata objects
          items:
            $ref: '#/components/schemas/LiveboardContent'
          type: array
      required:
      - contents
      - metadata_id
      - metadata_name
      type: object
    LiveboardContent:
      example:
        visualization_id: visualization_id
        data_rows:
        - "{}"
        - "{}"
        record_size: 1
        available_data_row_count: 0
        sampling_ratio: 5.637377
        column_names:
        - column_names
        - column_names
        returned_data_row_count: 5
        visualization_name: visualization_name
        record_offset: 6
      properties:
        available_data_row_count:
          description: Total available data row count.
          format: int32
          type: integer
        column_names:
          description: Name of the columns.
          items:
            type: string
          type: array
        data_rows:
          description: Rows of data set.
          items:
            type: object
          type: array
        record_offset:
          description: The starting record number from where the records should be
            included.
          format: int32
          type: integer
        record_size:
          description: The number of records that should be included.
          format: int32
          type: integer
        returned_data_row_count:
          description: Total returned data row count.
          format: int32
          type: integer
        sampling_ratio:
          description: "Sampling ratio (0 to 1). If the query was sampled, it is the\
            \ ratio of keys returned in the data set to the total number of keys expected\
            \ in the query. If the value is 1.0, this means that the complete result\
            \ is returned."
          format: float
          type: number
        visualization_id:
          description: Unique ID of the visualization.
          nullable: true
          type: string
        visualization_name:
          description: Name of the visualization.
          nullable: true
          type: string
      required:
      - available_data_row_count
      - column_names
      - data_rows
      - record_offset
      - record_size
      - returned_data_row_count
      - sampling_ratio
      type: object
    AnswerDataResponse:
      description: Response format associated with fetch data api
      example:
        metadata_name: metadata_name
        contents:
        - data_rows:
          - "{}"
          - "{}"
          record_size: 1
          available_data_row_count: 0
          sampling_ratio: 5.637377
          column_names:
          - column_names
          - column_names
          returned_data_row_count: 5
          record_offset: 6
        - data_rows:
          - "{}"
          - "{}"
          record_size: 1
          available_data_row_count: 0
          sampling_ratio: 5.637377
          column_names:
          - column_names
          - column_names
          returned_data_row_count: 5
          record_offset: 6
        metadata_id: metadata_id
      properties:
        metadata_id:
          description: The unique identifier of the object
          type: string
        metadata_name:
          description: Name of the metadata object
          type: string
        contents:
          description: Data content of metadata objects
          items:
            $ref: '#/components/schemas/AnswerContent'
          type: array
      required:
      - contents
      - metadata_id
      - metadata_name
      type: object
    LogResponse:
      example:
        date: date
        log: log
      properties:
        date:
          description: Date timestamp of the log entry
          type: string
        log:
          description: Log data
          type: string
      required:
      - date
      - log
      type: object
    RepoConfigObject:
      example:
        org:
          name: name
          id: 6
        enable_guid_mapping: true
        configuration_branch_name: configuration_branch_name
        repository_url: repository_url
        commit_branch_name: commit_branch_name
        branches:
        - branches
        - branches
        username: username
      properties:
        repository_url:
          description: Remote repository URL configured
          nullable: true
          type: string
        username:
          description: Username to authenticate connection to the version control
            system
          nullable: true
          type: string
        commit_branch_name:
          description: Name of the remote branch where objects from this Thoughtspot
            instance will be versioned.
          nullable: true
          type: string
        branches:
          description: Branches that have been pulled in local repository
          items:
            type: string
          nullable: true
          type: array
        enable_guid_mapping:
          description: Maintain mapping of guid for the deployment to an instance
          nullable: true
          type: boolean
        configuration_branch_name:
          description: Name of the branch where the configuration files related to
            operations between Thoughtspot and version control repo should be maintained.
          nullable: true
          type: string
        org:
          $ref: '#/components/schemas/Org'
      type: object
    CommitHistoryResponse:
      example:
        committer:
          email: email
          username: username
        author:
          email: email
          username: username
        comment: comment
        commit_time: commit_time
        commit_id: commit_id
        branch: branch
      properties:
        committer:
          $ref: '#/components/schemas/CommiterType'
        author:
          $ref: '#/components/schemas/AuthorType'
        comment:
          description: Comments associated with the commit
          type: string
        commit_time:
          description: Time at which the changes were committed.
          type: string
        commit_id:
          description: SHA id associated with the commit
          type: string
        branch:
          description: Branch where changes were committed
          type: string
      required:
      - author
      - branch
      - comment
      - commit_id
      - commit_time
      - committer
      type: object
    CommiterType:
      example:
        email: email
        username: username
      properties:
        email:
          description: Email id of the committer
          nullable: true
          type: string
        username:
          description: Username of the committer
          nullable: true
          type: string
      type: object
    AuthorType:
      example:
        email: email
        username: username
      properties:
        email:
          description: Email id of the committer
          nullable: true
          type: string
        username:
          description: Username of the committer
          nullable: true
          type: string
      type: object
    ConnectionInput:
      properties:
        identifier:
          description: Unique ID or name of the connection.
          nullable: true
          type: string
        name_pattern:
          description: A pattern to match case-insensitive name of the connection
            object. User `%` for a wildcard match.
          nullable: true
          type: string
        data_warehouse_objects:
          description: "Filter options for databases, schemas, tables and columns."
          items:
            $ref: '#/components/schemas/DataWarehouseObjectInput'
          nullable: true
          type: array
      type: object
    DataWarehouseObjectInput:
      properties:
        database:
          description: Name of the database.
          nullable: true
          type: string
        schema:
          description: Name of the schema within the database.
          nullable: true
          type: string
        table:
          description: Name of the table within the schema.
          nullable: true
          type: string
        column:
          description: Name of the column within the table.
          nullable: true
          type: string
      type: object
    SortOptionInput:
      properties:
        field_name:
          description: Name of the field to apply the sort on.
          enum:
          - NAME
          - DISPLAY_NAME
          - AUTHOR
          - CREATED
          - MODIFIED
          - LAST_ACCESSED
          - SYNCED
          - VIEWS
          - USER_STATE
          - ROW_COUNT
          nullable: true
          type: string
        order:
          description: "Sort order : ASC(Ascending) or DESC(Descending)."
          enum:
          - ASC
          - DESC
          nullable: true
          type: string
      type: object
    SearchConnectionResponse:
      example:
        data_warehouse_objects:
          databases:
          - schemas:
            - tables:
              - relationships:
                - "{}"
                - "{}"
                columns:
                - is_aggregate: is_aggregate
                  can_import: true
                  is_linked_active: true
                  name: name
                  data_type: data_type
                  selected: true
                - is_aggregate: is_aggregate
                  can_import: true
                  is_linked_active: true
                  name: name
                  data_type: data_type
                  selected: true
                name: name
                description: description
                type: type
                selected: true
                linked: true
              - relationships:
                - "{}"
                - "{}"
                columns:
                - is_aggregate: is_aggregate
                  can_import: true
                  is_linked_active: true
                  name: name
                  data_type: data_type
                  selected: true
                - is_aggregate: is_aggregate
                  can_import: true
                  is_linked_active: true
                  name: name
                  data_type: data_type
                  selected: true
                name: name
                description: description
                type: type
                selected: true
                linked: true
              name: name
            - tables:
              - relationships:
                - "{}"
                - "{}"
                columns:
                - is_aggregate: is_aggregate
                  can_import: true
                  is_linked_active: true
                  name: name
                  data_type: data_type
                  selected: true
                - is_aggregate: is_aggregate
                  can_import: true
                  is_linked_active: true
                  name: name
                  data_type: data_type
                  selected: true
                name: name
                description: description
                type: type
                selected: true
                linked: true
              - relationships:
                - "{}"
                - "{}"
                columns:
                - is_aggregate: is_aggregate
                  can_import: true
                  is_linked_active: true
                  name: name
                  data_type: data_type
                  selected: true
                - is_aggregate: is_aggregate
                  can_import: true
                  is_linked_active: true
                  name: name
                  data_type: data_type
                  selected: true
                name: name
                description: description
                type: type
                selected: true
                linked: true
              name: name
            name: name
            auto_created: true
          - schemas:
            - tables:
              - relationships:
                - "{}"
                - "{}"
                columns:
                - is_aggregate: is_aggregate
                  can_import: true
                  is_linked_active: true
                  name: name
                  data_type: data_type
                  selected: true
                - is_aggregate: is_aggregate
                  can_import: true
                  is_linked_active: true
                  name: name
                  data_type: data_type
                  selected: true
                name: name
                description: description
                type: type
                selected: true
                linked: true
              - relationships:
                - "{}"
                - "{}"
                columns:
                - is_aggregate: is_aggregate
                  can_import: true
                  is_linked_active: true
                  name: name
                  data_type: data_type
                  selected: true
                - is_aggregate: is_aggregate
                  can_import: true
                  is_linked_active: true
                  name: name
                  data_type: data_type
                  selected: true
                name: name
                description: description
                type: type
                selected: true
                linked: true
              name: name
            - tables:
              - relationships:
                - "{}"
                - "{}"
                columns:
                - is_aggregate: is_aggregate
                  can_import: true
                  is_linked_active: true
                  name: name
                  data_type: data_type
                  selected: true
                - is_aggregate: is_aggregate
                  can_import: true
                  is_linked_active: true
                  name: name
                  data_type: data_type
                  selected: true
                name: name
                description: description
                type: type
                selected: true
                linked: true
              - relationships:
                - "{}"
                - "{}"
                columns:
                - is_aggregate: is_aggregate
                  can_import: true
                  is_linked_active: true
                  name: name
                  data_type: data_type
                  selected: true
                - is_aggregate: is_aggregate
                  can_import: true
                  is_linked_active: true
                  name: name
                  data_type: data_type
                  selected: true
                name: name
                description: description
                type: type
                selected: true
                linked: true
              name: name
            name: name
            auto_created: true
        name: name
        description: description
        details: "{}"
        id: id
        data_warehouse_type: SNOWFLAKE
      properties:
        id:
          description: Unique ID of the connection.
          type: string
        name:
          description: Name of the connection.
          type: string
        description:
          description: Description of the connection.
          nullable: true
          type: string
        data_warehouse_type:
          description: Type of data warehouse.
          enum:
          - SNOWFLAKE
          - AMAZON_REDSHIFT
          - GOOGLE_BIGQUERY
          - AZURE_SYNAPSE
          - TERADATA
          - SAP_HANA
          - STARBURST
          - ORACLE_ADW
          - DATABRICKS
          - DENODO
          - DREMIO
          - TRINO
          - PRESTO
          - POSTGRES
          - SQLSERVER
          - MYSQL
          - GENERIC_JDBC
          - AMAZON_RDS_POSTGRESQL
          - AMAZON_AURORA_POSTGRESQL
          - AMAZON_RDS_MYSQL
          - AMAZON_AURORA_MYSQL
          - LOOKER
          - AMAZON_ATHENA
          - SINGLESTORE
          - GCP_SQLSERVER
          - GCP_ALLOYDB_POSTGRESQL
          - GCP_POSTGRESQL
          - GCP_MYSQL
          - MODE
          - GOOGLE_SHEETS
          - FALCON
          - FALCON_ONPREM
          - CLICKHOUSE
          type: string
        data_warehouse_objects:
          $ref: '#/components/schemas/DataWarehouseObjects'
        details:
          description: Details of the connection.
          nullable: true
          type: object
      required:
      - data_warehouse_type
      - id
      - name
      type: object
    DataWarehouseObjects:
      example:
        databases:
        - schemas:
          - tables:
            - relationships:
              - "{}"
              - "{}"
              columns:
              - is_aggregate: is_aggregate
                can_import: true
                is_linked_active: true
                name: name
                data_type: data_type
                selected: true
              - is_aggregate: is_aggregate
                can_import: true
                is_linked_active: true
                name: name
                data_type: data_type
                selected: true
              name: name
              description: description
              type: type
              selected: true
              linked: true
            - relationships:
              - "{}"
              - "{}"
              columns:
              - is_aggregate: is_aggregate
                can_import: true
                is_linked_active: true
                name: name
                data_type: data_type
                selected: true
              - is_aggregate: is_aggregate
                can_import: true
                is_linked_active: true
                name: name
                data_type: data_type
                selected: true
              name: name
              description: description
              type: type
              selected: true
              linked: true
            name: name
          - tables:
            - relationships:
              - "{}"
              - "{}"
              columns:
              - is_aggregate: is_aggregate
                can_import: true
                is_linked_active: true
                name: name
                data_type: data_type
                selected: true
              - is_aggregate: is_aggregate
                can_import: true
                is_linked_active: true
                name: name
                data_type: data_type
                selected: true
              name: name
              description: description
              type: type
              selected: true
              linked: true
            - relationships:
              - "{}"
              - "{}"
              columns:
              - is_aggregate: is_aggregate
                can_import: true
                is_linked_active: true
                name: name
                data_type: data_type
                selected: true
              - is_aggregate: is_aggregate
                can_import: true
                is_linked_active: true
                name: name
                data_type: data_type
                selected: true
              name: name
              description: description
              type: type
              selected: true
              linked: true
            name: name
          name: name
          auto_created: true
        - schemas:
          - tables:
            - relationships:
              - "{}"
              - "{}"
              columns:
              - is_aggregate: is_aggregate
                can_import: true
                is_linked_active: true
                name: name
                data_type: data_type
                selected: true
              - is_aggregate: is_aggregate
                can_import: true
                is_linked_active: true
                name: name
                data_type: data_type
                selected: true
              name: name
              description: description
              type: type
              selected: true
              linked: true
            - relationships:
              - "{}"
              - "{}"
              columns:
              - is_aggregate: is_aggregate
                can_import: true
                is_linked_active: true
                name: name
                data_type: data_type
                selected: true
              - is_aggregate: is_aggregate
                can_import: true
                is_linked_active: true
                name: name
                data_type: data_type
                selected: true
              name: name
              description: description
              type: type
              selected: true
              linked: true
            name: name
          - tables:
            - relationships:
              - "{}"
              - "{}"
              columns:
              - is_aggregate: is_aggregate
                can_import: true
                is_linked_active: true
                name: name
                data_type: data_type
                selected: true
              - is_aggregate: is_aggregate
                can_import: true
                is_linked_active: true
                name: name
                data_type: data_type
                selected: true
              name: name
              description: description
              type: type
              selected: true
              linked: true
            - relationships:
              - "{}"
              - "{}"
              columns:
              - is_aggregate: is_aggregate
                can_import: true
                is_linked_active: true
                name: name
                data_type: data_type
                selected: true
              - is_aggregate: is_aggregate
                can_import: true
                is_linked_active: true
                name: name
                data_type: data_type
                selected: true
              name: name
              description: description
              type: type
              selected: true
              linked: true
            name: name
          name: name
          auto_created: true
      properties:
        databases:
          description: Databases of the connection.
          items:
            $ref: '#/components/schemas/Database'
          type: array
      required:
      - databases
      type: object
    Database:
      example:
        schemas:
        - tables:
          - relationships:
            - "{}"
            - "{}"
            columns:
            - is_aggregate: is_aggregate
              can_import: true
              is_linked_active: true
              name: name
              data_type: data_type
              selected: true
            - is_aggregate: is_aggregate
              can_import: true
              is_linked_active: true
              name: name
              data_type: data_type
              selected: true
            name: name
            description: description
            type: type
            selected: true
            linked: true
          - relationships:
            - "{}"
            - "{}"
            columns:
            - is_aggregate: is_aggregate
              can_import: true
              is_linked_active: true
              name: name
              data_type: data_type
              selected: true
            - is_aggregate: is_aggregate
              can_import: true
              is_linked_active: true
              name: name
              data_type: data_type
              selected: true
            name: name
            description: description
            type: type
            selected: true
            linked: true
          name: name
        - tables:
          - relationships:
            - "{}"
            - "{}"
            columns:
            - is_aggregate: is_aggregate
              can_import: true
              is_linked_active: true
              name: name
              data_type: data_type
              selected: true
            - is_aggregate: is_aggregate
              can_import: true
              is_linked_active: true
              name: name
              data_type: data_type
              selected: true
            name: name
            description: description
            type: type
            selected: true
            linked: true
          - relationships:
            - "{}"
            - "{}"
            columns:
            - is_aggregate: is_aggregate
              can_import: true
              is_linked_active: true
              name: name
              data_type: data_type
              selected: true
            - is_aggregate: is_aggregate
              can_import: true
              is_linked_active: true
              name: name
              data_type: data_type
              selected: true
            name: name
            description: description
            type: type
            selected: true
            linked: true
          name: name
        name: name
        auto_created: true
      properties:
        name:
          description: Name of the database.
          type: string
        schemas:
          description: Schemas of the database.
          items:
            $ref: '#/components/schemas/SchemaObject'
          nullable: true
          type: array
        auto_created:
          description: Determines if the object is auto created.
          nullable: true
          type: boolean
      required:
      - name
      type: object
    SchemaObject:
      example:
        tables:
        - relationships:
          - "{}"
          - "{}"
          columns:
          - is_aggregate: is_aggregate
            can_import: true
            is_linked_active: true
            name: name
            data_type: data_type
            selected: true
          - is_aggregate: is_aggregate
            can_import: true
            is_linked_active: true
            name: name
            data_type: data_type
            selected: true
          name: name
          description: description
          type: type
          selected: true
          linked: true
        - relationships:
          - "{}"
          - "{}"
          columns:
          - is_aggregate: is_aggregate
            can_import: true
            is_linked_active: true
            name: name
            data_type: data_type
            selected: true
          - is_aggregate: is_aggregate
            can_import: true
            is_linked_active: true
            name: name
            data_type: data_type
            selected: true
          name: name
          description: description
          type: type
          selected: true
          linked: true
        name: name
      properties:
        name:
          description: Name of the schema.
          type: string
        tables:
          description: Tables in the schema.
          items:
            $ref: '#/components/schemas/Table'
          nullable: true
          type: array
      required:
      - name
      type: object
    Table:
      example:
        relationships:
        - "{}"
        - "{}"
        columns:
        - is_aggregate: is_aggregate
          can_import: true
          is_linked_active: true
          name: name
          data_type: data_type
          selected: true
        - is_aggregate: is_aggregate
          can_import: true
          is_linked_active: true
          name: name
          data_type: data_type
          selected: true
        name: name
        description: description
        type: type
        selected: true
        linked: true
      properties:
        name:
          description: Name of the table.
          type: string
        columns:
          description: Columns of the table.
          items:
            $ref: '#/components/schemas/Column'
          nullable: true
          type: array
        type:
          description: Type of table. Either view or table
          nullable: true
          type: string
        description:
          description: Description of the table
          nullable: true
          type: string
        selected:
          description: Determines if the table is selected
          nullable: true
          type: boolean
        linked:
          description: Determines if the table is linked
          nullable: true
          type: boolean
        relationships:
          description: List of relationships for the table
          items:
            type: object
          nullable: true
          type: array
      required:
      - name
      type: object
    Column:
      example:
        is_aggregate: is_aggregate
        can_import: true
        is_linked_active: true
        name: name
        data_type: data_type
        selected: true
      properties:
        name:
          description: Name of the column
          type: string
        data_type:
          description: Data type of the column
          type: string
        is_aggregate:
          description: Determines if the column schema is an aggregate
          nullable: true
          type: string
        can_import:
          description: Determines if the column schema can be imported
          nullable: true
          type: boolean
        selected:
          description: Determines if the table is selected
          nullable: true
          type: boolean
        is_linked_active:
          description: Determines if the table is linked
          nullable: true
          type: boolean
      required:
      - data_type
      - name
      type: object
    SearchRoleResponse:
      description: Response for search role api should handle hidden privileges as
        well.
      example:
        privileges:
        - UNKNOWN
        - UNKNOWN
        groups_assigned_count: 0
        creation_time_in_millis: "{}"
        hidden: true
        deprecated: true
        description: description
        groups:
        - name: name
          id: id
        - name: name
          id: id
        permission: READ_ONLY
        modification_time_in_millis: "{}"
        external: true
        deleted: true
        name: name
        modifier_id: modifier_id
        shared_via_connection: true
        id: id
        orgs:
        - name: name
          id: id
        - name: name
          id: id
        author_id: author_id
      properties:
        id:
          description: Unique Id of the role.
          type: string
        name:
          description: Name of the role
          type: string
        description:
          description: Description of the role
          type: string
        groups_assigned_count:
          description: number of groups assigned with this role
          format: int32
          nullable: true
          type: integer
        orgs:
          description: Orgs in which role exists.
          items:
            $ref: '#/components/schemas/GenericInfo'
          nullable: true
          type: array
        groups:
          description: Details of groups assigned with this role
          items:
            $ref: '#/components/schemas/GenericInfo'
          nullable: true
          type: array
        privileges:
          description: Privileges granted to the role.
          items:
            enum:
            - UNKNOWN
            - ADMINISTRATION
            - AUTHORING
            - USERDATAUPLOADING
            - DATADOWNLOADING
            - USERMANAGEMENT
            - SECURITYMANAGEMENT
            - LOGICALMODELING
            - DATAMANAGEMENT
            - TAGMANAGEMENT
            - SHAREWITHALL
            - SYSTEMMANAGEMENT
            - JOBSCHEDULING
            - A3ANALYSIS
            - EXPERIMENTALFEATUREPRIVILEGE
            - BYPASSRLS
            - RANALYSIS
            - DISABLE_PINBOARD_CREATION
            - DEVELOPER
            - APPLICATION_ADMINISTRATION
            - USER_ADMINISTRATION
            - GROUP_ADMINISTRATION
            - BACKUP_ADMINISTRATION
            - SYSTEM_INFO_ADMINISTRATION
            - ENABLESPOTAPPCREATION
            - SYNCMANAGEMENT
            - ORG_ADMINISTRATION
            - ROLE_ADMINISTRATION
            - AUTHENTICATION_ADMINISTRATION
            - BILLING_INFO_ADMINISTRATION
            - PREVIEW_THOUGHTSPOT_SAGE
            - LIVEBOARD_VERIFIER
            - CAN_MANAGE_CUSTOM_CALENDAR
            - CAN_CREATE_OR_EDIT_CONNECTIONS
            - CAN_CONFIGURE_CONNECTIONS
            - CAN_MANAGE_WORKSHEET_VIEWS_TABLES
            - CAN_MANAGE_VERSION_CONTROL
            - THIRDPARTY_ANALYSIS
            - CONTROL_TRUSTED_AUTH
            - CAN_CREATE_CATALOG
            - ALLOW_NON_EMBED_FULL_APP_ACCESS
            - CAN_ACCESS_ANALYST_STUDIO
            - CAN_MANAGE_ANALYST_STUDIO
            - PREVIEW_DOCUMENT_SEARCH
            - CAN_SETUP_VERSION_CONTROL
            type: string
          type: array
        permission:
          description: Permission details of the Role
          enum:
          - READ_ONLY
          - MODIFY
          - NO_ACCESS
          nullable: true
          type: string
        author_id:
          description: Unique identifier of author of the role.
          nullable: true
          type: string
        modifier_id:
          description: Unique identifier of modifier of the role.
          nullable: true
          type: string
        creation_time_in_millis:
          description: Creation time of the role in milliseconds.
          nullable: true
          type: object
        modification_time_in_millis:
          description: Last modified time of the role in milliseconds.
          nullable: true
          type: object
        deleted:
          description: Indicates whether the role is deleted.
          nullable: true
          type: boolean
        deprecated:
          description: Indicates whether the role is deprecated.
          nullable: true
          type: boolean
        external:
          description: Indicates whether the role is external.
          nullable: true
          type: boolean
        hidden:
          description: Indicates whether the role is hidden.
          nullable: true
          type: boolean
        shared_via_connection:
          description: Indicates whether the role is shared via connection
          nullable: true
          type: boolean
      required:
      - description
      - id
      - name
      - privileges
      type: object
    Default_Action_Config_Search_Input:
      description: "Default Custom action configuration. This includes the custom\
        \ action's visibility across all visualizations and Answers. By default, a\
        \ custom action is added to all visualizations and Answers."
      properties:
        visibility:
          description: "Custom action is available on all visualizations. Earlier\
            \ naming convention: LOCAL/GLOBAL. TRUE signifies GLOBAL for backward\
            \ compatibility."
          nullable: true
          type: boolean
      type: object
    ResponseCustomAction:
      description: Custom action details
      example:
        action_details:
          CALLBACK:
            reference: reference
          URL:
            reference: reference
            parameters:
            - value: value
              key: key
            - value: value
              key: key
            url: url
            authentication:
              API_Key:
                value: value
                key: key
              Basic_Auth:
                password: password
                username: username
              Bearer_Token: Bearer_Token
              No_Auth: No_Auth
        metadata_association:
        - identifier: identifier
          type: type
          action_config:
            visibility: true
            position: position
        - identifier: identifier
          type: type
          action_config:
            visibility: true
            position: position
        default_action_config:
          visibility: true
        name: name
        id: id
        user_groups:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        action_details:
          $ref: '#/components/schemas/Action_details'
        default_action_config:
          $ref: '#/components/schemas/Default_action_config'
        id:
          description: Unique Id of the custom action.
          type: string
        metadata_association:
          description: Metadata objects to assign the the custom action to.
          items:
            $ref: '#/components/schemas/Metadata_Association_Item'
          nullable: true
          type: array
        name:
          description: Unique name of the custom action.
          type: string
        user_groups:
          description: Unique ID or name of the User groups which are associated with
            the custom action.
          items:
            $ref: '#/components/schemas/Object_ID_And_Name'
          nullable: true
          type: array
      required:
      - action_details
      - default_action_config
      - id
      - name
      type: object
    Action_details:
      description: Type and Configuration for Custom Actions
      example:
        CALLBACK:
          reference: reference
        URL:
          reference: reference
          parameters:
          - value: value
            key: key
          - value: value
            key: key
          url: url
          authentication:
            API_Key:
              value: value
              key: key
            Basic_Auth:
              password: password
              username: username
            Bearer_Token: Bearer_Token
            No_Auth: No_Auth
      properties:
        CALLBACK:
          $ref: '#/components/schemas/CALLBACK'
        URL:
          $ref: '#/components/schemas/URL'
      type: object
    CALLBACK:
      description: CALLBACK Custom Action Type
      example:
        reference: reference
      properties:
        reference:
          description: "Reference name of the SDK. By default, the value will be set\
            \ to action name."
          nullable: true
          type: string
      type: object
    URL:
      description: URL Custom Action Type
      example:
        reference: reference
        parameters:
        - value: value
          key: key
        - value: value
          key: key
        url: url
        authentication:
          API_Key:
            value: value
            key: key
          Basic_Auth:
            password: password
            username: username
          Bearer_Token: Bearer_Token
          No_Auth: No_Auth
      properties:
        authentication:
          $ref: '#/components/schemas/Authentication'
        parameters:
          description: Query parameters for url.
          items:
            $ref: '#/components/schemas/ParametersListItem'
          nullable: true
          type: array
        url:
          description: Request Url for the Custom action.
          type: string
        reference:
          description: "Reference name of the SDK. By default, the value will be set\
            \ to action name."
          nullable: true
          type: string
      required:
      - url
      type: object
    Authentication:
      description: Authorization type for the custom action.
      example:
        API_Key:
          value: value
          key: key
        Basic_Auth:
          password: password
          username: username
        Bearer_Token: Bearer_Token
        No_Auth: No_Auth
      properties:
        API_Key:
          $ref: '#/components/schemas/API_Key'
        Basic_Auth:
          $ref: '#/components/schemas/Basic_Auth'
        Bearer_Token:
          description: Bearer tokens enable requests to authenticate using an access
            key.
          nullable: true
          type: string
        No_Auth:
          description: No authorization. If your request doesn't require authorization.
          nullable: true
          type: string
      type: object
    API_Key:
      description: "With API key auth, you send a key-value pair to the API either\
        \ in the request headers or query parameters."
      example:
        value: value
        key: key
      properties:
        key:
          description: Enter your key name
          nullable: true
          type: string
        value:
          description: Enter you key value
          nullable: true
          type: string
      type: object
    Basic_Auth:
      description: "Basic Auth: Basic authentication involves sending a verified username\
        \ and password with your request."
      example:
        password: password
        username: username
      properties:
        password:
          description: Password for the basic authentication
          nullable: true
          type: string
        username:
          description: Username for the basic authentication
          nullable: true
          type: string
      type: object
    ParametersListItem:
      example:
        value: value
        key: key
      properties:
        key:
          description: Key for the url query parameter
          nullable: true
          type: string
        value:
          description: Value for the url query parameter
          nullable: true
          type: string
      type: object
    Default_action_config:
      description: "Default Custom action configuration. This includes the custom\
        \ action's visibility across all visualizations and Answers. By default, a\
        \ custom action is added to all visualizations and Answers."
      example:
        visibility: true
      properties:
        visibility:
          description: "Custom action is available on all visualizations. Earlier\
            \ , the naming convention: LOCAL/GLOBAL. TRUE signifies GLOBAL for backward\
            \ compatibility."
          nullable: true
          type: boolean
      type: object
    Metadata_Association_Item:
      example:
        identifier: identifier
        type: type
        action_config:
          visibility: true
          position: position
      properties:
        action_config:
          $ref: '#/components/schemas/Action_config'
        identifier:
          description: Unique ID or name of the metadata.
          type: string
        type:
          description: "  Type of metadata.\n  \n\nRequired if the name of the object\
            \ is set as the identifier. This attribute is optional when the object\
            \ GUID is specified as the identifier."
          type: string
      required:
      - action_config
      - identifier
      - type
      type: object
    Action_config:
      description: Specify that the association is enabled for the metadata object
      example:
        visibility: true
        position: position
      properties:
        position:
          description: "Position of the Custom action on the Metadata object. Earlier\
            \ naming convention: context."
          nullable: true
          type: string
        visibility:
          description: "Visibility of the metadata association with custom action.\
            \ Earlier naming convention: enabled"
          nullable: true
          type: boolean
      type: object
    CustomActionMetadataTypeInput:
      description: MetadataType InputType used in Custom Action API's
      properties:
        type:
          description: "  Type of metadata object.\n  \n\nRequired if the name of\
            \ the object is set as the identifier. This attribute is optional when\
            \ the object GUID is specified as the identifier."
          enum:
          - VISUALIZATION
          - ANSWER
          - WORKSHEET
          nullable: true
          type: string
        identifier:
          description: Unique ID or name of the metadata object.
          type: string
      required:
      - identifier
      type: object
    Input_eureka_NLSRequest:
      properties:
        agentVersion:
          description: "Cluster version like 10.4.0.cl, 10.5.0.cl, so on."
          format: int32
          nullable: true
          type: integer
        bypassCache:
          description: "If true, results are not returned from cache & calculated\
            \ every time. Can incur high costs & latency."
          nullable: true
          type: boolean
        instructions:
          description: User specific instructions for processing the @query.
          items:
            type: string
          nullable: true
          type: array
        query:
          description: User query which is a topical/goal oriented question that needs
            to be broken down into smaller simple analytical questions.
          nullable: true
          type: string
      type: object
    eureka_DecomposeQueryResponse:
      example:
        decomposedQueryResponse:
          decomposedQueries:
          - query: query
            worksheetId: worksheetId
            worksheetName: worksheetName
          - query: query
            worksheetId: worksheetId
            worksheetName: worksheetName
      properties:
        decomposedQueryResponse:
          $ref: '#/components/schemas/eureka_LLMDecomposeQueryResponse'
      type: object
    eureka_LLMDecomposeQueryResponse:
      example:
        decomposedQueries:
        - query: query
          worksheetId: worksheetId
          worksheetName: worksheetName
        - query: query
          worksheetId: worksheetId
          worksheetName: worksheetName
      properties:
        decomposedQueries:
          description: List of analytical questions that can be run on their respective
            worksheet/data sources.
          items:
            $ref: '#/components/schemas/eureka_LLMSuggestedQuery'
          nullable: true
          type: array
      type: object
    eureka_LLMSuggestedQuery:
      example:
        query: query
        worksheetId: worksheetId
        worksheetName: worksheetName
      properties:
        query:
          description: NL query that can be run using spotter aka natural language
            search to get an AI generated answer.
          nullable: true
          type: string
        worksheetId:
          description: Unique identifier of the worksheet on which this query can
            be run on.
          nullable: true
          type: string
        worksheetName:
          description: Display name of the worksheet on which this query can be run
            on.
          nullable: true
          type: string
      type: object
    RiseGQLArgWrapper:
      properties:
        name:
          type: string
        type:
          type: string
      required:
      - name
      - type
      type: object
    GenericInfo:
      example:
        name: name
        id: id
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    UserGroup:
      example:
        name: name
        id: id
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    JWT_User_Options:
      description: |-
        JWT user options to create a JWT token given the payload.


        *Deprecated in 9.12.0.cl. Use user_parameters instead.*
      properties:
        parameters:
          items:
            type: object
          type: array
        metadata:
          items:
            $ref: '#/components/schemas/JWT_Metadata_Object'
          nullable: true
          type: array
      type: object
    JWT_Parameter:
      description: List of runtime parameters need to set during the session.
      properties:
        runtime_filter:
          description: Runtime filter parameter type in JWT.
          nullable: true
          type: object
        runtime_sort:
          description: Runtime sort parameter type in JWT.
          nullable: true
          type: object
        runtime_param_override:
          description: Runtime param override type in JWT.
          nullable: true
          type: object
      type: object
    JWT_Metadata_Object:
      description: Metadata objects.
      properties:
        identifier:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
      type: object
    User_Parameter_Options:
      description: |
        Define attributes such as Runtime filters and Runtime parameters to send security entitlements to a user session. For more information, see [Documentation](https://developers.thoughtspot.com/docs/abac-user-parameters).
      properties:
        objects:
          items:
            $ref: '#/components/schemas/User_Object'
          nullable: true
          type: array
        runtime_filters:
          description: |-
            Objects to apply the User_Runtime_Filters.

            Examples to set the `runtime_filters` :
            ```json
            { "column_name": "Color", "operator": "EQ", "values": ["red"], "persist": false }
            ```
          items:
            $ref: '#/components/schemas/Runtime_Filters'
          nullable: true
          type: array
        runtime_sorts:
          description: |-
            Objects to apply the User_Runtime_Sorts.

            Examples to set the `runtime_sorts` :
            ```json
            { "column_name": "Color", "order": "ASC", "persist": false }
            ```
          items:
            $ref: '#/components/schemas/Runtime_Sorts'
          nullable: true
          type: array
        parameters:
          description: |-
            Objects to apply the Runtime_Parameters.

            Examples to set the `parameters` :
            ```json
            { "name": "Color", "values": ["Blue"], "persist": false }
            ```
          items:
            $ref: '#/components/schemas/Runtime_Parameters'
          nullable: true
          type: array
      type: object
    User_Object:
      description: Objects to apply the User_Object.
      properties:
        type:
          description: "  Type of object.\n  \n\nRequired if the name of the object\
            \ is set as the identifier. This attribute is optional when the object\
            \ GUID is specified as the identifier.\n  \n\n Specify the object type\
            \ as `LOGICAL_TABLE`.  The `LIVEBOARD` and `ANSWER` object types are not\
            \ supported."
          enum:
          - LOGICAL_TABLE
          nullable: true
          type: string
        identifier:
          description: Unique name/id of the object.
          type: string
      required:
      - identifier
      type: object
    Runtime_Filters:
      description: Objects to apply the Runtime_Filters.
      properties:
        column_name:
          description: The column name to apply filter.
          type: string
        values:
          description: Value of the filters.
          items:
            type: string
          type: array
        operator:
          description: "Operator value. Example: EQ"
          enum:
          - EQ
          - NE
          - LT
          - LE
          - GT
          - GE
          - IN
          - BW
          - CONTAINS
          - BEGINS_WITH
          - ENDS_WITH
          - BW_INC
          - BW_INC_MIN
          - BW_INC_MAX
          - LIKE
          - NOT_IN
          type: string
        persist:
          default: false
          description: "Flag to persist the runtime filters. \n  Version: 9.12.0.cl\
            \ or later\n"
          nullable: true
          type: boolean
        objects:
          description: Object to apply the runtime filter.
          items:
            $ref: '#/components/schemas/User_Object'
          nullable: true
          type: array
      required:
      - column_name
      - operator
      - values
      type: object
    Runtime_Sorts:
      description: Objects to apply the Runtime_Sorts.
      properties:
        column_name:
          description: The column name to apply filter.
          nullable: true
          type: string
        order:
          description: Order for the sort.
          enum:
          - ASC
          - DESC
          nullable: true
          type: string
        persist:
          default: false
          description: "Flag to persist the runtime sorts. \n  Version: 9.12.0.cl\
            \ or later\n"
          nullable: true
          type: boolean
        objects:
          description: Object to apply the runtime sort.
          items:
            $ref: '#/components/schemas/User_Object'
          nullable: true
          type: array
      type: object
    Runtime_Parameters:
      description: Objects to apply the Runtime_Parameters.
      properties:
        name:
          description: The name of the parameter.
          type: string
        values:
          description: The array of values.
          items:
            type: string
          type: array
        persist:
          default: false
          description: "Flag to persist the parameters. \n  Version: 9.12.0.cl or\
            \ later\n"
          nullable: true
          type: boolean
        objects:
          description: Object to apply the runtime parameter.
          items:
            $ref: '#/components/schemas/User_Object'
          nullable: true
          type: array
      required:
      - name
      - values
      type: object
    Token:
      example:
        creation_time_in_millis: 0.8008282
        valid_for_username: valid_for_username
        valid_for_user_id: valid_for_user_id
        expiration_time_in_millis: 6.0274563
        scope:
          access_type: access_type
          org_id: 1
          metadata_id: metadata_id
        token: token
      properties:
        token:
          description: Bearer auth token.
          type: string
        creation_time_in_millis:
          description: Token creation time in milliseconds.
          format: float
          type: number
        expiration_time_in_millis:
          description: Token expiration time in milliseconds.
          format: float
          type: number
        scope:
          $ref: '#/components/schemas/Scope'
        valid_for_user_id:
          description: Username to whom the token is issued.
          type: string
        valid_for_username:
          description: Unique identifier of the user to whom the token is issued.
          type: string
      required:
      - creation_time_in_millis
      - expiration_time_in_millis
      - scope
      - token
      - valid_for_user_id
      - valid_for_username
      type: object
    Scope:
      example:
        access_type: access_type
        org_id: 1
        metadata_id: metadata_id
      properties:
        access_type:
          description: Object access scope type.
          type: string
        org_id:
          description: Unique identifier of the metadata.
          format: int32
          nullable: true
          type: integer
        metadata_id:
          description: Unique identifier of the Org.
          nullable: true
          type: string
      required:
      - access_type
      type: object
    JWT_User_Options_Full:
      description: |-
        JWT user options to create a JWT token given the payload.


        *Deprecated in 9.12.0.cl. Use user_parameters instead.*
      properties:
        parameters:
          items:
            $ref: '#/components/schemas/JWT_Parameter'
          nullable: true
          type: array
      type: object
    TokenValidationResponse:
      example:
        creation_time_in_millis: 0.8008282
        valid_for_user_id: valid_for_user_id
        expiration_time_in_millis: 6.0274563
        scope:
          access_type: access_type
          org_id: 1
          metadata_id: metadata_id
        token_type: token_type
      properties:
        creation_time_in_millis:
          description: Token creation time in milliseconds.
          format: float
          type: number
        expiration_time_in_millis:
          description: Token expiration time in milliseconds.
          format: float
          type: number
        scope:
          $ref: '#/components/schemas/Scope'
        valid_for_user_id:
          description: Username to whom the token is issued.
          type: string
        token_type:
          description: Type of token.
          type: string
      required:
      - creation_time_in_millis
      - expiration_time_in_millis
      - scope
      - token_type
      - valid_for_user_id
      type: object
    FilterRules:
      description: Filter Rules to be applied on Objects.
      properties:
        column_name:
          description: The name of the column to apply the filter on.
          type: string
        operator:
          description: "The operator to use for filtering. Example: EQ (equals), GT(greater\
            \ than), etc."
          enum:
          - EQ
          - NE
          - LT
          - LE
          - GT
          - GE
          - IN
          - BW
          - CONTAINS
          - BEGINS_WITH
          - ENDS_WITH
          - BW_INC
          - BW_INC_MIN
          - BW_INC_MAX
          - LIKE
          - NOT_IN
          type: string
        values:
          description: "The values to filter on. To get all records, use TS_WILDCARD_ALL\
            \ as values."
          items:
            type: object
          type: array
      required:
      - column_name
      - operator
      - values
      type: object
    ParameterValues:
      description: Filter Rules to be applied on Objects.
      properties:
        name:
          description: The name of the column to apply the filter on.
          type: string
        values:
          description: The values to filter on. Only single value is supported currently.
          items:
            type: object
          type: array
      required:
      - name
      - values
      type: object
    TokenAccessScopeObject:
      description: Objects on which the filter rules and parameters values should
        be applied to
      properties:
        type:
          description: "  Type of object.\n  \n\nRequired if the name of the object\
            \ is set as the identifier. This attribute is optional when the object\
            \ GUID is specified as the identifier.\n  \n\n Specify the object type\
            \ as `LOGICAL_TABLE`.  The `LIVEBOARD` and `ANSWER` object types are not\
            \ supported."
          enum:
          - LOGICAL_TABLE
          nullable: true
          type: string
        identifier:
          description: Unique name/id of the object.
          type: string
      required:
      - identifier
      type: object
    Group_Object:
      description: Groups objects.
      properties:
        identifier:
          nullable: true
          type: string
      type: object
    AccessToken:
      example:
        creation_time_in_millis: 6.0274563
        org:
          name: name
          id: 0
        expiration_time_in_millis: 1.4658129
        id: id
        user:
          name: name
          id: id
        token: token
      properties:
        id:
          description: GUID of the auth token.
          nullable: true
          type: string
        token:
          description: Bearer auth token.
          type: string
        org:
          $ref: '#/components/schemas/OrgInfo'
        user:
          $ref: '#/components/schemas/UserInfo'
        creation_time_in_millis:
          description: Token creation time in milliseconds.
          format: float
          type: number
        expiration_time_in_millis:
          description: Token expiration time in milliseconds.
          format: float
          type: number
      required:
      - creation_time_in_millis
      - expiration_time_in_millis
      - org
      - token
      - user
      type: object
    OrgInfo:
      example:
        name: name
        id: 0
      properties:
        id:
          description: Id.
          format: int32
          type: integer
        name:
          description: Name.
          nullable: true
          type: string
      required:
      - id
      type: object
    UserInfo:
      example:
        name: name
        id: id
      properties:
        id:
          description: Id.
          type: string
        name:
          description: Name.
          nullable: true
          type: string
      required:
      - id
      type: object
    ResponseActivationURL:
      description: The object representation with activation link.
      example:
        activation_link: activation_link
      properties:
        activation_link:
          description: Activation link to activate the user.
          nullable: true
          type: string
      type: object
    ImportUser:
      properties:
        user_identifier:
          description: Unique ID or name of the user.
          type: string
        display_name:
          description: Display name of the user.
          type: string
        password:
          description: Password of the user.
          nullable: true
          type: string
        account_type:
          default: LOCAL_USER
          description: Type of the user account.
          enum:
          - LOCAL_USER
          - LDAP_USER
          - SAML_USER
          - OIDC_USER
          - REMOTE_USER
          nullable: true
          type: string
        account_status:
          default: ACTIVE
          description: Status of the user account.
          enum:
          - ACTIVE
          - INACTIVE
          - EXPIRED
          - LOCKED
          - PENDING
          - SUSPENDED
          nullable: true
          type: string
        email:
          description: Email address of the user.
          nullable: true
          type: string
        org_identifiers:
          description: ID or name of the Orgs to which the user belongs.
          items:
            type: string
          nullable: true
          type: array
        group_identifiers:
          description: ID or name of the groups to which the user belongs.
          items:
            type: string
          nullable: true
          type: array
        visibility:
          description: "Visibility of the users. The SHARABLE property makes a user\
            \ visible to other users and group, who can share objects with the user."
          enum:
          - SHARABLE
          - NON_SHARABLE
          nullable: true
          type: string
        notify_on_share:
          default: true
          description: Notify user when other users or groups share metadata objects
          nullable: true
          type: boolean
        show_onboarding_experience:
          description: Show or hide the new user onboarding walkthroughs
          nullable: true
          type: boolean
        onboarding_experience_completed:
          description: Revisit the new user onboarding walkthroughs
          nullable: true
          type: boolean
        home_liveboard_identifier:
          description: Unique ID or name of the default Liveboard assigned to the
            user.
          nullable: true
          type: string
        favorite_metadata:
          description: Metadata objects to add to the user's favorites list.
          items:
            $ref: '#/components/schemas/FavoriteMetadataInput'
          nullable: true
          type: array
      required:
      - display_name
      - user_identifier
      type: object
    ImportUsersResponse:
      example:
        users_added:
        - name: name
          id: id
        - name: name
          id: id
        users_updated:
        - name: name
          id: id
        - name: name
          id: id
        users_deleted:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        users_added:
          items:
            $ref: '#/components/schemas/ImportUserType'
          nullable: true
          type: array
        users_updated:
          items:
            $ref: '#/components/schemas/ImportUserType'
          nullable: true
          type: array
        users_deleted:
          items:
            $ref: '#/components/schemas/ImportUserType'
          nullable: true
          type: array
      type: object
    ImportUserType:
      example:
        name: name
        id: id
      properties:
        id:
          description: Unique identifier of the user.
          nullable: true
          type: string
        name:
          description: Name of the user.
          type: string
      required:
      - name
      type: object
    TagMetadataTypeInput:
      properties:
        type:
          description: "  Type of metadata.\n  \n\nRequired if the name of the object\
            \ is set as the identifier. This attribute is optional when the object\
            \ GUID is specified as the identifier.\n  1. LIVEBOARD\n  2. ANSWERS\n\
            \  3. LOGICAL_TABLE for any data object such as table, worksheet or view.\n\
            \  4. LOGICAL_COLUMN for a column of any data object such as tables, worksheets\
            \ or views."
          enum:
          - LIVEBOARD
          - ANSWER
          - LOGICAL_TABLE
          - LOGICAL_COLUMN
          - CONNECTION
          nullable: true
          type: string
        identifier:
          description: Unique ID or name of the metadata.
          type: string
      required:
      - identifier
      type: object
    GroupsImportListInput:
      properties:
        display_name:
          description: Unique display name of the group.
          type: string
        group_identifier:
          description: Unique ID or name of the group.
          type: string
        default_liveboard_identifiers:
          description: Unique ID of Liveboards that will be assigned as default Liveboards
            to the users in the group.
          items:
            type: string
          nullable: true
          type: array
        description:
          description: Description of the group.
          nullable: true
          type: string
        privileges:
          description: Privileges that will be assigned to the group.
          items:
            enum:
            - ADMINISTRATION
            - AUTHORING
            - USERDATAUPLOADING
            - DATADOWNLOADING
            - USERMANAGEMENT
            - DATAMANAGEMENT
            - SHAREWITHALL
            - JOBSCHEDULING
            - A3ANALYSIS
            - BYPASSRLS
            - RANALYSIS
            - DEVELOPER
            - USER_ADMINISTRATION
            - GROUP_ADMINISTRATION
            - SYNCMANAGEMENT
            - CAN_CREATE_CATALOG
            - DISABLE_PINBOARD_CREATION
            - LIVEBOARD_VERIFIER
            - PREVIEW_THOUGHTSPOT_SAGE
            - CAN_MANAGE_VERSION_CONTROL
            - THIRDPARTY_ANALYSIS
            - ALLOW_NON_EMBED_FULL_APP_ACCESS
            - CAN_ACCESS_ANALYST_STUDIO
            - CAN_MANAGE_ANALYST_STUDIO
            - PREVIEW_DOCUMENT_SEARCH
            - CAN_SETUP_VERSION_CONTROL
            type: string
          nullable: true
          type: array
        sub_group_identifiers:
          description: Unique ID or name of the sub-groups to add to the group.
          items:
            type: string
          nullable: true
          type: array
        type:
          description: Type of the group.
          enum:
          - LOCAL_GROUP
          - LDAP_GROUP
          nullable: true
          type: string
        user_identifiers:
          description: Unique ID or name of the users to assign to the group.
          items:
            type: string
          nullable: true
          type: array
        visibility:
          description: "Visibility of the group. The SHARABLE makes a group visible\
            \ to other users and groups, and thus allows them to share objects."
          enum:
          - SHARABLE
          - NON_SHARABLE
          nullable: true
          type: string
      required:
      - display_name
      - group_identifier
      type: object
    ImportUserGroupsResponse:
      example:
        groups_deleted:
        - name: name
          id: id
        - name: name
          id: id
        groups_added:
        - name: name
          id: id
        - name: name
          id: id
        groups_updated:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        groups_added:
          description: The groups which are added into the system.
          items:
            $ref: '#/components/schemas/UserGroup'
          type: array
        groups_deleted:
          description: The groups which are deleted from the system.
          items:
            $ref: '#/components/schemas/UserGroup'
          type: array
        groups_updated:
          description: The groups which are updated in the system.
          items:
            $ref: '#/components/schemas/UserGroup'
          type: array
      required:
      - groups_added
      - groups_deleted
      - groups_updated
      type: object
    Export_Options:
      description: Flags to specify additional options for export. This will only
        be active when UserDefinedId in TML is enabled.
      properties:
        include_obj_id_ref:
          default: false
          description: Boolean Flag to export Object ID of referenced object. This
            flag will work only after the Object ID feature has been enabled. Please
            contact support to enable the feature.
          nullable: true
          type: boolean
        include_guid:
          default: true
          description: Boolean flag to export guid of the object. This flag will work
            only after the Object ID feature has been enabled. Please contact support
            to enable the feature.
          nullable: true
          type: boolean
        include_obj_id:
          default: false
          description: Boolean flag to export Object ID of the object. This flag will
            work only after the Object ID feature has been enabled. Please contact
            support to enable the feature.
          nullable: true
          type: boolean
        export_with_associated_feedbacks:
          default: false
          description: "Boolean flag indicating whether to export associated feedbacks\
            \ of the object. This will only be respected when the object can have\
            \ feedbacks. \n  Version: 10.7.0.cl or later\n"
          nullable: true
          type: boolean
      type: object
    ResponseCopyObject:
      example:
        metadata_id: metadata_id
      properties:
        metadata_id:
          description: The unique identifier of the object.
          nullable: true
          type: string
      type: object
    ResponseWorksheetToModelConversion:
      description: "Name of the conversion process, which involves converting worksheets\
        \ to models."
      example:
        incomplete_count: 1
        post_upgrade_failed_count: 5
        incomplete_entities:
          data:
          - name: name
            id: id
            error: error
          - name: name
            id: id
            error: error
        total_time_in_millis: 5
        post_upgrade_failed_entities:
          data:
          - name: name
            id: id
            error: error
          - name: name
            id: id
            error: error
        successful_entities:
          data:
          - name: name
            id: id
          - name: name
            id: id
        name: name
        success_count: 0
        failure_count: 6
        failed_entities:
          data:
          - name: name
            id: id
            error: error
          - name: name
            id: id
            error: error
      properties:
        name:
          type: string
        success_count:
          description: The number of worksheets successfully converted to models.
          format: int32
          type: integer
        failure_count:
          description: The number of worksheets that failed to convert.
          format: int32
          type: integer
        incomplete_count:
          description: The number of worksheets that were incomplete during the conversion
            process.
          format: int32
          type: integer
        post_upgrade_failed_count:
          description: The number of worksheets that failed after an upgrade during
            the conversion process.
          format: int32
          type: integer
        total_time_in_millis:
          description: The total time taken to complete the conversion process in
            milliseconds.
          format: int32
          type: integer
        successful_entities:
          $ref: '#/components/schemas/ResponseSuccessfulEntities'
        failed_entities:
          $ref: '#/components/schemas/ResponseFailedEntities'
        incomplete_entities:
          $ref: '#/components/schemas/ResponseIncompleteEntities'
        post_upgrade_failed_entities:
          $ref: '#/components/schemas/ResponsePostUpgradeFailedEntities'
      required:
      - failed_entities
      - failure_count
      - incomplete_count
      - incomplete_entities
      - name
      - post_upgrade_failed_count
      - post_upgrade_failed_entities
      - success_count
      - successful_entities
      - total_time_in_millis
      type: object
    ResponseSuccessfulEntities:
      description: "Wrapper for the successful entities, as they are inside a 'data'\
        \ field in the response."
      example:
        data:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        data:
          items:
            $ref: '#/components/schemas/ResponseSuccessfulEntity'
          type: array
      required:
      - data
      type: object
    ResponseSuccessfulEntity:
      description: Unique ID of the worksheet.
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          description: Name of the worksheet.
          type: string
      required:
      - id
      - name
      type: object
    ResponseFailedEntities:
      description: "Wrapper for the failed entities, as they are inside a 'data' field\
        \ in the response."
      example:
        data:
        - name: name
          id: id
          error: error
        - name: name
          id: id
          error: error
      properties:
        data:
          items:
            $ref: '#/components/schemas/ResponseFailedEntity'
          type: array
      required:
      - data
      type: object
    ResponseFailedEntity:
      description: Unique ID of the failed worksheet.
      example:
        name: name
        id: id
        error: error
      properties:
        id:
          type: string
        name:
          description: Name of the worksheet that failed to convert.
          type: string
        error:
          description: Error details related to the failed conversion.
          type: string
      required:
      - error
      - id
      - name
      type: object
    ResponseIncompleteEntities:
      description: "Wrapper for the incomplete entities, as they are inside a 'data'\
        \ field in the response."
      example:
        data:
        - name: name
          id: id
          error: error
        - name: name
          id: id
          error: error
      properties:
        data:
          items:
            $ref: '#/components/schemas/ResponseIncompleteEntity'
          type: array
      required:
      - data
      type: object
    ResponseIncompleteEntity:
      description: Unique ID of the incomplete worksheet.
      example:
        name: name
        id: id
        error: error
      properties:
        id:
          type: string
        name:
          description: Name of the incomplete worksheet.
          type: string
        error:
          description: Error details related to the incomplete conversion.
          type: string
      required:
      - error
      - id
      - name
      type: object
    ResponsePostUpgradeFailedEntities:
      description: "Wrapper for the post-upgrade failed entities, as they are inside\
        \ a 'data' field in the response."
      example:
        data:
        - name: name
          id: id
          error: error
        - name: name
          id: id
          error: error
      properties:
        data:
          items:
            $ref: '#/components/schemas/ResponsePostUpgradeFailedEntity'
          type: array
      required:
      - data
      type: object
    ResponsePostUpgradeFailedEntity:
      description: Unique ID of the worksheet that failed post-upgrade.
      example:
        name: name
        id: id
        error: error
      properties:
        id:
          type: string
        name:
          description: Name of the worksheet that failed post-upgrade.
          type: string
        error:
          description: Error details related to the post-upgrade failure.
          type: string
      required:
      - error
      - id
      - name
      type: object
    HeaderUpdateInput:
      description: Favorite object options.
      properties:
        identifier:
          description: Unique ID of a specified type to identify the header.
          nullable: true
          type: string
        obj_identifier:
          description: Custom object identifier to uniquely identify header.
          nullable: true
          type: string
        type:
          description: Optional type of the header object.
          enum:
          - ANSWER
          - LOGICAL_TABLE
          - LOGICAL_COLUMN
          - LIVEBOARD
          - ACTION_OBJECT
          - DATA_SOURCE
          - USER
          - USER_GROUP
          nullable: true
          type: string
        attributes:
          description: List of attributes to update
          items:
            $ref: '#/components/schemas/HeaderAttributeInput'
          type: array
      required:
      - attributes
      type: object
    HeaderAttributeInput:
      description: Attribute to update in a header.
      properties:
        name:
          description: Attribute name to be updated.
          type: string
        value:
          description: Attribute's new value.
          type: string
      required:
      - name
      - value
      type: object
    UpdateObjIdInput:
      description: Input for updating object ID of a metadata object.
      properties:
        metadata_identifier:
          description: GUID or name of the metadata object.
          nullable: true
          type: string
        type:
          description: Type of metadata. Required if metadata_identifier is name of
            the object.
          enum:
          - ANSWER
          - LOGICAL_TABLE
          - LOGICAL_COLUMN
          - LIVEBOARD
          - ACTION_OBJECT
          - DATA_SOURCE
          - USER
          - USER_GROUP
          nullable: true
          type: string
        current_obj_id:
          description: Current object ID value.
          nullable: true
          type: string
        new_obj_id:
          description: New object ID value to set.
          type: string
      required:
      - new_obj_id
      type: object
    ExportMetadataTypeInput:
      description: MetadataType InputType used in Export MetadataType API
      properties:
        type:
          description: "  Type of metadata.\n  \n\nRequired if the name of the object\
            \ is set as the identifier. This attribute is optional when the object\
            \ GUID is specified as the identifier."
          enum:
          - LIVEBOARD
          - ANSWER
          - LOGICAL_TABLE
          - CONNECTION
          - CUSTOM_ACTION
          - USER
          - USER_GROUP
          - ROLE
          - FEEDBACK
          nullable: true
          type: string
        identifier:
          description: Unique ID or name of the metadata object.
          type: string
      required:
      - identifier
      type: object
    DeleteMetadataTypeInput:
      description: MetadataType InputType used in Delete MetadataType API
      properties:
        type:
          description: "  Type of metadata.\n  \n\nRequired if the name of the object\
            \ is set as the identifier. This attribute is optional when the object\
            \ GUID is specified as the identifier."
          enum:
          - LIVEBOARD
          - ANSWER
          - LOGICAL_TABLE
          - LOGICAL_COLUMN
          - LOGICAL_RELATIONSHIP
          nullable: true
          type: string
        identifier:
          description: Unique ID or name of the metadata object.
          type: string
      required:
      - identifier
      type: object
    AuthorMetadataTypeInput:
      description: MetadataType InputType used in Author API's
      properties:
        type:
          description: "  Type of metadata.\n  \n\nRequired if the name of the object\
            \ is set as the identifier. This attribute is optional when the object\
            \ GUID is specified as the identifier."
          enum:
          - LIVEBOARD
          - ANSWER
          - LOGICAL_TABLE
          - CONNECTION
          nullable: true
          type: string
        identifier:
          description: Unique ID or name of the metadata object.
          type: string
      required:
      - identifier
      type: object
    ShareMetadataTypeInput:
      properties:
        type:
          description: "  Type of metadata.\n  \n\nType of metadata. Required if the\
            \ name of the object is set as the identifier. This attribute is optional\
            \ when the object GUID is specified as the identifier."
          enum:
          - LIVEBOARD
          - ANSWER
          - LOGICAL_TABLE
          - LOGICAL_COLUMN
          - CONNECTION
          nullable: true
          type: string
        identifier:
          description: Unique ID or name of the metadata object.
          type: string
      required:
      - identifier
      type: object
    SharePermissionsInput:
      properties:
        principal:
          $ref: '#/components/schemas/PrincipalsInput'
        share_mode:
          description: Type of access to the shared object
          enum:
          - READ_ONLY
          - MODIFY
          - NO_ACCESS
          type: string
      required:
      - principal
      - share_mode
      type: object
    MetadataObject:
      properties:
        identifier:
          description: Unique ID or name of the metadata
          type: string
        type:
          description: "  Type of metadata.\n  \n\nRequired if the name of the object\
            \ is set as the identifier. This attribute is optional when the object\
            \ GUID is specified as the identifier."
          enum:
          - LIVEBOARD
          - ANSWER
          - LOGICAL_TABLE
          - CUSTOM_ACTION
          nullable: true
          type: string
      required:
      - identifier
      type: object
    CommitResponse:
      example:
        committer:
          email: email
          username: username
        author:
          email: email
          username: username
        comment: comment
        commit_time: commit_time
        commit_id: commit_id
        branch: branch
        committed_files:
        - status_message: status_message
          status_code: status_code
          file_name: file_name
        - status_message: status_message
          status_code: status_code
          file_name: file_name
      properties:
        committer:
          $ref: '#/components/schemas/CommiterType'
        author:
          $ref: '#/components/schemas/AuthorType'
        comment:
          description: Comments associated with the commit
          nullable: true
          type: string
        commit_time:
          description: Time at which the changes were committed.
          nullable: true
          type: string
        commit_id:
          description: SHA id associated with the commit
          nullable: true
          type: string
        branch:
          description: Branch where changes were committed
          nullable: true
          type: string
        committed_files:
          description: Files that were pushed as part of this commit
          items:
            $ref: '#/components/schemas/CommitFileType'
          nullable: true
          type: array
      type: object
    CommitFileType:
      example:
        status_message: status_message
        status_code: status_code
        file_name: file_name
      properties:
        file_name:
          description: Name of the file deployed
          type: string
        status_code:
          description: Indicates the status of deployment for the file
          type: string
        status_message:
          description: Any error or warning with the deployment
          nullable: true
          type: string
      required:
      - file_name
      - status_code
      type: object
    RevertResponse:
      example:
        reverted_metadata:
        - status_message: status_message
          metadata_name: metadata_name
          status_code: status_code
          file_name: file_name
          metadata_type: metadata_type
        - status_message: status_message
          metadata_name: metadata_name
          status_code: status_code
          file_name: file_name
          metadata_type: metadata_type
        committer:
          email: email
          username: username
        author:
          email: email
          username: username
        comment: comment
        commit_time: commit_time
        commit_id: commit_id
        branch: branch
        committed_files:
        - status_message: status_message
          status_code: status_code
          file_name: file_name
        - status_message: status_message
          status_code: status_code
          file_name: file_name
      properties:
        committer:
          $ref: '#/components/schemas/CommiterType'
        author:
          $ref: '#/components/schemas/AuthorType'
        comment:
          description: Comments associated with the commit
          nullable: true
          type: string
        commit_time:
          description: Time at which the changes were committed.
          nullable: true
          type: string
        commit_id:
          description: SHA id associated with the commit
          nullable: true
          type: string
        branch:
          description: Branch where changes were committed
          nullable: true
          type: string
        committed_files:
          description: Files that were pushed as part of this commit
          items:
            $ref: '#/components/schemas/CommitFileType'
          nullable: true
          type: array
        reverted_metadata:
          description: Metadata of reverted file of this commit
          items:
            $ref: '#/components/schemas/RevertedMetadata'
          nullable: true
          type: array
      type: object
    RevertedMetadata:
      example:
        status_message: status_message
        metadata_name: metadata_name
        status_code: status_code
        file_name: file_name
        metadata_type: metadata_type
      properties:
        file_name:
          description: Name of the file deployed
          type: string
        metadata_name:
          description: Name of the metadata object
          type: string
        metadata_type:
          description: Type of the metadata object
          type: string
        status_code:
          description: Indicates the status of deployment for the file
          type: string
        status_message:
          description: Any error or warning with the deployment
          type: string
      required:
      - file_name
      - metadata_name
      - metadata_type
      - status_code
      - status_message
      type: object
    DeployResponse:
      example:
        status_message: status_message
        metadata_name: metadata_name
        status_code: status_code
        file_name: file_name
        metadata_type: metadata_type
      properties:
        file_name:
          description: Name of the file deployed
          nullable: true
          type: string
        metadata_name:
          description: Name of the metadata object
          nullable: true
          type: string
        metadata_type:
          description: Type of the metadata object
          nullable: true
          type: string
        status_code:
          description: Indicates the status of deployment for the file
          nullable: true
          type: string
        status_message:
          description: Any error or warning with the deployment
          nullable: true
          type: string
      type: object
    CreateConnectionResponse:
      example:
        name: name
        details: "{}"
        id: id
        data_warehouse_type: SNOWFLAKE
      properties:
        id:
          description: ID of the connection created.
          type: string
        name:
          description: Name of the connection.
          type: string
        data_warehouse_type:
          description: Type of data warehouse.
          enum:
          - SNOWFLAKE
          - AMAZON_REDSHIFT
          - GOOGLE_BIGQUERY
          - AZURE_SYNAPSE
          - TERADATA
          - SAP_HANA
          - STARBURST
          - ORACLE_ADW
          - DATABRICKS
          - DENODO
          - DREMIO
          - TRINO
          - PRESTO
          - POSTGRES
          - SQLSERVER
          - MYSQL
          - GENERIC_JDBC
          - AMAZON_RDS_POSTGRESQL
          - AMAZON_AURORA_POSTGRESQL
          - AMAZON_RDS_MYSQL
          - AMAZON_AURORA_MYSQL
          - LOOKER
          - AMAZON_ATHENA
          - SINGLESTORE
          - GCP_SQLSERVER
          - GCP_ALLOYDB_POSTGRESQL
          - GCP_POSTGRESQL
          - GCP_MYSQL
          - MODE
          - GOOGLE_SHEETS
          - FALCON
          - FALCON_ONPREM
          - CLICKHOUSE
          type: string
        details:
          description: Details of the connection.
          nullable: true
          type: object
      required:
      - data_warehouse_type
      - id
      - name
      type: object
    FetchConnectionDiffStatusResponse:
      example:
        status: true
      properties:
        status:
          description: Status of the connection diff.
          nullable: true
          type: boolean
      type: object
    RoleResponse:
      example:
        privileges:
        - USERDATAUPLOADING
        - USERDATAUPLOADING
        groups_assigned_count: 0
        creation_time_in_millis: "{}"
        hidden: true
        deprecated: true
        description: description
        groups:
        - name: name
          id: id
        - name: name
          id: id
        permission: READ_ONLY
        modification_time_in_millis: "{}"
        external: true
        deleted: true
        name: name
        modifier_id: modifier_id
        shared_via_connection: true
        id: id
        orgs:
        - name: name
          id: id
        - name: name
          id: id
        author_id: author_id
      properties:
        id:
          description: Unique Id of the role.
          type: string
        name:
          description: Name of the role
          type: string
        description:
          description: Description of the role
          type: string
        groups_assigned_count:
          description: number of groups assigned with this role
          format: int32
          nullable: true
          type: integer
        orgs:
          description: Orgs in which role exists.
          items:
            $ref: '#/components/schemas/GenericInfo'
          nullable: true
          type: array
        groups:
          description: Details of groups assigned with this role
          items:
            $ref: '#/components/schemas/GenericInfo'
          nullable: true
          type: array
        privileges:
          description: Privileges granted to the role.
          items:
            enum:
            - USERDATAUPLOADING
            - DATADOWNLOADING
            - DATAMANAGEMENT
            - SHAREWITHALL
            - JOBSCHEDULING
            - A3ANALYSIS
            - BYPASSRLS
            - DISABLE_PINBOARD_CREATION
            - DEVELOPER
            - APPLICATION_ADMINISTRATION
            - USER_ADMINISTRATION
            - GROUP_ADMINISTRATION
            - SYSTEM_INFO_ADMINISTRATION
            - SYNCMANAGEMENT
            - ORG_ADMINISTRATION
            - ROLE_ADMINISTRATION
            - AUTHENTICATION_ADMINISTRATION
            - BILLING_INFO_ADMINISTRATION
            - CONTROL_TRUSTED_AUTH
            - TAGMANAGEMENT
            - LIVEBOARD_VERIFIER
            - CAN_MANAGE_CUSTOM_CALENDAR
            - CAN_CREATE_OR_EDIT_CONNECTIONS
            - CAN_MANAGE_WORKSHEET_VIEWS_TABLES
            - CAN_MANAGE_VERSION_CONTROL
            - THIRDPARTY_ANALYSIS
            - CAN_CREATE_CATALOG
            - ALLOW_NON_EMBED_FULL_APP_ACCESS
            - CAN_ACCESS_ANALYST_STUDIO
            - CAN_MANAGE_ANALYST_STUDIO
            - PREVIEW_DOCUMENT_SEARCH
            - CAN_SETUP_VERSION_CONTROL
            - PREVIEW_THOUGHTSPOT_SAGE
            type: string
          type: array
        permission:
          description: Permission details of the Role
          enum:
          - READ_ONLY
          - MODIFY
          - NO_ACCESS
          nullable: true
          type: string
        author_id:
          description: Unique identifier of author of the role.
          nullable: true
          type: string
        modifier_id:
          description: Unique identifier of modifier of the role.
          nullable: true
          type: string
        creation_time_in_millis:
          description: Creation time of the role in milliseconds.
          nullable: true
          type: object
        modification_time_in_millis:
          description: Last modified time of the role in milliseconds.
          nullable: true
          type: object
        deleted:
          description: Indicates whether the role is deleted.
          nullable: true
          type: boolean
        deprecated:
          description: Indicates whether the role is deprecated.
          nullable: true
          type: boolean
        external:
          description: Indicates whether the role is external.
          nullable: true
          type: boolean
        hidden:
          description: Indicates whether the role is hidden.
          nullable: true
          type: boolean
        shared_via_connection:
          description: Indicates whether the role is shared via connection
          nullable: true
          type: boolean
      required:
      - description
      - id
      - name
      - privileges
      type: object
    LiveboardOptionsInput:
      description: Options to specify details of Liveboard.
      properties:
        visualization_identifiers:
          description: Unique ID or name of visualizations.
          items:
            type: string
          type: array
      required:
      - visualization_identifiers
      type: object
    SchedulesPdfOptionsInput:
      description: Options for PDF export.
      properties:
        complete_liveboard:
          description: Indicates whether to include complete Liveboard.
          nullable: true
          type: boolean
        include_cover_page:
          description: Indicates whether to include cover page with the Liveboard
            title.
          nullable: true
          type: boolean
        include_custom_logo:
          description: Indicates whether to include customized wide logo in the footer
            if available.
          nullable: true
          type: boolean
        include_filter_page:
          description: Indicates whether to include a page with all applied filters.
          nullable: true
          type: boolean
        include_page_number:
          description: Indicates whether to include page number in the footer of each
            page
          nullable: true
          type: boolean
        page_footer_text:
          description: Text to include in the footer of each page.
          nullable: true
          type: string
        page_orientation:
          description: Page orientation of the PDF.
          nullable: true
          type: string
        page_size:
          description: Page size.
          enum:
          - A4
          nullable: true
          type: string
        truncate_table:
          description: Indicates whether to include only first page of the tables.
          nullable: true
          type: boolean
      type: object
    FrequencyInput:
      description: Configuration of schedule with cron expression
      properties:
        cron_expression:
          $ref: '#/components/schemas/CronExpressionInput'
      required:
      - cron_expression
      type: object
    CronExpressionInput:
      description: Schedule selected cron expression.
      properties:
        day_of_month:
          description: Day of month of the object.
          type: string
        day_of_week:
          description: Day of Week of the object.
          type: string
        hour:
          description: Hour of the object.
          type: string
        minute:
          description: Minute of the object.
          type: string
        month:
          description: Month of the object.
          type: string
        second:
          description: Second of the object.
          type: string
      required:
      - day_of_month
      - day_of_week
      - hour
      - minute
      - month
      - second
      type: object
    RecipientDetailsInput:
      description: Recipients of the scheduled job notification.
      properties:
        emails:
          description: Emails of the recipients.
          items:
            type: string
          nullable: true
          type: array
        principals:
          description: User or groups to be set as recipients of the schedule notifications.
          items:
            $ref: '#/components/schemas/PrincipalsListItemInput'
          nullable: true
          type: array
      type: object
    PrincipalsListItemInput:
      properties:
        identifier:
          description: Unique ID or name of the user or group.
          type: string
        type:
          description: Principal type.
          type: string
      required:
      - identifier
      - type
      type: object
    ResponseSchedule:
      example:
        metadata:
          name: name
          id: id
          type: LIVEBOARD
        creation_time_in_millis: "{}"
        author:
          name: name
          id: id
        liveboard_options:
          visualization_identifiers:
          - visualization_identifiers
          - visualization_identifiers
        description: description
        pdf_options:
          complete_liveboard: true
          page_orientation: page_orientation
          include_cover_page: true
          include_filter_page: true
          page_footer_text: page_footer_text
          truncate_table: true
          include_page_number: true
          include_custom_logo: true
          page_size: A4
        time_zone: time_zone
        frequency:
          cron_expression:
            hour: hour
            month: month
            day_of_month: day_of_month
            day_of_week: day_of_week
            minute: minute
            second: second
        name: name
        recipient_details:
          emails:
          - emails
          - emails
          principals:
          - identifier: identifier
            type: type
          - identifier: identifier
            type: type
        id: id
        file_format: file_format
        status: status
        history_runs:
        - start_time_in_millis: 0
          id: id
          detail: detail
          end_time_in_millis: 6
          status: status
        - start_time_in_millis: 0
          id: id
          detail: detail
          end_time_in_millis: 6
          status: status
      properties:
        author:
          $ref: '#/components/schemas/Author'
        creation_time_in_millis:
          description: Schedule creation time in milliseconds.
          type: object
        description:
          description: Description of the job.
          nullable: true
          type: string
        file_format:
          description: Export file format.
          type: string
        frequency:
          $ref: '#/components/schemas/Frequency'
        id:
          description: GUID of the scheduled job.
          type: string
        liveboard_options:
          $ref: '#/components/schemas/LiveboardOptions'
        metadata:
          $ref: '#/components/schemas/MetadataResponse'
        name:
          description: Name of the scheduled job.
          type: string
        pdf_options:
          $ref: '#/components/schemas/PdfOptions'
        recipient_details:
          $ref: '#/components/schemas/RecipientDetails'
        status:
          description: Status of the job
          nullable: true
          type: string
        time_zone:
          description: Time zone
          type: string
        history_runs:
          description: Schedule runs history records.
          items:
            $ref: '#/components/schemas/ResponseScheduleRun'
          nullable: true
          type: array
      required:
      - author
      - creation_time_in_millis
      - file_format
      - frequency
      - id
      - metadata
      - name
      - recipient_details
      - time_zone
      type: object
    Author:
      description: Author of the schedule.
      example:
        name: name
        id: id
      properties:
        id:
          description: The unique identifier of the object.
          type: string
        name:
          description: Name of the object.
          type: string
      required:
      - id
      - name
      type: object
    Frequency:
      description: Configuration of schedule with cron expression
      example:
        cron_expression:
          hour: hour
          month: month
          day_of_month: day_of_month
          day_of_week: day_of_week
          minute: minute
          second: second
      properties:
        cron_expression:
          $ref: '#/components/schemas/CronExpression'
      required:
      - cron_expression
      type: object
    CronExpression:
      description: Schedule selected cron expression.
      example:
        hour: hour
        month: month
        day_of_month: day_of_month
        day_of_week: day_of_week
        minute: minute
        second: second
      properties:
        day_of_month:
          description: Day of month of the object.
          type: string
        day_of_week:
          description: Day of Week of the object.
          type: string
        hour:
          description: Hour of the object.
          type: string
        minute:
          description: Minute of the object.
          type: string
        month:
          description: Month of the object.
          type: string
        second:
          description: Second of the object.
          type: string
      required:
      - day_of_month
      - day_of_week
      - hour
      - minute
      - month
      - second
      type: object
    LiveboardOptions:
      description: Options to specify details of Liveboard.
      example:
        visualization_identifiers:
        - visualization_identifiers
        - visualization_identifiers
      properties:
        visualization_identifiers:
          description: Unique ID or name of visualizations.
          items:
            type: string
          type: array
      required:
      - visualization_identifiers
      type: object
    MetadataResponse:
      example:
        name: name
        id: id
        type: LIVEBOARD
      properties:
        name:
          nullable: true
          type: string
        id:
          type: string
        type:
          enum:
          - LIVEBOARD
          type: string
      required:
      - id
      - type
      type: object
    PdfOptions:
      description: Options for PDF export.
      example:
        complete_liveboard: true
        page_orientation: page_orientation
        include_cover_page: true
        include_filter_page: true
        page_footer_text: page_footer_text
        truncate_table: true
        include_page_number: true
        include_custom_logo: true
        page_size: A4
      properties:
        complete_liveboard:
          description: Indicates whether to include complete Liveboard.
          nullable: true
          type: boolean
        include_cover_page:
          description: Indicates whether to include cover page with the Liveboard
            title.
          nullable: true
          type: boolean
        include_custom_logo:
          description: Indicates whether to include customized wide logo in the footer
            if available.
          nullable: true
          type: boolean
        include_filter_page:
          description: Indicates whether to include a page with all applied filters.
          nullable: true
          type: boolean
        include_page_number:
          description: Indicates whether to include page number in the footer of each
            page
          nullable: true
          type: boolean
        page_footer_text:
          description: Text to include in the footer of each page.
          nullable: true
          type: string
        page_orientation:
          description: Page orientation of the PDF.
          nullable: true
          type: string
        page_size:
          description: Page size.
          enum:
          - A4
          nullable: true
          type: string
        truncate_table:
          description: Indicates whether to include only first page of the tables.
          nullable: true
          type: boolean
      type: object
    RecipientDetails:
      description: "Recipient configuration which includes email address, ID or name\
        \ of the users and groups."
      example:
        emails:
        - emails
        - emails
        principals:
        - identifier: identifier
          type: type
        - identifier: identifier
          type: type
      properties:
        emails:
          description: Emails of the recipients. Specify email address if the recipient
            is not a ThoughtSpot user.
          items:
            type: string
          nullable: true
          type: array
        principals:
          description: List of user or groups to subscribe for the scheduled job notifications.
          items:
            $ref: '#/components/schemas/PrincipalsListItem'
          nullable: true
          type: array
      type: object
    PrincipalsListItem:
      example:
        identifier: identifier
        type: type
      properties:
        identifier:
          description: Unique ID or name of the user or group.
          type: string
        type:
          description: Principal type. Valid values are
          type: string
      required:
      - identifier
      - type
      type: object
    ResponseScheduleRun:
      description: Schedule run response object
      example:
        start_time_in_millis: 0
        id: id
        detail: detail
        end_time_in_millis: 6
        status: status
      properties:
        id:
          description: GUID of the scheduled job.
          type: string
        start_time_in_millis:
          description: Schedule run start time in milliseconds.
          format: int32
          type: integer
        end_time_in_millis:
          description: Schedule run end time in milliseconds.
          format: int32
          type: integer
        status:
          description: Status of the schedule run.
          type: string
        detail:
          description: Message details related to the schedule run.
          nullable: true
          type: string
      required:
      - end_time_in_millis
      - id
      - start_time_in_millis
      - status
      type: object
    MetadataInput:
      properties:
        identifier:
          nullable: true
          type: string
        type:
          enum:
          - LIVEBOARD
          nullable: true
          type: string
      type: object
    SortingOptions:
      description: Sort options.
      properties:
        field_name:
          description: Name of the field to apply the sort on.
          nullable: true
          type: string
        order:
          description: "Sort order : ASC(Ascending) or DESC(Descending)."
          nullable: true
          type: string
      type: object
    ScheduleHistoryRunsOptionsInput:
      properties:
        include_history_runs:
          default: false
          description: Indicates whether to fetch history runs for the scheduled notification.
          nullable: true
          type: boolean
        record_size:
          default: 10
          description: Indicates the max number of records that can be fetched as
            past runs of any scheduled job.
          format: int32
          nullable: true
          type: integer
        record_offset:
          default: 0
          description: Indicates the starting record number from where history runs
            records should be fetched.
          format: int32
          nullable: true
          type: integer
      type: object
    Action_Details_Input_Create:
      description: |-
        Action details includes Type and Configuration for Custom Actions, either Callback or URL is required.
        When both callback and url are provided, callback would be considered
      properties:
        CALLBACK:
          $ref: '#/components/schemas/CALLBACKInputMandatory'
        URL:
          $ref: '#/components/schemas/URLInputMandatory'
      type: object
    CALLBACKInputMandatory:
      description: CALLBACK Custom Action Type
      properties:
        reference:
          description: "Reference name. By default, the value will be set to action\
            \ name."
          nullable: true
          type: string
      type: object
    URLInputMandatory:
      description: URL Custom Action Type
      properties:
        authentication:
          $ref: '#/components/schemas/AuthenticationInput'
        parameters:
          description: Query parameters for url.
          items:
            $ref: '#/components/schemas/ParametersListItemInput'
          nullable: true
          type: array
        url:
          description: Request Url for the Custom action.
          type: string
        reference:
          description: Reference name. By default the value will be set to action
            name
          nullable: true
          type: string
      required:
      - url
      type: object
    AuthenticationInput:
      description: Authorization type for the custom action.
      properties:
        API_Key:
          $ref: '#/components/schemas/API_KeyInput'
        Basic_Auth:
          $ref: '#/components/schemas/Basic_AuthInput'
        Bearer_Token:
          description: Bearer tokens enable requests to authenticate using an access
            key.
          nullable: true
          type: string
        No_Auth:
          description: No authorization. If your request doesn't require authorization.
          nullable: true
          type: string
      type: object
    API_KeyInput:
      description: "With API key auth, you send a key-value pair to the API either\
        \ in the request headers or query parameters."
      properties:
        key:
          description: Enter your key name
          nullable: true
          type: string
        value:
          description: Enter you key value
          nullable: true
          type: string
      type: object
    Basic_AuthInput:
      description: "Basic Auth: Basic authentication involves sending a verified username\
        \ and password with your request."
      properties:
        password:
          description: Password for the basic authentication
          nullable: true
          type: string
        username:
          description: Username for the basic authentication
          nullable: true
          type: string
      type: object
    ParametersListItemInput:
      properties:
        key:
          description: Key for the url query parameter
          nullable: true
          type: string
        value:
          description: Value for the url query parameter
          nullable: true
          type: string
      type: object
    Associate_Metadata_Input_Create:
      properties:
        action_config:
          $ref: '#/components/schemas/ActionConfigInputCreate'
        identifier:
          description: Unique ID or name of the metadata.
          type: string
        type:
          description: "  Type of metadata.\n  \n\nRequired if the name of the object\
            \ is set as the identifier. This attribute is optional when the object\
            \ GUID is specified as the identifier."
          enum:
          - VISUALIZATION
          - ANSWER
          - WORKSHEET
          nullable: true
          type: string
      required:
      - identifier
      type: object
    ActionConfigInputCreate:
      description: Specify that the association is enabled for the metadata object
        Default
      properties:
        position:
          default: MENU
          description: "Position of the Custom action on the Metadata object. Earlier\
            \ naming convention: context."
          enum:
          - MENU
          - PRIMARY
          - CONTEXT_MENU
          nullable: true
          type: string
        visibility:
          default: true
          description: "Visibility of the metadata association with custom action.\
            \ Earlier naming convention: enabled"
          nullable: true
          type: boolean
      type: object
    Default_Action_Config_Input_Create:
      description: "Default Custom action configuration. This includes the custom\
        \ action's visibility across all visualizations and Answers. By default, a\
        \ custom action is added to all visualizations and Answers."
      properties:
        visibility:
          default: true
          description: |-
            Custom action is available on all visualizations. Earlier naming convention: LOCAL/GLOBAL. TRUE signifies GLOBAL for backward compatibility.
            Default: true
          nullable: true
          type: boolean
      type: object
    Action_Details_Input:
      description: Action details includes `Type` and configuration details of Custom
        Actions. Either Callback or URL is required.
      properties:
        CALLBACK:
          $ref: '#/components/schemas/CALLBACKInput'
        URL:
          $ref: '#/components/schemas/URLInput'
      type: object
    CALLBACKInput:
      description: CALLBACK Custom Action Type
      properties:
        reference:
          description: "Reference name. By default, the value will be set to action\
            \ name."
          nullable: true
          type: string
      type: object
    URLInput:
      description: URL Custom Action Type
      properties:
        authentication:
          $ref: '#/components/schemas/AuthenticationInput'
        parameters:
          description: Query parameters for url.
          items:
            $ref: '#/components/schemas/ParametersListItemInput'
          nullable: true
          type: array
        url:
          description: Request Url for the Custom action.
          nullable: true
          type: string
        reference:
          description: Reference name. By default the value will be set to action
            name
          nullable: true
          type: string
      type: object
    Associate_Metadata_Input:
      properties:
        action_config:
          $ref: '#/components/schemas/ActionConfigInput'
        identifier:
          description: Unique ID or name of the metadata.
          nullable: true
          type: string
        type:
          description: "  Type of metadata.\n  \n\nRequired if the name of the object\
            \ is set as the identifier. This attribute is optional when the object\
            \ GUID is specified as the identifier."
          enum:
          - VISUALIZATION
          - ANSWER
          - WORKSHEET
          nullable: true
          type: string
      type: object
    ActionConfigInput:
      description: Specify that the association is enabled for the metadata object
        Default
      properties:
        position:
          description: "Position of the Custom action on the Metadata object. Earlier\
            \ naming convention: context."
          enum:
          - MENU
          - PRIMARY
          - CONTEXT_MENU
          nullable: true
          type: string
        visibility:
          description: "Visibility of the metadata association with custom action.\
            \ Earlier naming convention: enabled"
          nullable: true
          type: boolean
      type: object
    Default_Action_Config_Input:
      description: "Default Custom action configuration. This includes the custom\
        \ action's visibility across all visualizations and Answers. By default, a\
        \ custom action is added to all visualizations and Answers."
      properties:
        visibility:
          description: "Custom action is available on all visualizations. Earlier\
            \ naming convention: LOCAL/GLOBAL. TRUE signifies GLOBAL for backward\
            \ compatibility."
          nullable: true
          type: boolean
      type: object
    ModelTableList:
      properties:
        model_name:
          description: Name of the Model.
          type: string
        model_path:
          description: "Model directory path, this is optional param and required\
            \ if there are duplicate models with the same name."
          nullable: true
          type: string
        tables:
          description: List of Tables.
          items:
            type: string
          type: array
      required:
      - model_name
      - tables
      type: object
    DbtSearchResponse:
      example:
        connection_name: connection_name
        author_name: author_name
        dbt_connection_identifier: dbt_connection_identifier
        connection_id: connection_id
        import_type: import_type
        project_name: project_name
        cdw_database: cdw_database
      properties:
        dbt_connection_identifier:
          nullable: true
          type: string
        project_name:
          nullable: true
          type: string
        connection_id:
          nullable: true
          type: string
        connection_name:
          nullable: true
          type: string
        cdw_database:
          nullable: true
          type: string
        import_type:
          nullable: true
          type: string
        author_name:
          nullable: true
          type: string
      type: object
    Conversation:
      example:
        conversation_identifier: conversation_identifier
      properties:
        conversation_identifier:
          description: Unique identifier of the conversation.
          type: string
      required:
      - conversation_identifier
      type: object
    ResponseMessage:
      example:
        display_tokens: display_tokens
        session_identifier: session_identifier
        message_type: TSAnswer
        tokens: tokens
        visualization_type: Chart
        generation_number: 0
      properties:
        session_identifier:
          description: Unique identifier of the generated response.
          nullable: true
          type: string
        generation_number:
          description: Generate number of the response.
          format: int32
          nullable: true
          type: integer
        message_type:
          description: Type of the generated response.
          enum:
          - TSAnswer
          type: string
        visualization_type:
          description: Generated visualization type.
          enum:
          - Chart
          - Table
          - Undefined
          nullable: true
          type: string
        tokens:
          description: Tokens for the response.
          nullable: true
          type: string
        display_tokens:
          description: User friendly tokens for the response.
          nullable: true
          type: string
      required:
      - message_type
      type: object
    Runtime_Filter:
      description: List of runtime parameters need to set during the session.
      properties:
        runtime_filter:
          description: Runtime filter parameter type in JWT.
          type: object
      type: object
    Runtime_Sort:
      description: List of runtime parameters need to set during the session.
      properties:
        runtime_sort:
          description: Runtime sort parameter type in JWT.
          type: object
      type: object
    Runtime_Param_Override:
      description: List of runtime parameters need to set during the session.
      properties:
        runtime_param_override:
          description: Runtime param override type in JWT.
          type: object
      type: object
    createConversation_request:
      properties:
        metadata_identifier:
          description: "ID of the metadata object, such as a Worksheet or Model, to\
            \ use as a data source for the conversation."
          type: string
        tokens:
          description: "Token string to set the context for the conversation. For\
            \ example,`[sales],[item type],[state]`."
          type: string
      required:
      - metadata_identifier
      type: object
    queryGetDecomposedQuery_request:
      properties:
        answerIds:
          description: List of answer unique identifiers (GUIDs) whose data will be
            used to guide the response.
          items:
            type: string
          type: array
        content:
          description: "User provided content like text data, csv data as a string\
            \ message to provide context & potentially improve the quality of the\
            \ response."
          items:
            type: string
          type: array
        conversationId:
          description: Unique identifier to denote current conversation.
          type: string
        liveboardIds:
          description: List of liveboard unique identifiers (GUIDs) whose data will
            be used to guide the response.
          items:
            type: string
          type: array
        maxDecomposedQueries:
          description: "Maximum number of decomposed queries that is allowed in the\
            \ response, default = 5."
          format: int32
          type: integer
        nlsRequest:
          allOf:
          - $ref: '#/components/schemas/Input_eureka_NLSRequest'
          description: NLSRequest object containing user query & instructions.
        worksheetIds:
          description: List of worksheetIds to provide context for decomposing user
            query into analytical queries that can be run on them.
          items:
            type: string
          type: array
      type: object
    sendMessage_request:
      properties:
        metadata_identifier:
          description: "ID of the metadata object, such as a Worksheet or Model, to\
            \ use as a data source for the conversation."
          type: string
        message:
          description: A message string with the follow-up question to continue the
            conversation.
          type: string
      required:
      - message
      - metadata_identifier
      type: object
    singleAnswer_request:
      properties:
        query:
          description: A natural language query string to generate the Answer.
          type: string
        metadata_identifier:
          description: "ID of the metadata object, such as a Worksheet or Model, to\
            \ use as a data source for the query."
          type: string
      required:
      - metadata_identifier
      - query
      type: object
    getCustomAccessToken_request:
      properties:
        username:
          description: Username of the ThoughtSpot user. The username is stored in
            the `name` attribute of the user object.
          type: string
        password:
          default: ""
          description: Password of the user account
          type: string
        secret_key:
          default: ""
          description: The secret key string provided by the ThoughtSpot application
            server. ThoughtSpot generates a secret key when Trusted authentication
            is enabled.
          type: string
        validity_time_in_sec:
          default: 300
          description: Token validity duration in seconds
          format: int32
          type: integer
        org_identifier:
          description: "ID of the Org context to log in to. If the Org ID is not specified\
            \ and secret key is provided then user will be logged into the org corresponding\
            \ to the secret key, and if secret key is not provided then user will\
            \ be logged in to the Org context of their previous login session."
          type: string
        persist_option:
          description: Indicates whether the specified attributes should be persisted
            or not.
          enum:
          - APPEND
          - NONE
          - REPLACE
          - RESET
          type: string
        filter_rules:
          description: Filter rules.
          items:
            $ref: '#/components/schemas/FilterRules'
          type: array
        parameter_values:
          description: Parameter values.
          items:
            $ref: '#/components/schemas/ParameterValues'
          type: array
        objects:
          description: Objects on which the filter rules and parameters values should
            be applied to
          items:
            $ref: '#/components/schemas/TokenAccessScopeObject'
          type: array
        email:
          description: (just-in-time (JIT) provisioning)Email address of the user.
            Specify this attribute when creating a new user.
          type: string
        display_name:
          description: (just-in-time (JIT) provisioning) Indicates display name of
            the user. Specify this attribute when creating a new user.
          type: string
        groups:
          description: (just-in-time (JIT) provisioning) ID or name of the groups
            to which the newly created user belongs. Specify this attribute when creating
            a new user.
          items:
            $ref: '#/components/schemas/Group_Object'
          type: array
        auto_create:
          default: true
          description: "   Creates a new user if the specified username does not exist\
            \ in ThoughtSpot. To provision a user just-in-time (JIT), set this attribute\
            \ to true.\n   \n\nNote: For JIT provisioning of a user, the secret_key\
            \ is required.  \n  Version: 10.5.0.cl or later\n"
          nullable: true
          type: boolean
      required:
      - persist_option
      - username
      type: object
    getFullAccessToken_request:
      properties:
        username:
          description: Username of the ThoughtSpot user. The username is stored in
            the `name` attribute of the user object.
          type: string
        password:
          default: ""
          description: Password of the user account
          type: string
        secret_key:
          default: ""
          description: The secret key string provided by the ThoughtSpot application
            server. ThoughtSpot generates a secret key when Trusted authentication
            is enabled.
          type: string
        validity_time_in_sec:
          default: 300
          description: Token validity duration in seconds
          format: int32
          type: integer
        org_id:
          description: "ID of the Org context to log in to. If the Org ID is not specified\
            \ and secret key is provided then user will be logged into the org corresponding\
            \ to the secret key, and if secret key is not provided then user will\
            \ be logged in to the Org context of their previous login session."
          format: int32
          type: integer
        email:
          description: Email address of the user. Specify this attribute when creating
            a new user (just-in-time (JIT) provisioning).
          type: string
        display_name:
          description: Indicates display name of the user. Use this parameter to provision
            a user just-in-time (JIT).
          type: string
        auto_create:
          default: false
          description: "   Creates a new user if the specified username does not already\
            \ exist in ThoughtSpot. To provision a user just-in-time (JIT), set this\
            \ attribute to true.\n   \n\nNote: For JIT provisioning of a user, the\
            \ secret_key is required. "
          nullable: true
          type: boolean
        group_identifiers:
          description: ID or name of the groups to which the newly created user belongs.
            Use this parameter to provision a user just-in-time (JIT).
          items:
            type: string
          type: array
      required:
      - username
      type: object
    getObjectAccessToken_request:
      properties:
        username:
          description: Username of the ThoughtSpot user. The username is stored in
            the `name` attribute of the user object.
          type: string
        object_id:
          description: GUID of the ThoughtSpot metadata object that the user can access.
            The bearer will only have access to the object specified in the API request.
          type: string
        password:
          default: ""
          description: Password of the user account
          type: string
        secret_key:
          default: ""
          description: The secret key string provided by the ThoughtSpot application
            server. ThoughtSpot generates a secret key when Trusted authentication
            is enabled.
          type: string
        validity_time_in_sec:
          default: 300
          description: Token validity duration in seconds
          format: int32
          type: integer
        org_id:
          description: "ID of the Org context to log in to. If the Org ID is not specified\
            \ and secret key is provided then user will be logged into the org corresponding\
            \ to the secret key, and if secret key is not provided then user will\
            \ be logged in to the Org context of their previous login session."
          format: int32
          type: integer
        email:
          description: Email address of the user. Specify this attribute when creating
            a new user (just-in-time (JIT) provisioning).
          type: string
        display_name:
          description: Display name of the user. Specify this attribute when creating
            a new user (just-in-time (JIT) provisioning).
          type: string
        auto_create:
          default: false
          description: "   Creates a new user if the specified username does not exist\
            \ in ThoughtSpot. To provision a user just-in-time (JIT), set this attribute\
            \ to true.\n   \n\nNote: For JIT provisioning of a user, the secret_key\
            \ is required. "
          nullable: true
          type: boolean
        group_identifiers:
          description: Unique ID or name of the groups to which you want to assign
            the new user. You can specify this attribute to dynamically assign privileges
            during just-in-time (JIT) provisioning.
          items:
            type: string
          type: array
      required:
      - username
      type: object
    login_request:
      properties:
        username:
          description: Username of the ThoughtSpot user
          type: string
        password:
          description: Password of the user account
          type: string
        org_identifier:
          description: "ID of the Org context to log in to. If Org ID is not specified,\
            \ the user will be logged in to the Org context of their previous login\
            \ session."
          type: string
        remember_me:
          default: false
          description: "A flag to remember the user session. When set to true, a session\
            \ cookie is created and used in subsequent API requests."
          nullable: true
          type: boolean
      type: object
    revokeToken_request:
      properties:
        user_identifier:
          type: string
        token:
          type: string
      type: object
    validateToken_request:
      properties:
        token:
          type: string
      required:
      - token
      type: object
    createConnection_request:
      properties:
        name:
          description: Unique name for the connection.
          type: string
        description:
          description: Description of the connection.
          type: string
        data_warehouse_type:
          description: Type of the data warehouse.
          enum:
          - SNOWFLAKE
          - AMAZON_REDSHIFT
          - GOOGLE_BIGQUERY
          - AZURE_SYNAPSE
          - TERADATA
          - SAP_HANA
          - STARBURST
          - ORACLE_ADW
          - DATABRICKS
          - DENODO
          - DREMIO
          - TRINO
          - PRESTO
          - POSTGRES
          - SQLSERVER
          - MYSQL
          - GENERIC_JDBC
          - AMAZON_RDS_POSTGRESQL
          - AMAZON_AURORA_POSTGRESQL
          - AMAZON_RDS_MYSQL
          - AMAZON_AURORA_MYSQL
          - LOOKER
          - AMAZON_ATHENA
          - SINGLESTORE
          - GCP_SQLSERVER
          - GCP_ALLOYDB_POSTGRESQL
          - GCP_POSTGRESQL
          - GCP_MYSQL
          - MODE
          - GOOGLE_SHEETS
          - FALCON
          - FALCON_ONPREM
          - CLICKHOUSE
          type: string
        data_warehouse_config:
          description: "Connection configuration attributes in JSON format. To create\
            \ a connection with tables, include table attributes. See the documentation\
            \ above for sample JSON."
          type: object
        validate:
          default: true
          description: "Validates the connection metadata if tables are included.\
            \ If you are creating a connection without tables, specify `false`."
          nullable: true
          type: boolean
      required:
      - data_warehouse_config
      - data_warehouse_type
      - name
      type: object
    deleteConnection_request:
      properties:
        connection_identifier:
          description: Unique ID or name of the connection.
          type: string
      required:
      - connection_identifier
      type: object
    searchConnection_request:
      properties:
        connections:
          description: List of connections and name pattern
          items:
            $ref: '#/components/schemas/ConnectionInput'
          type: array
        data_warehouse_types:
          description: Array of types of data warehouse defined for the connection.
          items:
            enum:
            - SNOWFLAKE
            - AMAZON_REDSHIFT
            - GOOGLE_BIGQUERY
            - AZURE_SYNAPSE
            - TERADATA
            - SAP_HANA
            - STARBURST
            - ORACLE_ADW
            - DATABRICKS
            - DENODO
            - DREMIO
            - TRINO
            - PRESTO
            - POSTGRES
            - SQLSERVER
            - MYSQL
            - GENERIC_JDBC
            - AMAZON_RDS_POSTGRESQL
            - AMAZON_AURORA_POSTGRESQL
            - AMAZON_RDS_MYSQL
            - AMAZON_AURORA_MYSQL
            - LOOKER
            - AMAZON_ATHENA
            - SINGLESTORE
            - GCP_SQLSERVER
            - GCP_ALLOYDB_POSTGRESQL
            - GCP_POSTGRESQL
            - GCP_MYSQL
            - MODE
            - GOOGLE_SHEETS
            - FALCON
            - FALCON_ONPREM
            - CLICKHOUSE
            type: string
          type: array
        record_offset:
          default: 0
          description: The starting record number from where the records should be
            included.
          format: int32
          type: integer
        record_size:
          default: 10
          description: The number of records that should be included.
          format: int32
          type: integer
        tag_identifiers:
          description: Unique ID or name of tags.
          items:
            type: string
          type: array
        data_warehouse_object_type:
          description: Data warehouse object type.
          enum:
          - DATABASE
          - SCHEMA
          - TABLE
          - COLUMN
          type: string
        sort_options:
          allOf:
          - $ref: '#/components/schemas/SortOptionInput'
          description: Sort options.
        include_details:
          description: Indicates whether to include complete details of the connection
            objects.
          nullable: true
          type: boolean
        configuration:
          description: "Configuration values. If empty we are fetching configuration\
            \ from datasource based on given connection id. If required you can provide\
            \ config details to fetch specific details. Example input: {}, {\"warehouse\"\
            :\"SMALL_WH\",\"database\":\"DEVELOPMENT\"}. This is only applicable when\
            \ data_warehouse_object_type is selected."
          type: object
        authentication_type:
          default: SERVICE_ACCOUNT
          description: List of authentication types to fetch data_ware_house_objects
            from external Data warehouse. This is only applicable when data_warehouse_object_type
            is selected.
          enum:
          - SERVICE_ACCOUNT
          - OAUTH
          - IAM
          - EXTOAUTH
          - OAUTH_WITH_SERVICE_PRINCIPAL
          - PERSONAL_ACCESS_TOKEN
          type: string
      type: object
    updateConnection_request:
      properties:
        connection_identifier:
          description: Unique ID or name of the connection.
          type: string
        name:
          description: Updated name of the connection.
          type: string
        description:
          description: Updated description of the connection.
          type: string
        data_warehouse_config:
          description: Configuration of the data warehouse in JSON.
          type: object
        validate:
          default: true
          description: Indicates whether to validate the connection details.
          nullable: true
          type: boolean
      required:
      - connection_identifier
      type: object
    updateConnectionV2_request:
      properties:
        name:
          description: Updated name of the connection.
          type: string
        description:
          description: Updated description of the connection.
          type: string
        data_warehouse_config:
          description: Configuration of the data warehouse in JSON.
          type: object
        validate:
          default: true
          description: Indicates whether to validate the connection details.
          nullable: true
          type: boolean
      type: object
    createCustomAction_request:
      properties:
        name:
          description: Name of the custom action. The custom action name must be unique.
          type: string
        action_details:
          allOf:
          - $ref: '#/components/schemas/Action_Details_Input_Create'
          description: "Action details includes `Type` and Configuration data for\
            \ Custom Actions, either Callback or URL is required."
        associate_metadata:
          description: Metadata objects to which the custom action needs to be associated.
          items:
            $ref: '#/components/schemas/Associate_Metadata_Input_Create'
          type: array
        default_action_config:
          allOf:
          - $ref: '#/components/schemas/Default_Action_Config_Input_Create'
          description: "Default Custom action configuration. This includes if the\
            \ custom action is available on all visualizations. By default, a custom\
            \ action is added to all visualizations and Answers."
        group_identifiers:
          description: Unique ID or name of the groups that can view and access the
            custom action.
          items:
            type: string
          type: array
      required:
      - action_details
      - name
      type: object
    searchCustomActions_request:
      properties:
        custom_action_identifier:
          description: Name or ID of the custom action.
          type: string
        name_pattern:
          description: A pattern to match case-insensitive name of the custom-action
            object.
          type: string
        default_action_config:
          allOf:
          - $ref: '#/components/schemas/Default_Action_Config_Search_Input'
          description: "Default Custom action configuration. This includes if the\
            \ custom action is available on all visualizations. By default, a custom\
            \ action is added to all visualizations and Answers."
        include_group_associations:
          default: false
          description: "When set to true, returns the associated groups for a custom\
            \ action."
          nullable: true
          type: boolean
        include_metadata_associations:
          default: false
          description: "When set to true, returns the associated metadata for a custom\
            \ action."
          nullable: true
          type: boolean
        metadata:
          description: Search with a given metadata identifier.
          items:
            $ref: '#/components/schemas/CustomActionMetadataTypeInput'
          type: array
        type:
          description: Filter the action objects based on type
          enum:
          - CALLBACK
          - URL
          type: string
      type: object
    updateCustomAction_request:
      properties:
        action_details:
          allOf:
          - $ref: '#/components/schemas/Action_Details_Input'
          description: "Action details includes `Type` and Configuration for Custom\
            \ Actions, either Callback or URL is required."
        associate_metadata:
          description: Metadata objects to which the custom action needs to be associated.
          items:
            $ref: '#/components/schemas/Associate_Metadata_Input'
          type: array
        default_action_config:
          allOf:
          - $ref: '#/components/schemas/Default_Action_Config_Input'
          description: "Default Custom action configuration. This includes if the\
            \ custom action available on visualizations and Answers. By default, a\
            \ custom action is added to all visualizations and Answers."
        group_identifiers:
          description: Unique ID or name of the groups that can view and access the
            custom action.
          items:
            type: string
          type: array
        name:
          description: Name of the custom action. The custom action name must be unique.
          type: string
        operation:
          default: ADD
          description: Type of update operation. Default operation type is ADD
          enum:
          - ADD
          - REMOVE
          type: string
      type: object
    fetchAnswerData_request:
      properties:
        metadata_identifier:
          description: GUID or name of the Answer.
          type: string
        data_format:
          default: COMPACT
          description: JSON output in compact or full format. The FULL option is available
            in 9.12.5.cl or later.
          enum:
          - FULL
          - COMPACT
          type: string
        record_offset:
          default: 0
          description: The starting record number from where the records should be
            included.
          format: int32
          type: integer
        record_size:
          default: 10
          description: The number of records to include in a batch.
          format: int32
          type: integer
        runtime_filter:
          description: "JSON object with representing filter condition to apply filters\
            \ at runtime. For example, <code> {\"col1\": \"item type\", \"op1\": \"\
            EQ\", \"val1\": \"Bags\"} </code>. You can add multiple keys by incrementing\
            \ the number at the end, for example, col2, op2, val2, and col3, op3,\
            \ val3. For more information, see [API Documentation](https://developers.thoughtspot.com/docs/fetch-data-and-report-apis#_runtime_filters)."
          type: object
        runtime_sort:
          description: "JSON object representing columns to sort data at runtime.\
            \ For example, <code> {\"sortCol1\": \"sales\", \"asc1\": true} </code>.\
            \ You can add multiple keys by incrementing the number at the end, for\
            \ example, sortCol1, asc2. For more information, see [API Documentation](https://developers.thoughtspot.com/docs/fetch-data-and-report-apis#_runtime_sort)."
          type: object
        runtime_param_override:
          description: "JSON object for setting values of parameters at runtime. For\
            \ example, <code> {\"param1\": \"Double List Param\", \"paramVal1\": 0.5}</code>.\
            \ You can add multiple keys by incrementing the number at the end, for\
            \ example, param2, paramVal2. For more information, see [API Documentation](https://developers.thoughtspot.com/docs/fetch-data-and-report-apis#_runtime_parameters)."
          type: object
      required:
      - metadata_identifier
      type: object
    fetchLiveboardData_request:
      properties:
        metadata_identifier:
          description: GUID or name of the Liveboard.
          type: string
        visualization_identifiers:
          description: GUIDs or names of the visualizations on the Liveboard.
          items:
            type: string
          type: array
        transient_content:
          description: Transient content of the Liveboard.
          type: string
        data_format:
          default: COMPACT
          description: JSON output in compact or full format. The FULL option is available
            in 9.12.5.cl or later.
          enum:
          - FULL
          - COMPACT
          type: string
        record_offset:
          default: 0
          description: The starting record number from where the records should be
            included.
          format: int32
          type: integer
        record_size:
          default: 10
          description: The number of records to include in a batch.
          format: int32
          type: integer
        runtime_filter:
          description: "JSON object with representing filter condition to apply filters\
            \ at runtime. For example, <code> {\"col1\": \"item type\", \"op1\": \"\
            EQ\", \"val1\": \"Bags\"} </code>. You can add multiple keys by incrementing\
            \ the number at the end, for example, col2, op2, val2, and col3, op3,\
            \ val3. For more information, see [API Documentation](https://developers.thoughtspot.com/docs/fetch-data-and-report-apis#_runtime_filters)."
          type: object
        runtime_sort:
          description: "JSON object representing columns to sort data at runtime.\
            \ For example, <code> {\"sortCol1\": \"sales\", \"asc1\": true} </code>.\
            \ You can add multiple keys by incrementing the number at the end, for\
            \ example, sortCol1, asc2. For more information, see [API Documentation](https://developers.thoughtspot.com/docs/fetch-data-and-report-apis#_runtime_sort)."
          type: object
        runtime_param_override:
          description: "JSON object for setting values of parameters at runtime. For\
            \ example, <code> {\"param1\": \"Double List Param\", \"paramVal1\": 0.5}</code>.\
            \ You can add multiple keys by incrementing the number at the end, for\
            \ example, param2, paramVal2. For more information, see [API Documentation](https://developers.thoughtspot.com/docs/fetch-data-and-report-apis#_runtime_parameters)."
          type: object
      required:
      - metadata_identifier
      type: object
    searchData_request:
      properties:
        query_string:
          description: "Query string with search tokens. For example, <code>[Sales][Region]</code>.\
            \ See [API Documentation](https://developers.thoughtspot.com/docs/fetch-data-and-report-apis#_search_data_api)"
          type: string
        logical_table_identifier:
          description: "GUID of the data source object, such as a Worksheet, View,\
            \ or Table. You can find the GUID of a data object from the UI or via\
            \ API. See [API Documentation](https://developers.thoughtspot.com/docs/fetch-data-and-report-apis#_search_query)\
            \ for more details."
          type: string
        data_format:
          default: COMPACT
          description: JSON output in compact or full format. The FULL option is available
            in 9.12.5.cl or later.
          enum:
          - FULL
          - COMPACT
          type: string
        record_offset:
          default: 0
          description: The starting record number from where the records should be
            included.
          format: int32
          type: integer
        record_size:
          default: 10
          description: The number of records to include in a batch.
          format: int32
          type: integer
        runtime_filter:
          description: "JSON object with representing filter condition to apply filters\
            \ at runtime. For example, <code> {\"col1\": \"item type\", \"op1\": \"\
            EQ\", \"val1\": \"Bags\"} </code>. You can add multiple keys by incrementing\
            \ the number at the end, for example, col2, op2, val2, and col3, op3,\
            \ val3. For more information, see [API Documentation](https://developers.thoughtspot.com/docs/fetch-data-and-report-apis#_runtime_filters)."
          type: object
        runtime_sort:
          description: "JSON object representing columns to sort data at runtime.\
            \ For example, <code> {\"sortCol1\": \"sales\", \"asc1\": true} </code>.\
            \ You can add multiple keys by incrementing the number at the end, for\
            \ example, sortCol1, asc2. For more information, see [API Documentation](https://developers.thoughtspot.com/docs/fetch-data-and-report-apis#_runtime_sort)."
          type: object
        runtime_param_override:
          description: "JSON object for setting values of parameters at runtime. For\
            \ example, <code> {\"param1\": \"Double List Param\", \"paramVal1\": 0.5}</code>.\
            \ You can add multiple keys by incrementing the number at the end, for\
            \ example, param2, paramVal2. For more information, see [API Documentation](https://developers.thoughtspot.com/docs/fetch-data-and-report-apis#_runtime_parameters)."
          type: object
      required:
      - logical_table_identifier
      - query_string
      type: object
    dbtConnection_request:
      properties:
        connection_name:
          description: Name of the connection.
          type: string
        database_name:
          description: Name of the Database.
          type: string
        import_type:
          default: DBT_CLOUD
          description: Mention type of Import
          enum:
          - DBT_CLOUD
          - ZIP_FILE
          type: string
        access_token:
          description: Access token is mandatory when Import_Type is DBT_CLOUD.
          type: string
        dbt_url:
          description: DBT URL is mandatory when Import_Type is DBT_CLOUD.
          type: string
        account_id:
          description: Account ID is mandatory when Import_Type is DBT_CLOUD
          type: string
        project_id:
          description: Project ID is mandatory when Import_Type is DBT_CLOUD
          type: string
        dbt_env_id:
          description: DBT Environment ID"
          type: string
        project_name:
          description: Name of the project
          type: string
        file_content:
          description: Upload DBT Manifest and Catalog artifact files as a ZIP file.
            This field is Mandatory when Import Type is 'ZIP_FILE'
          format: binary
          type: string
      required:
      - connection_name
      - database_name
      type: object
    dbtGenerateSyncTml_request:
      properties:
        dbt_connection_identifier:
          description: Unique ID of the DBT connection.
          type: string
        file_content:
          description: Upload DBT Manifest and Catalog artifact files as a ZIP file.
            This field is mandatory if the connection was created with import_type
            ‘ZIP_FILE’
          format: binary
          type: string
      required:
      - dbt_connection_identifier
      type: object
    dbtGenerateTml_request:
      properties:
        dbt_connection_identifier:
          description: Unique ID of the DBT connection.
          type: string
        model_tables:
          description: List of Models and their respective Tables
          items:
            $ref: '#/components/schemas/ModelTableList'
          type: array
        import_worksheets:
          description: Mention the worksheet tmls to import
          enum:
          - ALL
          - NONE
          - SELECTED
          type: string
        worksheets:
          description: List of worksheets is mandatory when import_Worksheets is type
            SELECTED
          items:
            type: string
          type: array
        file_content:
          description: Upload DBT Manifest and Catalog artifact files as a ZIP file.
            This field is mandatory if the connection was created with import_type
            ‘ZIP_FILE’
          format: binary
          type: string
      required:
      - dbt_connection_identifier
      - import_worksheets
      type: object
    updateDbtConnection_request:
      properties:
        dbt_connection_identifier:
          description: Unique ID of the DBT Connection.
          type: string
        connection_name:
          description: Name of the connection.
          type: string
        database_name:
          description: Name of the Database.
          type: string
        import_type:
          default: DBT_CLOUD
          description: Mention type of Import
          enum:
          - DBT_CLOUD
          - ZIP_FILE
          type: string
        access_token:
          description: Access token is mandatory when Import_Type is DBT_CLOUD.
          type: string
        dbt_url:
          description: DBT URL is mandatory when Import_Type is DBT_CLOUD.
          type: string
        account_id:
          description: Account ID is mandatory when Import_Type is DBT_CLOUD
          type: string
        project_id:
          description: Project ID is mandatory when Import_Type is DBT_CLOUD
          type: string
        dbt_env_id:
          description: DBT Environment ID"
          type: string
        project_name:
          description: Name of the project
          type: string
        file_content:
          description: Upload DBT Manifest and Catalog artifact files as a ZIP file.
            This field is Mandatory when Import Type is 'ZIP_FILE'
          format: binary
          type: string
      required:
      - dbt_connection_identifier
      type: object
    createUserGroup_request:
      properties:
        name:
          description: Name of the group. The group name must be unique.
          type: string
        display_name:
          description: Display name for the group.
          type: string
        default_liveboard_identifiers:
          description: GUID of the Liveboards to assign as default Liveboards to the
            users in the group.
          items:
            type: string
          type: array
        description:
          description: Description of the group
          type: string
        privileges:
          description: Privileges to assign to the group
          items:
            enum:
            - ADMINISTRATION
            - AUTHORING
            - USERDATAUPLOADING
            - DATADOWNLOADING
            - USERMANAGEMENT
            - DATAMANAGEMENT
            - SHAREWITHALL
            - JOBSCHEDULING
            - A3ANALYSIS
            - BYPASSRLS
            - RANALYSIS
            - DEVELOPER
            - USER_ADMINISTRATION
            - GROUP_ADMINISTRATION
            - SYNCMANAGEMENT
            - CAN_CREATE_CATALOG
            - DISABLE_PINBOARD_CREATION
            - LIVEBOARD_VERIFIER
            - PREVIEW_THOUGHTSPOT_SAGE
            - CAN_MANAGE_VERSION_CONTROL
            - THIRDPARTY_ANALYSIS
            - ALLOW_NON_EMBED_FULL_APP_ACCESS
            - CAN_ACCESS_ANALYST_STUDIO
            - CAN_MANAGE_ANALYST_STUDIO
            - PREVIEW_DOCUMENT_SEARCH
            - CAN_SETUP_VERSION_CONTROL
            type: string
          type: array
        sub_group_identifiers:
          description: GUID or name of the sub groups. A subgroup is a group assigned
            to a parent group.
          items:
            type: string
          type: array
        type:
          default: LOCAL_GROUP
          description: Group type.
          enum:
          - LOCAL_GROUP
          - LDAP_GROUP
          type: string
        user_identifiers:
          description: GUID or name of the users to assign to the group.
          items:
            type: string
          type: array
        visibility:
          default: SHARABLE
          description: |-
            Visibility of the group. To make a group visible to other users and groups,
            set the visibility to SHAREABLE.
          enum:
          - SHARABLE
          - NON_SHARABLE
          type: string
        role_identifiers:
          description: Role identifiers of the roles that should be assigned to the
            group.
          items:
            type: string
          type: array
      required:
      - display_name
      - name
      type: object
    importUserGroups_request:
      properties:
        groups:
          description: Details of groups which are to be imported
          items:
            $ref: '#/components/schemas/GroupsImportListInput'
          type: array
        delete_unspecified_groups:
          default: false
          description: "If set to true, removes groups that are not specified in the\
            \ API request."
          nullable: true
          type: boolean
        dry_run:
          default: true
          description: |-
            If true, the API performs a test operation and returns user IDs whose
            data will be edited after the import.
          nullable: true
          type: boolean
      type: object
    searchUserGroups_request:
      properties:
        default_liveboard_identifiers:
          description: GUID of Liveboards that are assigned as default Liveboards
            to the users in the group.
          items:
            type: string
          type: array
        description:
          description: Description of the group
          type: string
        display_name:
          description: Display name of the group
          type: string
        name_pattern:
          description: A pattern to match case-insensitive name of the Group object.
          type: string
        group_identifier:
          description: GUID or name of the group
          type: string
        org_identifiers:
          description: ID or name of the Org to which the group belongs
          items:
            type: string
          type: array
        privileges:
          description: Privileges assigned to the group.
          items:
            enum:
            - ADMINISTRATION
            - AUTHORING
            - USERDATAUPLOADING
            - DATADOWNLOADING
            - USERMANAGEMENT
            - DATAMANAGEMENT
            - SHAREWITHALL
            - JOBSCHEDULING
            - A3ANALYSIS
            - EXPERIMENTALFEATUREPRIVILEGE
            - BYPASSRLS
            - RANALYSIS
            - DEVELOPER
            - USER_ADMINISTRATION
            - GROUP_ADMINISTRATION
            - SYNCMANAGEMENT
            - CAN_CREATE_CATALOG
            - DISABLE_PINBOARD_CREATION
            - LIVEBOARD_VERIFIER
            - PREVIEW_THOUGHTSPOT_SAGE
            - APPLICATION_ADMINISTRATION
            - SYSTEM_INFO_ADMINISTRATION
            - ORG_ADMINISTRATION
            - ROLE_ADMINISTRATION
            - AUTHENTICATION_ADMINISTRATION
            - BILLING_INFO_ADMINISTRATION
            - CAN_MANAGE_CUSTOM_CALENDAR
            - CAN_CREATE_OR_EDIT_CONNECTIONS
            - CAN_MANAGE_WORKSHEET_VIEWS_TABLES
            - CAN_MANAGE_VERSION_CONTROL
            - THIRDPARTY_ANALYSIS
            - ALLOW_NON_EMBED_FULL_APP_ACCESS
            - CAN_ACCESS_ANALYST_STUDIO
            - CAN_MANAGE_ANALYST_STUDIO
            - PREVIEW_DOCUMENT_SEARCH
            - CAN_SETUP_VERSION_CONTROL
            type: string
          type: array
        sub_group_identifiers:
          description: GUID or name of the sub groups. A subgroup is a group assigned
            to a parent group.
          items:
            type: string
          type: array
        type:
          description: Group type.
          enum:
          - LOCAL_GROUP
          - LDAP_GROUP
          type: string
        user_identifiers:
          description: GUID or name of the users assigned to the group.
          items:
            type: string
          type: array
        visibility:
          description: |-
            Visibility of the group. To make a group visible to other users and groups,
            set the visibility to SHAREABLE.
          enum:
          - SHARABLE
          - NON_SHARABLE
          type: string
        role_identifiers:
          description: Filter groups with a list of Roles assigned to a group
          items:
            type: string
          type: array
        record_offset:
          default: 0
          description: The starting record number from where the records should be
            included.
          format: int32
          type: integer
        record_size:
          default: 10
          description: The number of records that should be included.
          format: int32
          type: integer
        sort_options:
          allOf:
          - $ref: '#/components/schemas/SortOptions'
          description: Sort options to filter group details.
      type: object
    updateUserGroup_request:
      properties:
        name:
          description: Name of the group to modify.
          type: string
        default_liveboard_identifiers:
          description: ID of the Liveboards to be assigned as default Liveboards to
            the users in the group.
          items:
            type: string
          type: array
        description:
          description: Description for the group.
          type: string
        display_name:
          description: Display name of the group.
          type: string
        privileges:
          description: Privileges to assign to the group.
          items:
            enum:
            - ADMINISTRATION
            - AUTHORING
            - USERDATAUPLOADING
            - DATADOWNLOADING
            - USERMANAGEMENT
            - DATAMANAGEMENT
            - SHAREWITHALL
            - JOBSCHEDULING
            - A3ANALYSIS
            - BYPASSRLS
            - RANALYSIS
            - DEVELOPER
            - USER_ADMINISTRATION
            - GROUP_ADMINISTRATION
            - SYNCMANAGEMENT
            - CAN_CREATE_CATALOG
            - DISABLE_PINBOARD_CREATION
            - LIVEBOARD_VERIFIER
            - PREVIEW_THOUGHTSPOT_SAGE
            - CAN_MANAGE_VERSION_CONTROL
            - THIRDPARTY_ANALYSIS
            - ALLOW_NON_EMBED_FULL_APP_ACCESS
            - CAN_ACCESS_ANALYST_STUDIO
            - CAN_MANAGE_ANALYST_STUDIO
            - PREVIEW_DOCUMENT_SEARCH
            - CAN_SETUP_VERSION_CONTROL
            type: string
          type: array
        sub_group_identifiers:
          description: GUID or name of the sub groups. A subgroup is a group assigned
            to a parent group.
          items:
            type: string
          type: array
        type:
          description: Type of the group
          enum:
          - LOCAL_GROUP
          - LDAP_GROUP
          type: string
        user_identifiers:
          description: GUID or name of the users to assign to the group.
          items:
            type: string
          type: array
        visibility:
          description: |-
            Visibility of the group. To make a group visible to other users and
            groups, set the visibility to SHAREABLE.
          enum:
          - SHARABLE
          - NON_SHARABLE
          type: string
        role_identifiers:
          description: Role identifiers of the Roles that should be assigned to the
            group.
          items:
            type: string
          type: array
        operation:
          default: REPLACE
          description: Type of update operation. Default operation type is REPLACE
          enum:
          - ADD
          - REMOVE
          - REPLACE
          type: string
      type: object
    fetchLogs_request:
      properties:
        log_type:
          description: Name of the log type
          enum:
          - SECURITY_AUDIT
          type: string
        start_epoch_time_in_millis:
          description: Start time in EPOCH format
          format: float
          type: number
        end_epoch_time_in_millis:
          description: End time in EPOCH format
          format: float
          type: number
        get_all_logs:
          default: true
          description: Fetch all the logs. This is available from 9.10.5.cl
          nullable: true
          type: boolean
      required:
      - log_type
      type: object
    convertWorksheetToModel_request:
      properties:
        worksheet_ids:
          description: List of Worksheet IDs.
          items:
            type: string
          type: array
        exclude_worksheet_ids:
          description: List of Worksheet IDs to be excluded.
          items:
            type: string
          type: array
        convert_all:
          default: false
          description: Indicates whether all the worksheet needs to be converted to
            models.
          nullable: true
          type: boolean
        apply_changes:
          default: false
          description: Indicates whether the changes should be applied to database.
          nullable: true
          type: boolean
      type: object
    copyObject_request:
      properties:
        description:
          description: Description of the new object
          type: string
        identifier:
          description: GUID of metadata object to be copied (answer id or liveboard
            id)
          type: string
        type:
          description: Type of metadata object
          enum:
          - LIVEBOARD
          - ANSWER
          type: string
        title:
          description: Title of the new object
          type: string
      required:
      - identifier
      type: object
    deleteMetadata_request:
      properties:
        metadata:
          description: Metadata objects.
          items:
            $ref: '#/components/schemas/DeleteMetadataTypeInput'
          type: array
        delete_disabled_objects:
          default: false
          description: Indicates whether to delete disabled metadata objects.
          nullable: true
          type: boolean
      required:
      - metadata
      type: object
    exportMetadataTML_request:
      properties:
        metadata:
          description: Metadata objects.
          items:
            $ref: '#/components/schemas/ExportMetadataTypeInput'
          type: array
        export_associated:
          default: false
          description: Indicates whether to export associated metadata objects of
            specified metadata objects.
          nullable: true
          type: boolean
        export_fqn:
          default: false
          description: |-
            Adds FQNs of the referenced objects. For example, if you are exporting a Liveboard and its associated objects,
            the API returns the Liveboard TML data with the FQNs of the referenced worksheet.
            If the exported TML data includes FQNs, you don't need to manually add FQNs of the referenced objects during TML import.
          nullable: true
          type: boolean
        edoc_format:
          default: JSON
          description: |-
            TML EDOC content format.

            **Note: exporting in YAML format currently requires manual formatting of the output. For more details on the workaround, please click [here](https://developers.thoughtspot.com/docs/known-issues#_version_9_12_0_cl)**
          enum:
          - JSON
          - YAML
          type: string
        export_schema_version:
          default: DEFAULT
          description: Indicates whether to export worksheet TML in DEFAULT or V1
            or V2 version.
          enum:
          - DEFAULT
          - V1
          - V2
          type: string
        export_dependent:
          default: false
          description: Indicates whether to export table while exporting connection.
          nullable: true
          type: boolean
        export_connection_as_dependent:
          default: false
          description: |-
            Indicates whether to export connection as dependent while exporting table/worksheet/answer/liveboard.
            This will only be active when export_associated is true.
          nullable: true
          type: boolean
        all_orgs_override:
          default: false
          description: Indicates whether to export is happening from all orgs context.
          nullable: true
          type: boolean
        export_options:
          allOf:
          - $ref: '#/components/schemas/Export_Options'
          description: "Flags to specify additional options for export. \n  Version:\
            \ 10.6.0.cl or later\n"
      required:
      - metadata
      type: object
    exportMetadataTMLBatched_request:
      properties:
        metadata_type:
          description: "Type of metadata object to export, can be one of USER | ROLE\
            \ | USER_GROUP"
          enum:
          - USER
          - USER_GROUP
          - ROLE
          type: string
        batch_offset:
          default: 0
          description: Indicates the position within the complete set from where the
            API should begin returning objects.
          format: int32
          type: integer
        batch_size:
          default: 20
          description: Determines the number of objects or items to be retrieved in
            a single request.
          format: int32
          type: integer
        edoc_format:
          default: JSON
          description: TML EDOC content format.
          enum:
          - JSON
          - YAML
          type: string
        export_dependent:
          default: false
          description: Indicates whether to export dependent metadata objects of specified
            metadata objects.
          nullable: true
          type: boolean
        all_orgs_override:
          default: false
          description: Indicates whether to export is happening from all orgs context.
          nullable: true
          type: boolean
      required:
      - metadata_type
      type: object
    fetchAnswerSqlQuery_request:
      properties:
        metadata_identifier:
          description: ID or name of an Answer.
          type: string
      required:
      - metadata_identifier
      type: object
    fetchAsyncImportTaskStatus_request:
      properties:
        task_ids:
          description: List of task IDs to fetch status for.
          items:
            type: string
          type: array
        task_status:
          description: "List of task statuses to filter on. Valid values: [IN_QUEUE,\
            \ IN_PROGRESS, COMPLETED, FAILED]"
          items:
            enum:
            - COMPLETED
            - IN_QUEUE
            - IN_PROGRESS
            - FAILED
            type: string
          type: array
        author_identifier:
          description: Author GUID or name of async import tasks to filter on.
          type: string
        record_offset:
          default: 0
          description: "The offset point, starting from where the task status should\
            \ be included in the response."
          format: int32
          type: integer
        record_size:
          default: 5
          description: The number of task statuses that should be included in the
            response starting from offset position.
          format: int32
          type: integer
        include_import_response:
          default: false
          description: Boolean flag to specify whether to include import response
            in the task status objects.
          nullable: true
          type: boolean
      type: object
    fetchLiveboardSqlQuery_request:
      properties:
        metadata_identifier:
          description: ID or name of the Liveboard.
          type: string
        visualization_identifiers:
          description: Unique ID or name of visualizations.
          items:
            type: string
          type: array
      required:
      - metadata_identifier
      type: object
    importMetadataTML_request:
      properties:
        metadata_tmls:
          description: |-
            Details of TML objects.

            **Note: importing TML in YAML format, when coming directly from our Playground, is currently requires manual formatting. For more details on the workaround, please click [here](https://developers.thoughtspot.com/docs/known-issues#_version_9_12_0_cl)**
          items:
            type: string
          type: array
        import_policy:
          default: PARTIAL
          description: Specifies the import policy for the TML import.
          enum:
          - PARTIAL
          - ALL_OR_NONE
          - VALIDATE_ONLY
          - PARTIAL_OBJECT
          type: string
        create_new:
          default: false
          description: "If selected, creates TML objects with new GUIDs."
          nullable: true
          type: boolean
        all_orgs_override:
          default: false
          description: If import is happening from all orgs context.
          nullable: true
          type: boolean
        skip_diff_check:
          default: false
          description: |-
            <div>Version: 10.6.0.cl or later
            </div>

            Boolean Flag to skip TML diff check before processing object TMLs.
          nullable: true
          type: boolean
        enable_large_metadata_validation:
          default: false
          description: |-
            <div>Version: 10.5.0.cl or later
            </div>

            Boolean to indicate if the large metadata validation should be enabled.
          nullable: true
          type: boolean
      required:
      - metadata_tmls
      type: object
    importMetadataTMLAsync_request:
      properties:
        metadata_tmls:
          description: Details of TML objects.
          items:
            type: string
          type: array
        create_new:
          default: false
          description: "If selected, creates TML objects with new GUIDs."
          nullable: true
          type: boolean
        all_orgs_override:
          default: false
          description: If import is happening from all orgs context.
          nullable: true
          type: boolean
        import_policy:
          default: PARTIAL_OBJECT
          description: |-
            <div>Version: 10.5.0.cl or later
            </div>

            Policy to be followed while importing the TML. Valid values are [PARTIAL_OBJECT, PARTIAL, VALIDATE_ONLY, ALL_OR_NONE]
          enum:
          - PARTIAL
          - ALL_OR_NONE
          - VALIDATE_ONLY
          - PARTIAL_OBJECT
          type: string
        skip_diff_check:
          default: false
          description: |-
            <div>Version: 10.6.0.cl or later
            </div>

            Boolean Flag to skip TML diff check before processing object TMLs.
          nullable: true
          type: boolean
        enable_large_metadata_validation:
          default: false
          description: |-
            <div>Version: 10.5.0.cl or later
            </div>

            Boolean to indicate if the large metadata validation should be enabled.
          nullable: true
          type: boolean
      required:
      - metadata_tmls
      type: object
    searchMetadata_request:
      properties:
        metadata:
          description: "Metadata objects such as Liveboards, Answers, and Worksheets."
          items:
            $ref: '#/components/schemas/MetadataListItemInput'
          type: array
        permissions:
          description: Object permission details to search by.
          items:
            $ref: '#/components/schemas/PermissionInput'
          type: array
        created_by_user_identifiers:
          description: GUID or name of user who created the metadata object.
          items:
            type: string
          type: array
        dependent_object_version:
          default: V1
          description: Version of the dependent table of the metadata objects like
            Worksheets.
          enum:
          - V1
          - V2
          type: string
        exclude_objects:
          description: List of metadata objects to exclude from search.
          items:
            $ref: '#/components/schemas/ExcludeMetadataListItemInput'
          type: array
        favorite_object_options:
          allOf:
          - $ref: '#/components/schemas/FavoriteObjectOptionsInput'
          description: |-
            Options to sort the API response by objects set as favorites
            for the logged-in user or the users specified in the API request.
        include_auto_created_objects:
          default: false
          description: Includes system-generated metadata objects.
          nullable: true
          type: boolean
        include_dependent_objects:
          default: false
          description: |-
            Includes dependents of the metadata object specified in the API request.
            For example, a worksheet can consist of dependent objects such as Liveboards or Answers.
          nullable: true
          type: boolean
        dependent_objects_record_size:
          default: 50
          description: The maximum number of dependents to include per metadata object.
          format: int32
          type: integer
        include_details:
          default: false
          description: Includes complete details of the metadata objects.
          nullable: true
          type: boolean
        include_headers:
          default: true
          description: Includes headers of the metadata objects.
          nullable: true
          type: boolean
        include_hidden_objects:
          default: false
          description: "Includes details of the hidden objects, such as a column in\
            \ a worksheet or a table."
          nullable: true
          type: boolean
        include_incomplete_objects:
          default: false
          description: Includes objects with incomplete metadata.
          nullable: true
          type: boolean
        include_visualization_headers:
          default: false
          description: Includes visualization headers of the specified Liveboard object.
          nullable: true
          type: boolean
        include_worksheet_search_assist_data:
          description: |-
            If search assistance lessons are configured on a worksheet,
            the API returns the search assist data for Worksheet objects.
          nullable: true
          type: boolean
        modified_by_user_identifiers:
          description: Includes ID or names of the users who modified the metadata
            object.
          items:
            type: string
          type: array
        record_offset:
          default: 0
          description: The starting record number from where the records should be
            included.
          format: int32
          type: integer
        record_size:
          default: 10
          description: The number of records that should be included. It is recommended
            to use a smaller `record_size` when fetching dependent objects or any
            of the additional metadata detail options.
          format: int32
          type: integer
        sort_options:
          allOf:
          - $ref: '#/components/schemas/MetadataSearchSortOptions'
          description: Sort options to filter metadata details.
        tag_identifiers:
          description: Tags to filter metadata objects by
          items:
            type: string
          type: array
        include_stats:
          default: false
          description: Indicates whether to include stats of the metadata objects.
          nullable: true
          type: boolean
        include_discoverable_objects:
          default: true
          description: |-
            <div>Version: 10.7.0.cl or later
            </div>

            Boolean to indicate whether to include discoverable metadata objects.
          nullable: true
          type: boolean
      type: object
    updateMetadataHeader_request:
      properties:
        headers_update:
          description: List of header objects to update.
          items:
            $ref: '#/components/schemas/HeaderUpdateInput'
          type: array
        org_identifier:
          description: Unique ID or name of the organization.
          type: string
      required:
      - headers_update
      type: object
    updateMetadataObjId_request:
      properties:
        metadata:
          description: List of metadata objects to update their object IDs.
          items:
            $ref: '#/components/schemas/UpdateObjIdInput'
          type: array
      required:
      - metadata
      type: object
    createOrg_request:
      properties:
        name:
          description: Name of the Org.
          type: string
        description:
          description: Description of the Org.
          type: string
      required:
      - name
      type: object
    searchOrgs_request:
      properties:
        org_identifier:
          description: ID or name of the Org
          type: string
        description:
          description: Description of the Org
          type: string
        visibility:
          description: Visibility of the Org
          enum:
          - SHOW
          - HIDDEN
          type: string
        status:
          description: Status of the Org
          enum:
          - ACTIVE
          - IN_ACTIVE
          type: string
        user_identifiers:
          description: GUIDs or names of the users for which you want to retrieve
            the Orgs data
          items:
            type: string
          type: array
      type: object
    updateOrg_request:
      properties:
        name:
          description: Name of the Org
          type: string
        description:
          description: Description of the Org
          type: string
        user_identifiers:
          description: Add Users to an Org
          items:
            type: string
          type: array
        group_identifiers:
          description: Add Default Groups to an Org
          items:
            type: string
          type: array
        operation:
          default: ADD
          description: Type of update operation. Default operation type is ADD
          enum:
          - ADD
          - REMOVE
          - REPLACE
          type: string
      type: object
    exportAnswerReport_request:
      properties:
        metadata_identifier:
          description: Unique ID or name of the metadata object.
          type: string
        session_identifier:
          description: Unique ID of the answer session.
          type: string
        generation_number:
          description: Generation number of the answer session.
          format: int32
          type: integer
        file_format:
          default: CSV
          description: Export file format.
          enum:
          - CSV
          - PDF
          - XLSX
          - PNG
          type: string
        runtime_filter:
          description: |-
            JSON string representing runtime filter.
            { col1:region, op1: EQ, val1: northeast }
          type: object
        runtime_sort:
          description: |-
            JSON string representing runtime sort.
            { sortCol1: region, asc1 :true, sortCol2 : date }
          type: object
        runtime_param_override:
          description: JSON object for setting values of parameters in runtime.
          type: object
        regional_settings:
          allOf:
          - $ref: '#/components/schemas/RegionalSettingsInput'
          description: Options for specific region specific overrides to support date/number/string/currency
            formatting.
      type: object
    exportLiveboardReport_request:
      properties:
        metadata_identifier:
          description: GUID or name of the Liveboard object.
          type: string
        visualization_identifiers:
          description: |-
            GUID or name of visualizations on the Liveboard. If this parameter is
            not defined, the API returns a report with all visualizations saved on a Liveboard.
          items:
            type: string
          type: array
        transient_content:
          description: Transient content of the Liveboard.
          type: string
        file_format:
          default: PDF
          description: Export file format.
          enum:
          - PDF
          - PNG
          type: string
        runtime_filter:
          description: "JSON object with representing filter condition to apply filters\
            \ at runtime. For example, {\"col1\": \"region\", \"op1\": \"EQ\", \"\
            val1\": \"northeast\" }. You can add multiple keys by incrementing the\
            \ number at the end, for example, col2, op2, val2. For more information,\
            \ see [API Documentation](https://developers.thoughtspot.com/docs/fetch-data-and-report-apis#_runtime_filters)."
          type: object
        override_filters:
          description: |-
            Applied to the liveboard and overrides any filters already applied on the same columns in liveboard.
            Following example illustrate different kinds of filters:
            {
              "override_filters": [
                {
                  "column_name": "Color",
                  "generic_filter": {
                    "op": "IN",
                    "values": [
                      "almond",
                      "turquoise"
                    ]
                  },
                  "negate": false
                },
                {
                  "column_name": "Commit Date",
                  "date_filter": {
                    "datePeriod": "HOUR",
                    "number": 3,
                    "type": "LAST_N_PERIOD",
                    "op": "EQ"
                  }
                },
                {
                  "column_name": "Sales",
                  "generic_filter": {
                    "op": "BW_INC",
                    "values": [
                      "100000",
                      "70000"
                    ]
                  },
                  "negate": true
                }
              ]
            }
          type: object
        runtime_sort:
          description: "JSON string representing runtime sort. For example, {\"sortCol1\"\
            : \"region\", \"asc1\" : true}. For more information, see [API Documentation](https://developers.thoughtspot.com/docs/fetch-data-and-report-apis#_runtime_sort)."
          type: object
        pdf_options:
          allOf:
          - $ref: '#/components/schemas/PdfOptionsInput'
          description: Options for PDF export.
        png_options:
          allOf:
          - $ref: '#/components/schemas/PngOptionsInput'
          description: Options for PNG export.
        runtime_param_override:
          description: "JSON object for setting values of parameters at runtime. For\
            \ example, <code> {\"param1\": \"Double List Param\", \"paramVal1\": 0.5}</code>.\
            \ You can add multiple keys by incrementing the number at the end, for\
            \ example, param2, paramVal2. For more information, see [API Documentation](https://developers.thoughtspot.com/docs/fetch-data-and-report-apis#_runtime_parameters)."
          type: object
        regional_settings:
          allOf:
          - $ref: '#/components/schemas/RegionalSettingsInput'
          description: Options for specific region specific overrides to support date/number/string/currency
            formatting.
      required:
      - metadata_identifier
      type: object
    createRole_request:
      properties:
        name:
          description: Unique name of the Role.
          type: string
        description:
          description: Description of the Role.
          type: string
        privileges:
          description: "Privileges granted to the Role. See [Documentation](https://developers.thoughtspot.com/docs/rbac#_role_categories_and_privileges)for\
            \ supported roles privileges."
          items:
            enum:
            - USERDATAUPLOADING
            - DATADOWNLOADING
            - DATAMANAGEMENT
            - SHAREWITHALL
            - JOBSCHEDULING
            - A3ANALYSIS
            - BYPASSRLS
            - DISABLE_PINBOARD_CREATION
            - DEVELOPER
            - APPLICATION_ADMINISTRATION
            - USER_ADMINISTRATION
            - GROUP_ADMINISTRATION
            - SYSTEM_INFO_ADMINISTRATION
            - SYNCMANAGEMENT
            - ORG_ADMINISTRATION
            - ROLE_ADMINISTRATION
            - AUTHENTICATION_ADMINISTRATION
            - BILLING_INFO_ADMINISTRATION
            - CONTROL_TRUSTED_AUTH
            - TAGMANAGEMENT
            - LIVEBOARD_VERIFIER
            - CAN_MANAGE_CUSTOM_CALENDAR
            - CAN_CREATE_OR_EDIT_CONNECTIONS
            - CAN_MANAGE_WORKSHEET_VIEWS_TABLES
            - CAN_MANAGE_VERSION_CONTROL
            - THIRDPARTY_ANALYSIS
            - CAN_CREATE_CATALOG
            - ALLOW_NON_EMBED_FULL_APP_ACCESS
            - CAN_ACCESS_ANALYST_STUDIO
            - CAN_MANAGE_ANALYST_STUDIO
            - PREVIEW_DOCUMENT_SEARCH
            - CAN_SETUP_VERSION_CONTROL
            - PREVIEW_THOUGHTSPOT_SAGE
            type: string
          type: array
        read_only:
          default: false
          description: |-
            <div>Version: 10.5.0.cl or later
            </div>

            Indicates whether the role is read only. A readonly role can neither be updated nor deleted.
          nullable: true
          type: boolean
      required:
      - name
      type: object
    searchRoles_request:
      properties:
        role_identifiers:
          description: unique ID or name of the Roles
          items:
            type: string
          type: array
        org_identifiers:
          description: Unique Id or name of the Organisation
          items:
            type: string
          type: array
        group_identifiers:
          description: Unique Id or name of the User Group
          items:
            type: string
          type: array
        privileges:
          description: "Privileges assigned to the Role. See [Documentation](https://developers.thoughtspot.com/docs/rbac#_role_categories_and_privileges)for\
            \ supported roles privileges."
          items:
            enum:
            - UNKNOWN
            - ADMINISTRATION
            - AUTHORING
            - USERDATAUPLOADING
            - DATADOWNLOADING
            - USERMANAGEMENT
            - SECURITYMANAGEMENT
            - LOGICALMODELING
            - DATAMANAGEMENT
            - TAGMANAGEMENT
            - SHAREWITHALL
            - SYSTEMMANAGEMENT
            - JOBSCHEDULING
            - A3ANALYSIS
            - EXPERIMENTALFEATUREPRIVILEGE
            - BYPASSRLS
            - RANALYSIS
            - DISABLE_PINBOARD_CREATION
            - DEVELOPER
            - APPLICATION_ADMINISTRATION
            - USER_ADMINISTRATION
            - GROUP_ADMINISTRATION
            - BACKUP_ADMINISTRATION
            - SYSTEM_INFO_ADMINISTRATION
            - ENABLESPOTAPPCREATION
            - SYNCMANAGEMENT
            - ORG_ADMINISTRATION
            - ROLE_ADMINISTRATION
            - AUTHENTICATION_ADMINISTRATION
            - BILLING_INFO_ADMINISTRATION
            - PREVIEW_THOUGHTSPOT_SAGE
            - LIVEBOARD_VERIFIER
            - CAN_MANAGE_CUSTOM_CALENDAR
            - CAN_CREATE_OR_EDIT_CONNECTIONS
            - CAN_CONFIGURE_CONNECTIONS
            - CAN_MANAGE_WORKSHEET_VIEWS_TABLES
            - CAN_MANAGE_VERSION_CONTROL
            - THIRDPARTY_ANALYSIS
            - CONTROL_TRUSTED_AUTH
            - CAN_CREATE_CATALOG
            - ALLOW_NON_EMBED_FULL_APP_ACCESS
            - CAN_ACCESS_ANALYST_STUDIO
            - CAN_MANAGE_ANALYST_STUDIO
            - PREVIEW_DOCUMENT_SEARCH
            - CAN_SETUP_VERSION_CONTROL
            type: string
          type: array
        deprecated:
          deprecated: true
          description: Indicates whether the Role is deprecated.
          nullable: true
          type: boolean
        external:
          deprecated: true
          description: Indicates whether the Role is external
          nullable: true
          type: boolean
        shared_via_connection:
          deprecated: true
          description: Indicates whether the Role is shared via connection
          nullable: true
          type: boolean
        permissions:
          deprecated: true
          description: Permission details of the Role
          items:
            enum:
            - READ_ONLY
            - MODIFY
            - NO_ACCESS
            type: string
          type: array
      type: object
    updateRole_request:
      properties:
        name:
          description: Name of the Role.
          type: string
        description:
          description: Description of the Role.
          type: string
        privileges:
          description: "Privileges granted to the role. See [Documentation](https://developers.thoughtspot.com/docs/rbac#_role_categories_and_privileges)for\
            \ supported roles privileges."
          items:
            enum:
            - USERDATAUPLOADING
            - DATADOWNLOADING
            - DATAMANAGEMENT
            - SHAREWITHALL
            - JOBSCHEDULING
            - A3ANALYSIS
            - BYPASSRLS
            - DISABLE_PINBOARD_CREATION
            - DEVELOPER
            - APPLICATION_ADMINISTRATION
            - USER_ADMINISTRATION
            - GROUP_ADMINISTRATION
            - SYSTEM_INFO_ADMINISTRATION
            - SYNCMANAGEMENT
            - ORG_ADMINISTRATION
            - ROLE_ADMINISTRATION
            - AUTHENTICATION_ADMINISTRATION
            - BILLING_INFO_ADMINISTRATION
            - CONTROL_TRUSTED_AUTH
            - TAGMANAGEMENT
            - LIVEBOARD_VERIFIER
            - CAN_MANAGE_CUSTOM_CALENDAR
            - CAN_CREATE_OR_EDIT_CONNECTIONS
            - CAN_MANAGE_WORKSHEET_VIEWS_TABLES
            - CAN_MANAGE_VERSION_CONTROL
            - THIRDPARTY_ANALYSIS
            - CAN_CREATE_CATALOG
            - CAN_ACCESS_ANALYST_STUDIO
            - CAN_MANAGE_ANALYST_STUDIO
            - PREVIEW_DOCUMENT_SEARCH
            type: string
          type: array
      required:
      - name
      type: object
    createSchedule_request:
      properties:
        name:
          description: Name of the scheduled job.
          type: string
        description:
          description: Description of the job.
          type: string
        metadata_type:
          description: Type of the metadata object.
          enum:
          - LIVEBOARD
          type: string
        metadata_identifier:
          description: Unique ID or name of the metadata object.
          type: string
        file_format:
          default: PDF
          description: Export file format.
          enum:
          - CSV
          - PDF
          - XLSX
          type: string
        liveboard_options:
          allOf:
          - $ref: '#/components/schemas/LiveboardOptionsInput'
          description: Options to specify details of Liveboard.
        pdf_options:
          allOf:
          - $ref: '#/components/schemas/SchedulesPdfOptionsInput'
          description: PDF layout and orientation settings. Applicable only if the
            `file_format` is specified as `PDF`.
        time_zone:
          default: America/Los_Angeles
          description: Time zone
          enum:
          - Africa/Abidjan
          - Africa/Accra
          - Africa/Addis_Ababa
          - Africa/Algiers
          - Africa/Asmara
          - Africa/Asmera
          - Africa/Bamako
          - Africa/Bangui
          - Africa/Banjul
          - Africa/Bissau
          - Africa/Blantyre
          - Africa/Brazzaville
          - Africa/Bujumbura
          - Africa/Cairo
          - Africa/Casablanca
          - Africa/Ceuta
          - Africa/Conakry
          - Africa/Dakar
          - Africa/Dar_es_Salaam
          - Africa/Djibouti
          - Africa/Douala
          - Africa/El_Aaiun
          - Africa/Freetown
          - Africa/Gaborone
          - Africa/Harare
          - Africa/Johannesburg
          - Africa/Juba
          - Africa/Kampala
          - Africa/Khartoum
          - Africa/Kigali
          - Africa/Kinshasa
          - Africa/Lagos
          - Africa/Libreville
          - Africa/Lome
          - Africa/Luanda
          - Africa/Lubumbashi
          - Africa/Lusaka
          - Africa/Malabo
          - Africa/Maputo
          - Africa/Maseru
          - Africa/Mbabane
          - Africa/Mogadishu
          - Africa/Monrovia
          - Africa/Nairobi
          - Africa/Ndjamena
          - Africa/Niamey
          - Africa/Nouakchott
          - Africa/Ouagadougou
          - Africa/Porto-Novo
          - Africa/Sao_Tome
          - Africa/Timbuktu
          - Africa/Tripoli
          - Africa/Tunis
          - Africa/Windhoek
          - America/Adak
          - America/Anchorage
          - America/Anguilla
          - America/Antigua
          - America/Araguaina
          - America/Argentina/Buenos_Aires
          - America/Argentina/Catamarca
          - America/Argentina/ComodRivadavia
          - America/Argentina/Cordoba
          - America/Argentina/Jujuy
          - America/Argentina/La_Rioja
          - America/Argentina/Mendoza
          - America/Argentina/Rio_Gallegos
          - America/Argentina/Salta
          - America/Argentina/San_Juan
          - America/Argentina/San_Luis
          - America/Argentina/Tucuman
          - America/Argentina/Ushuaia
          - America/Aruba
          - America/Asuncion
          - America/Atikokan
          - America/Atka
          - America/Bahia
          - America/Bahia_Banderas
          - America/Barbados
          - America/Belem
          - America/Belize
          - America/Blanc-Sablon
          - America/Boa_Vista
          - America/Bogota
          - America/Boise
          - America/Buenos_Aires
          - America/Cambridge_Bay
          - America/Campo_Grande
          - America/Cancun
          - America/Caracas
          - America/Catamarca
          - America/Cayenne
          - America/Cayman
          - America/Chicago
          - America/Chihuahua
          - America/Coral_Harbour
          - America/Cordoba
          - America/Costa_Rica
          - America/Creston
          - America/Cuiaba
          - America/Curacao
          - America/Danmarkshavn
          - America/Dawson
          - America/Dawson_Creek
          - America/Denver
          - America/Detroit
          - America/Dominica
          - America/Edmonton
          - America/Eirunepe
          - America/El_Salvador
          - America/Ensenada
          - America/Fort_Nelson
          - America/Fort_Wayne
          - America/Fortaleza
          - America/Glace_Bay
          - America/Godthab
          - America/Goose_Bay
          - America/Grand_Turk
          - America/Grenada
          - America/Guadeloupe
          - America/Guatemala
          - America/Guayaquil
          - America/Guyana
          - America/Halifax
          - America/Havana
          - America/Hermosillo
          - America/Indiana/Indianapolis
          - America/Indiana/Knox
          - America/Indiana/Marengo
          - America/Indiana/Petersburg
          - America/Indiana/Tell_City
          - America/Indiana/Vevay
          - America/Indiana/Vincennes
          - America/Indiana/Winamac
          - America/Indianapolis
          - America/Inuvik
          - America/Iqaluit
          - America/Jamaica
          - America/Jujuy
          - America/Juneau
          - America/Kentucky/Louisville
          - America/Kentucky/Monticello
          - America/Knox_IN
          - America/Kralendijk
          - America/La_Paz
          - America/Lima
          - America/Los_Angeles
          - America/Louisville
          - America/Lower_Princes
          - America/Maceio
          - America/Managua
          - America/Manaus
          - America/Marigot
          - America/Martinique
          - America/Matamoros
          - America/Mazatlan
          - America/Mendoza
          - America/Menominee
          - America/Merida
          - America/Metlakatla
          - America/Mexico_City
          - America/Miquelon
          - America/Moncton
          - America/Monterrey
          - America/Montevideo
          - America/Montreal
          - America/Montserrat
          - America/Nassau
          - America/New_York
          - America/Nipigon
          - America/Nome
          - America/Noronha
          - America/North_Dakota/Beulah
          - America/North_Dakota/Center
          - America/North_Dakota/New_Salem
          - America/Nuuk
          - America/Ojinaga
          - America/Panama
          - America/Pangnirtung
          - America/Paramaribo
          - America/Phoenix
          - America/Port-au-Prince
          - America/Port_of_Spain
          - America/Porto_Acre
          - America/Porto_Velho
          - America/Puerto_Rico
          - America/Punta_Arenas
          - America/Rainy_River
          - America/Rankin_Inlet
          - America/Recife
          - America/Regina
          - America/Resolute
          - America/Rio_Branco
          - America/Rosario
          - America/Santa_Isabel
          - America/Santarem
          - America/Santiago
          - America/Santo_Domingo
          - America/Sao_Paulo
          - America/Scoresbysund
          - America/Shiprock
          - America/Sitka
          - America/St_Barthelemy
          - America/St_Johns
          - America/St_Kitts
          - America/St_Lucia
          - America/St_Thomas
          - America/St_Vincent
          - America/Swift_Current
          - America/Tegucigalpa
          - America/Thule
          - America/Thunder_Bay
          - America/Tijuana
          - America/Toronto
          - America/Tortola
          - America/Vancouver
          - America/Virgin
          - America/Whitehorse
          - America/Winnipeg
          - America/Yakutat
          - America/Yellowknife
          - Antarctica/Casey
          - Antarctica/Davis
          - Antarctica/DumontDUrville
          - Antarctica/Macquarie
          - Antarctica/Mawson
          - Antarctica/McMurdo
          - Antarctica/Palmer
          - Antarctica/Rothera
          - Antarctica/South_Pole
          - Antarctica/Syowa
          - Antarctica/Troll
          - Antarctica/Vostok
          - Arctic/Longyearbyen
          - Asia/Aden
          - Asia/Almaty
          - Asia/Amman
          - Asia/Anadyr
          - Asia/Aqtau
          - Asia/Aqtobe
          - Asia/Ashgabat
          - Asia/Ashkhabad
          - Asia/Atyrau
          - Asia/Baghdad
          - Asia/Bahrain
          - Asia/Baku
          - Asia/Bangkok
          - Asia/Barnaul
          - Asia/Beirut
          - Asia/Bishkek
          - Asia/Brunei
          - Asia/Calcutta
          - Asia/Chita
          - Asia/Choibalsan
          - Asia/Chongqing
          - Asia/Chungking
          - Asia/Colombo
          - Asia/Dacca
          - Asia/Damascus
          - Asia/Dhaka
          - Asia/Dili
          - Asia/Dubai
          - Asia/Dushanbe
          - Asia/Famagusta
          - Asia/Gaza
          - Asia/Harbin
          - Asia/Hebron
          - Asia/Ho_Chi_Minh
          - Asia/Hong_Kong
          - Asia/Hovd
          - Asia/Irkutsk
          - Asia/Istanbul
          - Asia/Jakarta
          - Asia/Jayapura
          - Asia/Jerusalem
          - Asia/Kabul
          - Asia/Kamchatka
          - Asia/Karachi
          - Asia/Kashgar
          - Asia/Kathmandu
          - Asia/Katmandu
          - Asia/Khandyga
          - Asia/Kolkata
          - Asia/Krasnoyarsk
          - Asia/Kuala_Lumpur
          - Asia/Kuching
          - Asia/Kuwait
          - Asia/Macao
          - Asia/Macau
          - Asia/Magadan
          - Asia/Makassar
          - Asia/Manila
          - Asia/Muscat
          - Asia/Nicosia
          - Asia/Novokuznetsk
          - Asia/Novosibirsk
          - Asia/Omsk
          - Asia/Oral
          - Asia/Phnom_Penh
          - Asia/Pontianak
          - Asia/Pyongyang
          - Asia/Qatar
          - Asia/Qostanay
          - Asia/Qyzylorda
          - Asia/Rangoon
          - Asia/Riyadh
          - Asia/Saigon
          - Asia/Sakhalin
          - Asia/Samarkand
          - Asia/Seoul
          - Asia/Shanghai
          - Asia/Singapore
          - Asia/Srednekolymsk
          - Asia/Taipei
          - Asia/Tashkent
          - Asia/Tbilisi
          - Asia/Tehran
          - Asia/Tel_Aviv
          - Asia/Thimbu
          - Asia/Thimphu
          - Asia/Tokyo
          - Asia/Tomsk
          - Asia/Ujung_Pandang
          - Asia/Ulaanbaatar
          - Asia/Ulan_Bator
          - Asia/Urumqi
          - Asia/Ust-Nera
          - Asia/Vientiane
          - Asia/Vladivostok
          - Asia/Yakutsk
          - Asia/Yangon
          - Asia/Yekaterinburg
          - Asia/Yerevan
          - Atlantic/Azores
          - Atlantic/Bermuda
          - Atlantic/Canary
          - Atlantic/Cape_Verde
          - Atlantic/Faeroe
          - Atlantic/Faroe
          - Atlantic/Jan_Mayen
          - Atlantic/Madeira
          - Atlantic/Reykjavik
          - Atlantic/South_Georgia
          - Atlantic/St_Helena
          - Atlantic/Stanley
          - Australia/ACT
          - Australia/Adelaide
          - Australia/Brisbane
          - Australia/Broken_Hill
          - Australia/Canberra
          - Australia/Currie
          - Australia/Darwin
          - Australia/Eucla
          - Australia/Hobart
          - Australia/LHI
          - Australia/Lindeman
          - Australia/Lord_Howe
          - Australia/Melbourne
          - Australia/NSW
          - Australia/North
          - Australia/Perth
          - Australia/Queensland
          - Australia/South
          - Australia/Sydney
          - Australia/Tasmania
          - Australia/Victoria
          - Australia/West
          - Australia/Yancowinna
          - Brazil/Acre
          - Brazil/DeNoronha
          - Brazil/East
          - Brazil/West
          - CET
          - CST6CDT
          - Canada/Atlantic
          - Canada/Central
          - Canada/Eastern
          - Canada/Mountain
          - Canada/Newfoundland
          - Canada/Pacific
          - Canada/Saskatchewan
          - Canada/Yukon
          - Chile/Continental
          - Chile/EasterIsland
          - Cuba
          - EET
          - EST5EDT
          - Egypt
          - Eire
          - Etc/GMT
          - Etc/GMT+0
          - Etc/GMT+1
          - Etc/GMT+10
          - Etc/GMT+11
          - Etc/GMT+12
          - Etc/GMT+2
          - Etc/GMT+3
          - Etc/GMT+4
          - Etc/GMT+5
          - Etc/GMT+6
          - Etc/GMT+7
          - Etc/GMT+8
          - Etc/GMT+9
          - Etc/GMT-0
          - Etc/GMT-1
          - Etc/GMT-10
          - Etc/GMT-11
          - Etc/GMT-12
          - Etc/GMT-13
          - Etc/GMT-14
          - Etc/GMT-2
          - Etc/GMT-3
          - Etc/GMT-4
          - Etc/GMT-5
          - Etc/GMT-6
          - Etc/GMT-7
          - Etc/GMT-8
          - Etc/GMT-9
          - Etc/GMT0
          - Etc/Greenwich
          - Etc/UCT
          - Etc/UTC
          - Etc/Universal
          - Etc/Zulu
          - Europe/Amsterdam
          - Europe/Andorra
          - Europe/Astrakhan
          - Europe/Athens
          - Europe/Belfast
          - Europe/Belgrade
          - Europe/Berlin
          - Europe/Bratislava
          - Europe/Brussels
          - Europe/Bucharest
          - Europe/Budapest
          - Europe/Busingen
          - Europe/Chisinau
          - Europe/Copenhagen
          - Europe/Dublin
          - Europe/Gibraltar
          - Europe/Guernsey
          - Europe/Helsinki
          - Europe/Isle_of_Man
          - Europe/Istanbul
          - Europe/Jersey
          - Europe/Kaliningrad
          - Europe/Kiev
          - Europe/Kirov
          - Europe/Kyiv
          - Europe/Lisbon
          - Europe/Ljubljana
          - Europe/London
          - Europe/Luxembourg
          - Europe/Madrid
          - Europe/Malta
          - Europe/Mariehamn
          - Europe/Minsk
          - Europe/Monaco
          - Europe/Moscow
          - Europe/Nicosia
          - Europe/Oslo
          - Europe/Paris
          - Europe/Podgorica
          - Europe/Prague
          - Europe/Riga
          - Europe/Rome
          - Europe/Samara
          - Europe/San_Marino
          - Europe/Sarajevo
          - Europe/Saratov
          - Europe/Simferopol
          - Europe/Skopje
          - Europe/Sofia
          - Europe/Stockholm
          - Europe/Tallinn
          - Europe/Tirane
          - Europe/Tiraspol
          - Europe/Ulyanovsk
          - Europe/Uzhgorod
          - Europe/Vaduz
          - Europe/Vatican
          - Europe/Vienna
          - Europe/Vilnius
          - Europe/Volgograd
          - Europe/Warsaw
          - Europe/Zagreb
          - Europe/Zaporozhye
          - Europe/Zurich
          - GB
          - GB-Eire
          - GMT
          - GMT0
          - Greenwich
          - Hongkong
          - Iceland
          - Indian/Antananarivo
          - Indian/Chagos
          - Indian/Christmas
          - Indian/Cocos
          - Indian/Comoro
          - Indian/Kerguelen
          - Indian/Mahe
          - Indian/Maldives
          - Indian/Mauritius
          - Indian/Mayotte
          - Indian/Reunion
          - Iran
          - Israel
          - Jamaica
          - Japan
          - Kwajalein
          - Libya
          - MET
          - MST7MDT
          - Mexico/BajaNorte
          - Mexico/BajaSur
          - Mexico/General
          - NZ
          - NZ-CHAT
          - Navajo
          - PRC
          - PST8PDT
          - Pacific/Apia
          - Pacific/Auckland
          - Pacific/Bougainville
          - Pacific/Chatham
          - Pacific/Chuuk
          - Pacific/Easter
          - Pacific/Efate
          - Pacific/Enderbury
          - Pacific/Fakaofo
          - Pacific/Fiji
          - Pacific/Funafuti
          - Pacific/Galapagos
          - Pacific/Gambier
          - Pacific/Guadalcanal
          - Pacific/Guam
          - Pacific/Honolulu
          - Pacific/Johnston
          - Pacific/Kanton
          - Pacific/Kiritimati
          - Pacific/Kosrae
          - Pacific/Kwajalein
          - Pacific/Majuro
          - Pacific/Marquesas
          - Pacific/Midway
          - Pacific/Nauru
          - Pacific/Niue
          - Pacific/Norfolk
          - Pacific/Noumea
          - Pacific/Pago_Pago
          - Pacific/Palau
          - Pacific/Pitcairn
          - Pacific/Pohnpei
          - Pacific/Ponape
          - Pacific/Port_Moresby
          - Pacific/Rarotonga
          - Pacific/Saipan
          - Pacific/Samoa
          - Pacific/Tahiti
          - Pacific/Tarawa
          - Pacific/Tongatapu
          - Pacific/Truk
          - Pacific/Wake
          - Pacific/Wallis
          - Pacific/Yap
          - Poland
          - Portugal
          - ROK
          - Singapore
          - SystemV/AST4
          - SystemV/AST4ADT
          - SystemV/CST6
          - SystemV/CST6CDT
          - SystemV/EST5
          - SystemV/EST5EDT
          - SystemV/HST10
          - SystemV/MST7
          - SystemV/MST7MDT
          - SystemV/PST8
          - SystemV/PST8PDT
          - SystemV/YST9
          - SystemV/YST9YDT
          - Turkey
          - UCT
          - US/Alaska
          - US/Aleutian
          - US/Arizona
          - US/Central
          - US/East-Indiana
          - US/Eastern
          - US/Hawaii
          - US/Indiana-Starke
          - US/Michigan
          - US/Mountain
          - US/Pacific
          - US/Samoa
          - UTC
          - Universal
          - W-SU
          - WET
          - Zulu
          - EST
          - HST
          - MST
          - ACT
          - AET
          - AGT
          - ART
          - AST
          - BET
          - BST
          - CAT
          - CNT
          - CST
          - CTT
          - EAT
          - ECT
          - IET
          - IST
          - JST
          - MIT
          - NET
          - NST
          - PLT
          - PNT
          - PRT
          - PST
          - SST
          - VST
          type: string
        frequency:
          allOf:
          - $ref: '#/components/schemas/FrequencyInput'
          description: Frequency settings for the scheduled job.
        recipient_details:
          allOf:
          - $ref: '#/components/schemas/RecipientDetailsInput'
          description: "Recipients of the scheduled job notifications. Add the GUID\
            \ or name of the ThoughtSpot users or groups as recipients in the `principals`\
            \ array. If a recipient is not a ThoughtSpot user, specify email address."
      required:
      - description
      - metadata_identifier
      - metadata_type
      - name
      - recipient_details
      - time_zone
      type: object
    searchSchedules_request:
      properties:
        metadata:
          description: Metadata objects associated with the scheduled jobs.
          items:
            $ref: '#/components/schemas/MetadataInput'
          type: array
        record_offset:
          description: The starting record number from where the records should be
            included.
          format: int32
          type: integer
        record_size:
          description: The number of records that should be included.
          format: int32
          type: integer
        sort_options:
          allOf:
          - $ref: '#/components/schemas/SortingOptions'
          description: Sort options.
        history_runs_options:
          allOf:
          - $ref: '#/components/schemas/ScheduleHistoryRunsOptionsInput'
          description: Options while fetching history runs for the schedule.
        schedule_identifiers:
          description: unique ID or name of the Schedule
          items:
            type: string
          type: array
      type: object
    updateSchedule_request:
      properties:
        name:
          description: Name of the scheduled job.
          type: string
        description:
          description: Description of the scheduled job.
          type: string
        metadata_type:
          description: Type of metadata object.
          enum:
          - LIVEBOARD
          type: string
        metadata_identifier:
          description: Unique ID or name of the metadata object.
          type: string
        file_format:
          description: Export file format.
          enum:
          - CSV
          - PDF
          - XLSX
          type: string
        liveboard_options:
          allOf:
          - $ref: '#/components/schemas/LiveboardOptionsInput'
          description: Options to specify the details of a Liveboard.
        pdf_options:
          allOf:
          - $ref: '#/components/schemas/SchedulesPdfOptionsInput'
          description: Options for PDF export.
        time_zone:
          description: Time zone
          enum:
          - Africa/Abidjan
          - Africa/Accra
          - Africa/Addis_Ababa
          - Africa/Algiers
          - Africa/Asmara
          - Africa/Asmera
          - Africa/Bamako
          - Africa/Bangui
          - Africa/Banjul
          - Africa/Bissau
          - Africa/Blantyre
          - Africa/Brazzaville
          - Africa/Bujumbura
          - Africa/Cairo
          - Africa/Casablanca
          - Africa/Ceuta
          - Africa/Conakry
          - Africa/Dakar
          - Africa/Dar_es_Salaam
          - Africa/Djibouti
          - Africa/Douala
          - Africa/El_Aaiun
          - Africa/Freetown
          - Africa/Gaborone
          - Africa/Harare
          - Africa/Johannesburg
          - Africa/Juba
          - Africa/Kampala
          - Africa/Khartoum
          - Africa/Kigali
          - Africa/Kinshasa
          - Africa/Lagos
          - Africa/Libreville
          - Africa/Lome
          - Africa/Luanda
          - Africa/Lubumbashi
          - Africa/Lusaka
          - Africa/Malabo
          - Africa/Maputo
          - Africa/Maseru
          - Africa/Mbabane
          - Africa/Mogadishu
          - Africa/Monrovia
          - Africa/Nairobi
          - Africa/Ndjamena
          - Africa/Niamey
          - Africa/Nouakchott
          - Africa/Ouagadougou
          - Africa/Porto-Novo
          - Africa/Sao_Tome
          - Africa/Timbuktu
          - Africa/Tripoli
          - Africa/Tunis
          - Africa/Windhoek
          - America/Adak
          - America/Anchorage
          - America/Anguilla
          - America/Antigua
          - America/Araguaina
          - America/Argentina/Buenos_Aires
          - America/Argentina/Catamarca
          - America/Argentina/ComodRivadavia
          - America/Argentina/Cordoba
          - America/Argentina/Jujuy
          - America/Argentina/La_Rioja
          - America/Argentina/Mendoza
          - America/Argentina/Rio_Gallegos
          - America/Argentina/Salta
          - America/Argentina/San_Juan
          - America/Argentina/San_Luis
          - America/Argentina/Tucuman
          - America/Argentina/Ushuaia
          - America/Aruba
          - America/Asuncion
          - America/Atikokan
          - America/Atka
          - America/Bahia
          - America/Bahia_Banderas
          - America/Barbados
          - America/Belem
          - America/Belize
          - America/Blanc-Sablon
          - America/Boa_Vista
          - America/Bogota
          - America/Boise
          - America/Buenos_Aires
          - America/Cambridge_Bay
          - America/Campo_Grande
          - America/Cancun
          - America/Caracas
          - America/Catamarca
          - America/Cayenne
          - America/Cayman
          - America/Chicago
          - America/Chihuahua
          - America/Coral_Harbour
          - America/Cordoba
          - America/Costa_Rica
          - America/Creston
          - America/Cuiaba
          - America/Curacao
          - America/Danmarkshavn
          - America/Dawson
          - America/Dawson_Creek
          - America/Denver
          - America/Detroit
          - America/Dominica
          - America/Edmonton
          - America/Eirunepe
          - America/El_Salvador
          - America/Ensenada
          - America/Fort_Nelson
          - America/Fort_Wayne
          - America/Fortaleza
          - America/Glace_Bay
          - America/Godthab
          - America/Goose_Bay
          - America/Grand_Turk
          - America/Grenada
          - America/Guadeloupe
          - America/Guatemala
          - America/Guayaquil
          - America/Guyana
          - America/Halifax
          - America/Havana
          - America/Hermosillo
          - America/Indiana/Indianapolis
          - America/Indiana/Knox
          - America/Indiana/Marengo
          - America/Indiana/Petersburg
          - America/Indiana/Tell_City
          - America/Indiana/Vevay
          - America/Indiana/Vincennes
          - America/Indiana/Winamac
          - America/Indianapolis
          - America/Inuvik
          - America/Iqaluit
          - America/Jamaica
          - America/Jujuy
          - America/Juneau
          - America/Kentucky/Louisville
          - America/Kentucky/Monticello
          - America/Knox_IN
          - America/Kralendijk
          - America/La_Paz
          - America/Lima
          - America/Los_Angeles
          - America/Louisville
          - America/Lower_Princes
          - America/Maceio
          - America/Managua
          - America/Manaus
          - America/Marigot
          - America/Martinique
          - America/Matamoros
          - America/Mazatlan
          - America/Mendoza
          - America/Menominee
          - America/Merida
          - America/Metlakatla
          - America/Mexico_City
          - America/Miquelon
          - America/Moncton
          - America/Monterrey
          - America/Montevideo
          - America/Montreal
          - America/Montserrat
          - America/Nassau
          - America/New_York
          - America/Nipigon
          - America/Nome
          - America/Noronha
          - America/North_Dakota/Beulah
          - America/North_Dakota/Center
          - America/North_Dakota/New_Salem
          - America/Nuuk
          - America/Ojinaga
          - America/Panama
          - America/Pangnirtung
          - America/Paramaribo
          - America/Phoenix
          - America/Port-au-Prince
          - America/Port_of_Spain
          - America/Porto_Acre
          - America/Porto_Velho
          - America/Puerto_Rico
          - America/Punta_Arenas
          - America/Rainy_River
          - America/Rankin_Inlet
          - America/Recife
          - America/Regina
          - America/Resolute
          - America/Rio_Branco
          - America/Rosario
          - America/Santa_Isabel
          - America/Santarem
          - America/Santiago
          - America/Santo_Domingo
          - America/Sao_Paulo
          - America/Scoresbysund
          - America/Shiprock
          - America/Sitka
          - America/St_Barthelemy
          - America/St_Johns
          - America/St_Kitts
          - America/St_Lucia
          - America/St_Thomas
          - America/St_Vincent
          - America/Swift_Current
          - America/Tegucigalpa
          - America/Thule
          - America/Thunder_Bay
          - America/Tijuana
          - America/Toronto
          - America/Tortola
          - America/Vancouver
          - America/Virgin
          - America/Whitehorse
          - America/Winnipeg
          - America/Yakutat
          - America/Yellowknife
          - Antarctica/Casey
          - Antarctica/Davis
          - Antarctica/DumontDUrville
          - Antarctica/Macquarie
          - Antarctica/Mawson
          - Antarctica/McMurdo
          - Antarctica/Palmer
          - Antarctica/Rothera
          - Antarctica/South_Pole
          - Antarctica/Syowa
          - Antarctica/Troll
          - Antarctica/Vostok
          - Arctic/Longyearbyen
          - Asia/Aden
          - Asia/Almaty
          - Asia/Amman
          - Asia/Anadyr
          - Asia/Aqtau
          - Asia/Aqtobe
          - Asia/Ashgabat
          - Asia/Ashkhabad
          - Asia/Atyrau
          - Asia/Baghdad
          - Asia/Bahrain
          - Asia/Baku
          - Asia/Bangkok
          - Asia/Barnaul
          - Asia/Beirut
          - Asia/Bishkek
          - Asia/Brunei
          - Asia/Calcutta
          - Asia/Chita
          - Asia/Choibalsan
          - Asia/Chongqing
          - Asia/Chungking
          - Asia/Colombo
          - Asia/Dacca
          - Asia/Damascus
          - Asia/Dhaka
          - Asia/Dili
          - Asia/Dubai
          - Asia/Dushanbe
          - Asia/Famagusta
          - Asia/Gaza
          - Asia/Harbin
          - Asia/Hebron
          - Asia/Ho_Chi_Minh
          - Asia/Hong_Kong
          - Asia/Hovd
          - Asia/Irkutsk
          - Asia/Istanbul
          - Asia/Jakarta
          - Asia/Jayapura
          - Asia/Jerusalem
          - Asia/Kabul
          - Asia/Kamchatka
          - Asia/Karachi
          - Asia/Kashgar
          - Asia/Kathmandu
          - Asia/Katmandu
          - Asia/Khandyga
          - Asia/Kolkata
          - Asia/Krasnoyarsk
          - Asia/Kuala_Lumpur
          - Asia/Kuching
          - Asia/Kuwait
          - Asia/Macao
          - Asia/Macau
          - Asia/Magadan
          - Asia/Makassar
          - Asia/Manila
          - Asia/Muscat
          - Asia/Nicosia
          - Asia/Novokuznetsk
          - Asia/Novosibirsk
          - Asia/Omsk
          - Asia/Oral
          - Asia/Phnom_Penh
          - Asia/Pontianak
          - Asia/Pyongyang
          - Asia/Qatar
          - Asia/Qostanay
          - Asia/Qyzylorda
          - Asia/Rangoon
          - Asia/Riyadh
          - Asia/Saigon
          - Asia/Sakhalin
          - Asia/Samarkand
          - Asia/Seoul
          - Asia/Shanghai
          - Asia/Singapore
          - Asia/Srednekolymsk
          - Asia/Taipei
          - Asia/Tashkent
          - Asia/Tbilisi
          - Asia/Tehran
          - Asia/Tel_Aviv
          - Asia/Thimbu
          - Asia/Thimphu
          - Asia/Tokyo
          - Asia/Tomsk
          - Asia/Ujung_Pandang
          - Asia/Ulaanbaatar
          - Asia/Ulan_Bator
          - Asia/Urumqi
          - Asia/Ust-Nera
          - Asia/Vientiane
          - Asia/Vladivostok
          - Asia/Yakutsk
          - Asia/Yangon
          - Asia/Yekaterinburg
          - Asia/Yerevan
          - Atlantic/Azores
          - Atlantic/Bermuda
          - Atlantic/Canary
          - Atlantic/Cape_Verde
          - Atlantic/Faeroe
          - Atlantic/Faroe
          - Atlantic/Jan_Mayen
          - Atlantic/Madeira
          - Atlantic/Reykjavik
          - Atlantic/South_Georgia
          - Atlantic/St_Helena
          - Atlantic/Stanley
          - Australia/ACT
          - Australia/Adelaide
          - Australia/Brisbane
          - Australia/Broken_Hill
          - Australia/Canberra
          - Australia/Currie
          - Australia/Darwin
          - Australia/Eucla
          - Australia/Hobart
          - Australia/LHI
          - Australia/Lindeman
          - Australia/Lord_Howe
          - Australia/Melbourne
          - Australia/NSW
          - Australia/North
          - Australia/Perth
          - Australia/Queensland
          - Australia/South
          - Australia/Sydney
          - Australia/Tasmania
          - Australia/Victoria
          - Australia/West
          - Australia/Yancowinna
          - Brazil/Acre
          - Brazil/DeNoronha
          - Brazil/East
          - Brazil/West
          - CET
          - CST6CDT
          - Canada/Atlantic
          - Canada/Central
          - Canada/Eastern
          - Canada/Mountain
          - Canada/Newfoundland
          - Canada/Pacific
          - Canada/Saskatchewan
          - Canada/Yukon
          - Chile/Continental
          - Chile/EasterIsland
          - Cuba
          - EET
          - EST5EDT
          - Egypt
          - Eire
          - Etc/GMT
          - Etc/GMT+0
          - Etc/GMT+1
          - Etc/GMT+10
          - Etc/GMT+11
          - Etc/GMT+12
          - Etc/GMT+2
          - Etc/GMT+3
          - Etc/GMT+4
          - Etc/GMT+5
          - Etc/GMT+6
          - Etc/GMT+7
          - Etc/GMT+8
          - Etc/GMT+9
          - Etc/GMT-0
          - Etc/GMT-1
          - Etc/GMT-10
          - Etc/GMT-11
          - Etc/GMT-12
          - Etc/GMT-13
          - Etc/GMT-14
          - Etc/GMT-2
          - Etc/GMT-3
          - Etc/GMT-4
          - Etc/GMT-5
          - Etc/GMT-6
          - Etc/GMT-7
          - Etc/GMT-8
          - Etc/GMT-9
          - Etc/GMT0
          - Etc/Greenwich
          - Etc/UCT
          - Etc/UTC
          - Etc/Universal
          - Etc/Zulu
          - Europe/Amsterdam
          - Europe/Andorra
          - Europe/Astrakhan
          - Europe/Athens
          - Europe/Belfast
          - Europe/Belgrade
          - Europe/Berlin
          - Europe/Bratislava
          - Europe/Brussels
          - Europe/Bucharest
          - Europe/Budapest
          - Europe/Busingen
          - Europe/Chisinau
          - Europe/Copenhagen
          - Europe/Dublin
          - Europe/Gibraltar
          - Europe/Guernsey
          - Europe/Helsinki
          - Europe/Isle_of_Man
          - Europe/Istanbul
          - Europe/Jersey
          - Europe/Kaliningrad
          - Europe/Kiev
          - Europe/Kirov
          - Europe/Kyiv
          - Europe/Lisbon
          - Europe/Ljubljana
          - Europe/London
          - Europe/Luxembourg
          - Europe/Madrid
          - Europe/Malta
          - Europe/Mariehamn
          - Europe/Minsk
          - Europe/Monaco
          - Europe/Moscow
          - Europe/Nicosia
          - Europe/Oslo
          - Europe/Paris
          - Europe/Podgorica
          - Europe/Prague
          - Europe/Riga
          - Europe/Rome
          - Europe/Samara
          - Europe/San_Marino
          - Europe/Sarajevo
          - Europe/Saratov
          - Europe/Simferopol
          - Europe/Skopje
          - Europe/Sofia
          - Europe/Stockholm
          - Europe/Tallinn
          - Europe/Tirane
          - Europe/Tiraspol
          - Europe/Ulyanovsk
          - Europe/Uzhgorod
          - Europe/Vaduz
          - Europe/Vatican
          - Europe/Vienna
          - Europe/Vilnius
          - Europe/Volgograd
          - Europe/Warsaw
          - Europe/Zagreb
          - Europe/Zaporozhye
          - Europe/Zurich
          - GB
          - GB-Eire
          - GMT
          - GMT0
          - Greenwich
          - Hongkong
          - Iceland
          - Indian/Antananarivo
          - Indian/Chagos
          - Indian/Christmas
          - Indian/Cocos
          - Indian/Comoro
          - Indian/Kerguelen
          - Indian/Mahe
          - Indian/Maldives
          - Indian/Mauritius
          - Indian/Mayotte
          - Indian/Reunion
          - Iran
          - Israel
          - Jamaica
          - Japan
          - Kwajalein
          - Libya
          - MET
          - MST7MDT
          - Mexico/BajaNorte
          - Mexico/BajaSur
          - Mexico/General
          - NZ
          - NZ-CHAT
          - Navajo
          - PRC
          - PST8PDT
          - Pacific/Apia
          - Pacific/Auckland
          - Pacific/Bougainville
          - Pacific/Chatham
          - Pacific/Chuuk
          - Pacific/Easter
          - Pacific/Efate
          - Pacific/Enderbury
          - Pacific/Fakaofo
          - Pacific/Fiji
          - Pacific/Funafuti
          - Pacific/Galapagos
          - Pacific/Gambier
          - Pacific/Guadalcanal
          - Pacific/Guam
          - Pacific/Honolulu
          - Pacific/Johnston
          - Pacific/Kanton
          - Pacific/Kiritimati
          - Pacific/Kosrae
          - Pacific/Kwajalein
          - Pacific/Majuro
          - Pacific/Marquesas
          - Pacific/Midway
          - Pacific/Nauru
          - Pacific/Niue
          - Pacific/Norfolk
          - Pacific/Noumea
          - Pacific/Pago_Pago
          - Pacific/Palau
          - Pacific/Pitcairn
          - Pacific/Pohnpei
          - Pacific/Ponape
          - Pacific/Port_Moresby
          - Pacific/Rarotonga
          - Pacific/Saipan
          - Pacific/Samoa
          - Pacific/Tahiti
          - Pacific/Tarawa
          - Pacific/Tongatapu
          - Pacific/Truk
          - Pacific/Wake
          - Pacific/Wallis
          - Pacific/Yap
          - Poland
          - Portugal
          - ROK
          - Singapore
          - SystemV/AST4
          - SystemV/AST4ADT
          - SystemV/CST6
          - SystemV/CST6CDT
          - SystemV/EST5
          - SystemV/EST5EDT
          - SystemV/HST10
          - SystemV/MST7
          - SystemV/MST7MDT
          - SystemV/PST8
          - SystemV/PST8PDT
          - SystemV/YST9
          - SystemV/YST9YDT
          - Turkey
          - UCT
          - US/Alaska
          - US/Aleutian
          - US/Arizona
          - US/Central
          - US/East-Indiana
          - US/Eastern
          - US/Hawaii
          - US/Indiana-Starke
          - US/Michigan
          - US/Mountain
          - US/Pacific
          - US/Samoa
          - UTC
          - Universal
          - W-SU
          - WET
          - Zulu
          - EST
          - HST
          - MST
          - ACT
          - AET
          - AGT
          - ART
          - AST
          - BET
          - BST
          - CAT
          - CNT
          - CST
          - CTT
          - EAT
          - ECT
          - IET
          - IST
          - JST
          - MIT
          - NET
          - NST
          - PLT
          - PNT
          - PRT
          - PST
          - SST
          - VST
          type: string
        frequency:
          allOf:
          - $ref: '#/components/schemas/FrequencyInput'
          description: Frequency of the scheduled job run.
        recipient_details:
          allOf:
          - $ref: '#/components/schemas/RecipientDetailsInput'
          description: "Recipients of the scheduled job notifications. You can add\
            \ the ID or name of the ThoughtSpot users or groups as recipients in the\
            \ `principals` array. If a recipient is not a ThoughtSpot user, specify\
            \ email address."
        status:
          description: Status of the schedule
          enum:
          - ACTIVE
          - PAUSE
          type: string
      type: object
    assignChangeAuthor_request:
      properties:
        metadata:
          description: GUID or name of the metadata object.
          items:
            $ref: '#/components/schemas/AuthorMetadataTypeInput'
          type: array
        user_identifier:
          description: GUID or name of the user who you want to assign as the author.
          type: string
        current_owner_identifier:
          description: |-
            GUID or name of the current author.  When defined, the metadata objects
            authored by the specified owner are filtered for the API operation.
          type: string
      required:
      - metadata
      - user_identifier
      type: object
    fetchPermissionsOfPrincipals_request:
      properties:
        principals:
          description: GUID or name of the user or group.
          items:
            $ref: '#/components/schemas/PrincipalsInput'
          type: array
        metadata:
          description: |-
            Metadata objects for which you want to fetch permission details.
            If not specified, the API returns permission details for all
            metadata objects that the specified users and groups can access.
          items:
            $ref: '#/components/schemas/PermissionsMetadataTypeInput'
          type: array
        record_offset:
          default: 0
          description: The starting record number from where the records should be
            included for each metadata type.
          format: int32
          type: integer
        record_size:
          default: -1
          description: The number of records that should be included for each metadata
            type.
          format: int32
          type: integer
        default_metadata_type:
          description: "When no metadata objects input is passed, metadata objects\
            \ of this type are fetched."
          enum:
          - ALL
          - LIVEBOARD
          - ANSWER
          - LOGICAL_TABLE
          - LOGICAL_COLUMN
          - CONNECTION
          type: string
      required:
      - principals
      type: object
    fetchPermissionsOnMetadata_request:
      properties:
        metadata:
          description: GUID or name of the metadata object.
          items:
            $ref: '#/components/schemas/PermissionsMetadataTypeInput'
          type: array
        principals:
          description: |-
            User or group objects for which you want to fetch permissions.
            If not specified, the API returns all users and groups that
            can access the specified metadata objects.
          items:
            $ref: '#/components/schemas/PrincipalsInput'
          type: array
        include_dependent_objects:
          default: false
          description: Indicates whether to fetch permissions of dependent metadata
            objects.
          nullable: true
          type: boolean
        record_offset:
          default: 0
          description: The starting record number from where the records should be
            included for each metadata type.
          format: int32
          type: integer
        record_size:
          default: -1
          description: The number of records that should be included for each metadata
            type.
          format: int32
          type: integer
        permission_type:
          description: |-
            <div>Version: 10.3.0.cl or later
            </div>

            Specifies the type of permission. Valid values are:
                EFFECTIVE - If the user permission to the metadata objects is granted by the privileges assigned to the groups to which they belong.
                DEFINED - If a user or user group received access to metadata objects via object sharing by another user.
          type: string
      required:
      - metadata
      type: object
    shareMetadata_request:
      properties:
        metadata_type:
          description: |-
            Type of metadata. Required if identifier in metadata_identifies is a name.
            1. Liveboard
            2. Answers
            3. LOGICAL_TABLE for any data object such as table, worksheet or view.
            4. LOGICAL_COLUMN
          enum:
          - LIVEBOARD
          - ANSWER
          - LOGICAL_TABLE
          - LOGICAL_COLUMN
          - CONNECTION
          type: string
        metadata_identifiers:
          description: "Unique ID or name of metadata objects. Note: All the names\
            \ should belong to same metadata_type"
          items:
            type: string
          type: array
        metadata:
          description: Metadata details for sharing objects.
          items:
            $ref: '#/components/schemas/ShareMetadataTypeInput'
          type: array
        permissions:
          description: Permission details for sharing the objects.
          items:
            $ref: '#/components/schemas/SharePermissionsInput'
          type: array
        visualization_identifiers:
          description: Options to specify details of Liveboard. First Liveboard encountered
            in payload is considered to be the corresponding Liveboard.
          items:
            type: string
          type: array
        emails:
          default: []
          description: Email IDs to which notifications will be sent.
          items:
            type: string
          type: array
        message:
          description: Message to be included in notification.
          type: string
        enable_custom_url:
          default: false
          description: Sends object URLs in the customized format in email notifications.
          nullable: true
          type: boolean
        notify_on_share:
          default: true
          description: Flag to notify user when any object is shared.
          nullable: true
          type: boolean
        has_lenient_discoverability:
          default: false
          description: Flag to make the object discoverable.
          nullable: true
          type: boolean
      required:
      - message
      - permissions
      type: object
    updateSystemConfig_request:
      properties:
        configuration:
          description: Configuration JSON with the key-value pair of configuration
            attributes to be updated.
          type: object
      required:
      - configuration
      type: object
    assignTag_request:
      properties:
        metadata:
          description: Metadata objects.
          items:
            $ref: '#/components/schemas/TagMetadataTypeInput'
          type: array
        tag_identifiers:
          description: GUID or name of the tag.
          items:
            type: string
          type: array
      required:
      - metadata
      - tag_identifiers
      type: object
    createTag_request:
      properties:
        name:
          description: Name of the tag.
          type: string
        color:
          description: "Hex color code to be assigned to the tag. For example, #ff78a9."
          type: string
      required:
      - name
      type: object
    searchTags_request:
      properties:
        tag_identifier:
          description: Name or Id of the tag.
          type: string
        name_pattern:
          description: A pattern to match case-insensitive name of the Tag object.
          type: string
        color:
          description: Color of the tag.
          type: string
      type: object
    updateTag_request:
      properties:
        name:
          description: Name of the tag.
          type: string
        color:
          description: "Hex color code to be assigned to the tag. For example, #ff78a9."
          type: string
      type: object
    activateUser_request:
      properties:
        user_identifier:
          description: Unique ID or name of the user.
          type: string
        auth_token:
          description: Auth token for the user.
          type: string
        password:
          description: New password for the user to access the account.
          type: string
        properties:
          description: Properties of the user.
          type: string
      required:
      - auth_token
      - password
      - user_identifier
      type: object
    changeUserPassword_request:
      properties:
        current_password:
          description: Current password of the user.
          type: string
        new_password:
          description: New password for the user.
          type: string
        user_identifier:
          description: GUID or name of the user.
          type: string
      required:
      - current_password
      - new_password
      - user_identifier
      type: object
    createUser_request:
      properties:
        name:
          description: Name of the user. The username string must be unique.
          type: string
        display_name:
          description: "A unique display name string for the user account, usually\
            \ their first and last name"
          type: string
        password:
          description: "Password for the user account. For IAMv2 users, you must set\
            \ this password if you do not want to trigger an activation email."
          type: string
        email:
          description: Email of the user account
          type: string
        account_type:
          default: LOCAL_USER
          description: Type of the account.
          enum:
          - LOCAL_USER
          - LDAP_USER
          - SAML_USER
          - OIDC_USER
          - REMOTE_USER
          type: string
        account_status:
          default: ACTIVE
          description: Current status of the user account. The `SUSPENDED` user state
            indicates a transitional state applicable to IAMv2 users only.
          enum:
          - ACTIVE
          - INACTIVE
          - EXPIRED
          - LOCKED
          - PENDING
          - SUSPENDED
          type: string
        org_identifiers:
          description: List of Org IDs to which the user belongs.
          items:
            type: string
          type: array
        group_identifiers:
          description: GUIDs or names of the groups to which the newly created user
            belongs.
          items:
            type: string
          type: array
        visibility:
          default: SHARABLE
          description: "Visibility of the users. When set to SHARABLE, the user is\
            \ visible to other users and groups when they try to share an object."
          enum:
          - SHARABLE
          - NON_SHARABLE
          type: string
        notify_on_share:
          default: true
          description: |-
            User preference for receiving email notifications when another ThoughtSpot
            user shares a metadata object such as Answer, Liveboard, or Worksheet.
          nullable: true
          type: boolean
        show_onboarding_experience:
          default: true
          description: The user preference for revisiting the onboarding experience.
          nullable: true
          type: boolean
        onboarding_experience_completed:
          default: false
          description: flag to get the on-boarding experience is completed or not.
          nullable: true
          type: boolean
        home_liveboard_identifier:
          description: |-
            GUID of the Liveboard to set a default Liveboard for the user.
            ThoughtSpot displays this Liveboard on the Home page when the user logs in.
          type: string
        favorite_metadata:
          description: Metadata objects to add to the user's favorites list.
          items:
            $ref: '#/components/schemas/FavoriteMetadataInput'
          type: array
        preferred_locale:
          description: Locale for the user.
          enum:
          - en-CA
          - en-GB
          - en-US
          - de-DE
          - ja-JP
          - zh-CN
          - pt-BR
          - fr-FR
          - fr-CA
          - es-US
          - da-DK
          - es-ES
          - fi-FI
          - sv-SE
          - nb-NO
          - pt-PT
          - nl-NL
          - it-IT
          - ru-RU
          - en-IN
          - de-CH
          - en-NZ
          - es-MX
          - en-AU
          - zh-Hant
          - ko-KR
          - en-DE
          type: string
        extended_properties:
          description: Properties for the user
          type: object
        extended_preferences:
          description: Preferences for the user
          type: object
        trigger_welcome_email:
          description: Flag to indicate whether welcome email should be sent to user.
            This parameter is applied only on clusters on which IAM is disabled.
          nullable: true
          type: boolean
        trigger_activation_email:
          description: "Flag to indicate whether activation email should be sent to\
            \ the user. Default value for IAMv2 users is set to true. Users must either\
            \ set this to false, or enter a valid \npassword if they do not want to\
            \ trigger an activation email."
          nullable: true
          type: boolean
      required:
      - display_name
      - email
      - name
      type: object
    deactivateUser_request:
      properties:
        user_identifier:
          description: Unique ID or name of the user.
          type: string
        base_url:
          description: Base url of the cluster.
          type: string
      required:
      - base_url
      - user_identifier
      type: object
    forceLogoutUsers_request:
      properties:
        user_identifiers:
          description: GUID or name of the users for force logging out their sessions.
          items:
            type: string
          type: array
      type: object
    importUsers_request:
      properties:
        users:
          description: List of users needs to be imported.
          items:
            $ref: '#/components/schemas/ImportUser'
          type: array
        default_password:
          description: The default password to assign to users if they do not have
            a password assigned in ThoughtSpot.
          type: string
        dry_run:
          default: true
          description: "If true, the API performs a test operation and returns user\
            \ IDs whose data will be edited after the import."
          nullable: true
          type: boolean
        delete_unspecified_users:
          default: false
          description: "If set to true, removes the users that are not specified in\
            \ the API request."
          nullable: true
          type: boolean
      required:
      - users
      type: object
    resetUserPassword_request:
      properties:
        new_password:
          description: New password for the user.
          type: string
        user_identifier:
          description: GUID or name of the user.
          type: string
      required:
      - new_password
      - user_identifier
      type: object
    searchUsers_request:
      properties:
        user_identifier:
          description: GUID / name of the user to search
          type: string
        display_name:
          description: "A unique display name string for the user account, usually\
            \ their first and last name"
          type: string
        name_pattern:
          description: A pattern to match case-insensitive name of the User object.
          type: string
        visibility:
          description: Visibility of the user
          enum:
          - SHARABLE
          - NON_SHARABLE
          type: string
        email:
          description: Email of the user account
          type: string
        group_identifiers:
          description: GUID or name of the group to which the user belongs
          items:
            type: string
          type: array
        privileges:
          description: Privileges assigned to the user
          items:
            enum:
            - ADMINISTRATION
            - AUTHORING
            - USERDATAUPLOADING
            - DATADOWNLOADING
            - USERMANAGEMENT
            - DATAMANAGEMENT
            - SHAREWITHALL
            - JOBSCHEDULING
            - A3ANALYSIS
            - EXPERIMENTALFEATUREPRIVILEGE
            - BYPASSRLS
            - RANALYSIS
            - DEVELOPER
            - USER_ADMINISTRATION
            - GROUP_ADMINISTRATION
            - SYNCMANAGEMENT
            - CAN_CREATE_CATALOG
            - DISABLE_PINBOARD_CREATION
            - LIVEBOARD_VERIFIER
            - PREVIEW_THOUGHTSPOT_SAGE
            - APPLICATION_ADMINISTRATION
            - SYSTEM_INFO_ADMINISTRATION
            - ORG_ADMINISTRATION
            - ROLE_ADMINISTRATION
            - AUTHENTICATION_ADMINISTRATION
            - BILLING_INFO_ADMINISTRATION
            - CAN_MANAGE_CUSTOM_CALENDAR
            - CAN_CREATE_OR_EDIT_CONNECTIONS
            - CAN_MANAGE_WORKSHEET_VIEWS_TABLES
            - CAN_MANAGE_VERSION_CONTROL
            - THIRDPARTY_ANALYSIS
            - ALLOW_NON_EMBED_FULL_APP_ACCESS
            - CAN_ACCESS_ANALYST_STUDIO
            - CAN_MANAGE_ANALYST_STUDIO
            - PREVIEW_DOCUMENT_SEARCH
            - CAN_SETUP_VERSION_CONTROL
            type: string
          type: array
        account_type:
          description: Type of the account
          enum:
          - LOCAL_USER
          - LDAP_USER
          - SAML_USER
          - OIDC_USER
          - REMOTE_USER
          type: string
        account_status:
          description: Current status of the user account.
          enum:
          - ACTIVE
          - INACTIVE
          - EXPIRED
          - LOCKED
          - PENDING
          - SUSPENDED
          type: string
        notify_on_share:
          description: |-
            User preference for receiving email notifications when another ThoughtSpot user
            shares a metadata object such as Answer, Liveboard, or Worksheet.
          nullable: true
          type: boolean
        show_onboarding_experience:
          description: The user preference for revisiting the onboarding experience
          nullable: true
          type: boolean
        onboarding_experience_completed:
          description: Indicates if the user has completed the onboarding walkthrough
          nullable: true
          type: boolean
        org_identifiers:
          description: IDs or names of the Orgs to which the user belongs
          items:
            type: string
          type: array
        home_liveboard_identifier:
          description: Unique ID or name of the user's home Liveboard.
          type: string
        favorite_metadata:
          description: Metadata objects which are assigned as favorites of the user.
          items:
            $ref: '#/components/schemas/FavoriteMetadataInput'
          type: array
        record_offset:
          default: 0
          description: The starting record number from where the records should be
            included.
          format: int32
          type: integer
        record_size:
          default: 10
          description: The number of records that should be included.
          format: int32
          type: integer
        sort_options:
          allOf:
          - $ref: '#/components/schemas/SortOptions'
          description: Sort options.
        role_identifiers:
          description: Filters by the role assigned to the user.
          items:
            type: string
          type: array
        include_favorite_metadata:
          default: false
          description: Indicates if the user's favorite objects should be displayed.
          nullable: true
          type: boolean
      type: object
    updateUser_request:
      properties:
        name:
          description: Name of the user. The username string must be unique.
          type: string
        display_name:
          description: "A unique display name string for the user account, usually\
            \ their first and last name"
          type: string
        visibility:
          description: "Visibility of the users. When set to SHARABLE, the user is\
            \ visible to other users and groups when they try to share an object."
          enum:
          - SHARABLE
          - NON_SHARABLE
          type: string
        email:
          description: Email of the user account
          type: string
        account_status:
          description: Current status of the user account. The `SUSPENDED` user state
            indicates a transitional state applicable to IAMv2 users only.
          enum:
          - ACTIVE
          - INACTIVE
          - EXPIRED
          - LOCKED
          - PENDING
          - SUSPENDED
          type: string
        notify_on_share:
          description: |-
            User preference for receiving email notifications when another ThoughtSpot user
            shares a metadata object such as Answer, Liveboard, or Worksheet.
          nullable: true
          type: boolean
        show_onboarding_experience:
          description: The user preference for revisiting the onboarding experience.
          nullable: true
          type: boolean
        onboarding_experience_completed:
          description: Indicates if the user has completed the onboarding and allows
            turning off the onboarding walkthrough.
          nullable: true
          type: boolean
        account_type:
          description: Type of the account.
          enum:
          - LOCAL_USER
          - LDAP_USER
          - SAML_USER
          - OIDC_USER
          - REMOTE_USER
          type: string
        group_identifiers:
          description: GUIDs or names of the groups.
          items:
            type: string
          type: array
        home_liveboard_identifier:
          description: |-
            GUID of the Liveboard to set a default Liveboard for the user. ThoughtSpot displays
            this Liveboard on the Home page when the user logs in.
          type: string
        favorite_metadata:
          description: Metadata objects to add to the user's favorites list.
          items:
            $ref: '#/components/schemas/FavoriteMetadataInput'
          type: array
        org_identifiers:
          description: IDs of the Orgs.
          items:
            type: string
          type: array
        operation:
          default: REPLACE
          description: Type of update operation. Default operation type is REPLACE
          enum:
          - ADD
          - REMOVE
          - REPLACE
          type: string
        preferred_locale:
          description: Locale for the user.
          enum:
          - en-CA
          - en-GB
          - en-US
          - de-DE
          - ja-JP
          - zh-CN
          - pt-BR
          - fr-FR
          - fr-CA
          - es-US
          - da-DK
          - es-ES
          - fi-FI
          - sv-SE
          - nb-NO
          - pt-PT
          - nl-NL
          - it-IT
          - ru-RU
          - en-IN
          - de-CH
          - en-NZ
          - es-MX
          - en-AU
          - zh-Hant
          - ko-KR
          - en-DE
          type: string
        extended_properties:
          description: Properties for the user
          type: object
        extended_preferences:
          description: Preferences for the user
          type: object
      type: object
    commitBranch_request:
      properties:
        metadata:
          description: Metadata objects.
          items:
            $ref: '#/components/schemas/MetadataObject'
          type: array
        delete_aware:
          default: true
          description: Delete the tml files from version control repo if it does not
            exist in the ThoughSpot instance
          nullable: true
          type: boolean
        branch_name:
          description: "   Name of the remote branch where object should be pushed\n\
            \   \n\nNote: If no branch_name is specified, then the commit_branch_name\
            \ will be considered."
          type: string
        comment:
          description: Comment to be added to the commit
          type: string
      required:
      - comment
      - metadata
      type: object
    createConfig_request:
      properties:
        repository_url:
          description: URL for connecting to remote repository
          type: string
        username:
          description: Username to authenticate connection to remote repository
          type: string
        access_token:
          description: Access token corresponding to the user to authenticate connection
            to remote repository
          type: string
        org_identifier:
          description: "   Applicable when Orgs is enabled in the cluster\n   \n\n\
            List of Org ids or name. Provide value -1 for cluster level. Example :\
            \ [\"OrgID1-or-Name1\", \"OrgID2-or-Name2\"] \n\n\n   \n\nNote: If no\
            \ value is specified, then the configurations will be returned for all\
            \ orgs the user has access to  \n  Version: 9.5.0.cl or later\n"
          type: string
        branch_names:
          description: "List the remote branches to configure. Example:[development,\
            \ production]"
          items:
            type: string
          type: array
        commit_branch_name:
          description: "Name of the remote branch where objects from this Thoughtspot\
            \ instance will be versioned. \n  Version: 9.7.0.cl or later\n"
          type: string
        enable_guid_mapping:
          default: true
          description: "Maintain mapping of guid for the deployment to an instance\
            \ \n  Version: 9.4.0.cl or later\n"
          nullable: true
          type: boolean
        configuration_branch_name:
          description: "   Name of the branch where the configuration files related\
            \ to operations between Thoughtspot and version control repo should be\
            \ maintained.\n   \n\nNote: If no branch name is specified, then by default,\
            \ ts_config_files branch is considered. Ensure this branch exists before\
            \ configuration. \n  Version: 9.7.0.cl or later\n"
          type: string
      required:
      - access_token
      - repository_url
      - username
      type: object
    deleteConfig_request:
      properties:
        cluster_level:
          description: "   Applicable when Orgs is enabled in the cluster\n   \n\n\
            Indicator to consider cluster level or org level config. Set it to false\
            \ to delete configuration from current org. If set to true, then the configuration\
            \ at cluster level and orgs that inherited the configuration from cluster\
            \ level will be deleted.  \n  Version: 9.5.0.cl or later\n"
          nullable: true
          type: boolean
      type: object
    deployCommit_request:
      properties:
        commit_id:
          description: "   Commit_id against which the files should be picked to deploy.\n\
            \   \n\nNote: If no commit_id is specified, then the head of the branch\
            \ is considered."
          type: string
        branch_name:
          description: Name of the remote branch where changes should be picked
          type: string
        deploy_type:
          default: DELTA
          description: Indicates if all files or only modified file at specified commit
            point should be considered
          enum:
          - FULL
          - DELTA
          type: string
        deploy_policy:
          default: ALL_OR_NONE
          description: Define the policy to follow while importing TML in the ThoughtSpot
            environment. Use “ALL_OR_NONE” to cancel the deployment of all ThoughtSpot
            objects if at least one of them fails to import. Use “Partial” to import
            ThoughtSpot objects that validate successfully even if other objects in
            the same deploy operations fail to import.
          enum:
          - ALL_OR_NONE
          - PARTIAL
          - VALIDATE_ONLY
          type: string
      required:
      - branch_name
      type: object
    revertCommit_request:
      properties:
        metadata:
          description: Metadata objects.
          items:
            $ref: '#/components/schemas/MetadataObject'
          type: array
        branch_name:
          description: "   Name of the branch where the reverted version should be\
            \ committed\n   \n\nNote: If no branch_name is specified, then the commit_branch_name\
            \ will be considered."
          type: string
        revert_policy:
          default: ALL_OR_NONE
          description: "Policy to apply when reverting a commit. Valid values: [ALL_OR_NONE,\
            \ PARTIAL]"
          enum:
          - ALL_OR_NONE
          - PARTIAL
          type: string
      type: object
    searchCommits_request:
      properties:
        metadata_identifier:
          description: Unique ID or name of the metadata.
          type: string
        metadata_type:
          description: Type of metadata.
          enum:
          - LIVEBOARD
          - ANSWER
          - LOGICAL_TABLE
          - CUSTOM_ACTION
          type: string
        branch_name:
          description: "   Name of the branch from which commit history needs to be\
            \ displayed.\n   \n\nNote: If no branch_name is specified, then commits\
            \ will be returned for the default branch for this configuration."
          type: string
        record_offset:
          description: "    Record offset point in the commit history to display the\
            \ response.\n    \n\nNote: If no record offset is specified, the beginning\
            \ of the record will be considered."
          format: int32
          type: integer
        record_size:
          description: "    Number of history records from record offset point to\
            \ be displayed in the response.\n    \n\nNote: If no record size is specified,\
            \ then all the records will be considered."
          format: int32
          type: integer
      required:
      - metadata_identifier
      type: object
    searchConfig_request:
      properties:
        org_identifiers:
          description: "   Applicable when Orgs is enabled in the cluster\n   \n\n\
            List of Org ids or name. Provide value -1 for cluster level. Example :\
            \ [\"OrgID1-or-Name1\", \"OrgID2-or-Name2\"] \n\n\n   \n\nNote: If no\
            \ value is specified, then the configurations will be returned for all\
            \ orgs the user has access to  \n  Version: 9.5.0.cl or later\n"
          items:
            type: string
          type: array
      type: object
    updateConfig_request:
      properties:
        username:
          description: Username to authenticate connection to version control system
          type: string
        access_token:
          description: Access token corresponding to the user to authenticate connection
            to version control system
          type: string
        org_identifier:
          description: "   Applicable when Orgs is enabled in the cluster\n   \n\n\
            List of Org ids or name. Provide value -1 for cluster level. Example :\
            \ [\"OrgID1-or-Name1\", \"OrgID2-or-Name2\"] \n\n\n   \n\nNote: If no\
            \ value is specified, then the configurations will be returned for all\
            \ orgs the user has access to  \n  Version: 9.5.0.cl or later\n"
          type: string
        branch_names:
          description: "List the remote branches to configure. Example:[development,\
            \ production]"
          items:
            type: string
          type: array
        commit_branch_name:
          description: "Name of the remote branch where objects from this Thoughtspot\
            \ instance will be versioned. \n  Version: 9.7.0.cl or later\n"
          type: string
        enable_guid_mapping:
          description: "Maintain mapping of guid for the deployment to an instance\
            \ \n  Version: 9.4.0.cl or later\n"
          nullable: true
          type: boolean
        configuration_branch_name:
          description: "Name of the branch where the configuration files related to\
            \ operations between Thoughtspot and version control repo should be maintained.\
            \ \n  Version: 9.7.0.cl or later\n"
          type: string
      type: object
    validateMerge_request:
      properties:
        source_branch_name:
          description: Name of the branch from which changes need to be picked for
            validation
          type: string
        target_branch_name:
          description: Name of the branch where files will be merged
          type: string
      required:
      - source_branch_name
      - target_branch_name
      type: object
  securitySchemes:
    bearerAuth:
      scheme: bearer
      type: http
x-roles:
- name: 10.4.0.cl
  id: 10.4.0.cl
  tags:
  - 10.4.0.cl
  description: Roles for version 10.4.0.cl
- name: 10.7.0.cl
  id: 10.7.0.cl
  tags:
  - 10.7.0.cl
  description: Roles for version 10.7.0.cl
- name: 9.0.0.cl
  id: 9.0.0.cl
  tags:
  - 9.0.0.cl
  description: Roles for version 9.0.0.cl
- name: 9.4.0.cl
  id: 9.4.0.cl
  tags:
  - 9.4.0.cl
  description: Roles for version 9.4.0.cl
- name: 9.12.0.cl
  id: 9.12.0.cl
  tags:
  - 9.12.0.cl
  description: Roles for version 9.12.0.cl
- name: 9.2.0.cl
  id: 9.2.0.cl
  tags:
  - 9.2.0.cl
  description: Roles for version 9.2.0.cl
- name: 9.9.0.cl
  id: 9.9.0.cl
  tags:
  - 9.9.0.cl
  description: Roles for version 9.9.0.cl
- name: 9.6.0.cl
  id: 9.6.0.cl
  tags:
  - 9.6.0.cl
  description: Roles for version 9.6.0.cl
- name: 10.6.0.cl
  id: 10.6.0.cl
  tags:
  - 10.6.0.cl
  description: Roles for version 10.6.0.cl
- name: 10.3.0.cl
  id: 10.3.0.cl
  tags:
  - 10.3.0.cl
  description: Roles for version 10.3.0.cl
- name: 10.1.0.cl
  id: 10.1.0.cl
  tags:
  - 10.1.0.cl
  description: Roles for version 10.1.0.cl
- name: 10.8.0.cl
  id: 10.8.0.cl
  tags:
  - 10.8.0.cl
  description: Roles for version 10.8.0.cl
- name: 9.5.0.cl
  id: 9.5.0.cl
  tags:
  - 9.5.0.cl
  description: Roles for version 9.5.0.cl
- name: 9.7.0.cl
  id: 9.7.0.cl
  tags:
  - 9.7.0.cl
  description: Roles for version 9.7.0.cl

