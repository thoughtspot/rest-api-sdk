/**
 * ThoughtSpot Public REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { JWTUserOptions } from '../models/JWTUserOptions';
import { UserParameterOptions } from '../models/UserParameterOptions';
import { HttpFile } from '../http/http';

export class GetObjectAccessTokenRequest {
    /**
    * Username of the ThoughtSpot user
    */
    'username': string;
    /**
    * GUID of the ThoughtSpot metadata object that the user can access. The bearer will only have access to the object specified in the API request.
    */
    'object_id'?: string;
    /**
    * Password of the user account
    */
    'password'?: string;
    /**
    * The secret key string provided by the ThoughtSpot application server. ThoughtSpot generates a secret key when Trusted authentication is enabled.
    */
    'secret_key'?: string;
    /**
    * Token validity duration in seconds
    */
    'validity_time_in_sec'?: number;
    /**
    * ID of the Org context to log in to. If Org ID is not specified, the user will be logged in to the Org context of their previous login session.
    */
    'org_id'?: number;
    /**
    * Email address of the user. Specify this attribute when creating a new user (just-in-time (JIT) provisioning).
    */
    'email'?: string;
    /**
    * Display name of the user. Specify this attribute when creating a new user (just-in-time (JIT) provisioning).
    */
    'display_name'?: string;
    /**
    *    Creates a new user if the specified username does not exist in ThoughtSpot. To provision a user just-in-time (JIT), set this attribute to true.      Note: For JIT provisioning of a user, the secret_key is required. 
    */
    'auto_create'?: boolean | null;
    /**
    * Unique ID or name of the groups to which you want to assign the new user. You can specify this attribute to dynamically assign privileges during just-in-time (JIT) provisioning.
    */
    'group_identifiers'?: Array<string>;
    'jwt_user_options'?: JWTUserOptions;
    'user_parameters'?: UserParameterOptions;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "username",
            "baseName": "username",
            "type": "string",
            "format": ""
        },
        {
            "name": "object_id",
            "baseName": "object_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "password",
            "baseName": "password",
            "type": "string",
            "format": ""
        },
        {
            "name": "secret_key",
            "baseName": "secret_key",
            "type": "string",
            "format": ""
        },
        {
            "name": "validity_time_in_sec",
            "baseName": "validity_time_in_sec",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "org_id",
            "baseName": "org_id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string",
            "format": ""
        },
        {
            "name": "display_name",
            "baseName": "display_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "auto_create",
            "baseName": "auto_create",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "group_identifiers",
            "baseName": "group_identifiers",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "jwt_user_options",
            "baseName": "jwt_user_options",
            "type": "JWTUserOptions",
            "format": ""
        },
        {
            "name": "user_parameters",
            "baseName": "user_parameters",
            "type": "UserParameterOptions",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return GetObjectAccessTokenRequest.attributeTypeMap;
    }

    public constructor() {
    }
}

