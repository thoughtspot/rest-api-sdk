/**
 * ThoughtSpot Public REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ExportMetadataTypeInput } from '../models/ExportMetadataTypeInput';
import { HttpFile } from '../http/http';

export class ExportMetadataTMLRequest {
    /**
    * Metadata objects.
    */
    'metadata': Array<ExportMetadataTypeInput>;
    /**
    * Indicates whether to export associated metadata objects of specified metadata objects.
    */
    'export_associated'?: boolean | null;
    /**
    * Adds FQNs of the referenced objects. For example, if you are exporting a Liveboard and its associated objects, the API returns the Liveboard TML data with the FQNs of the referenced worksheet. If the exported TML data includes FQNs, you don\'t need to manually add FQNs of the referenced objects during TML import.
    */
    'export_fqn'?: boolean | null;
    /**
    * TML EDOC content format. **Note: exporting in YAML format currently requires manual formatting of the output. For more details on the workaround, please click [here](https://developers.thoughtspot.com/docs/known-issues#_version_9_12_0_cl)**
    */
    'edoc_format'?: ExportMetadataTMLRequestEdocFormatEnum;
    /**
    * Indicates whether to export worksheet TML in DEFAULT or V1 or V2 version.
    */
    'export_schema_version'?: ExportMetadataTMLRequestExportSchemaVersionEnum;
    /**
    * Indicates whether to export table while exporting connection.
    */
    'export_dependent'?: boolean | null;
    /**
    * Indicates whether to export connection as dependent while exporting table/worksheet/answer/liveboard. This will only be active when export_associated is true.
    */
    'export_connection_as_dependent'?: boolean | null;
    /**
    * Indicates whether to export is happening from all orgs context.
    */
    'all_orgs_override'?: boolean | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "Array<ExportMetadataTypeInput>",
            "format": ""
        },
        {
            "name": "export_associated",
            "baseName": "export_associated",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "export_fqn",
            "baseName": "export_fqn",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "edoc_format",
            "baseName": "edoc_format",
            "type": "ExportMetadataTMLRequestEdocFormatEnum",
            "format": ""
        },
        {
            "name": "export_schema_version",
            "baseName": "export_schema_version",
            "type": "ExportMetadataTMLRequestExportSchemaVersionEnum",
            "format": ""
        },
        {
            "name": "export_dependent",
            "baseName": "export_dependent",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "export_connection_as_dependent",
            "baseName": "export_connection_as_dependent",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "all_orgs_override",
            "baseName": "all_orgs_override",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ExportMetadataTMLRequest.attributeTypeMap;
    }

    public constructor() {
    }
}


export type ExportMetadataTMLRequestEdocFormatEnum = "JSON" | "YAML" ;
export type ExportMetadataTMLRequestExportSchemaVersionEnum = "DEFAULT" | "V1" | "V2" ;

