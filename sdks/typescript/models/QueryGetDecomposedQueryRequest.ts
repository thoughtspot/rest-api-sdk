/**
 * ThoughtSpot Public REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { QueryGetDecomposedQueryRequestNlsRequest } from '../models/QueryGetDecomposedQueryRequestNlsRequest';
import { HttpFile } from '../http/http';

export class QueryGetDecomposedQueryRequest {
    /**
    * List of answer unique identifiers (GUIDs) whose data will be used to guide the response.
    */
    'answerIds'?: Array<string>;
    /**
    * User provided content like text data, csv data as a string message to provide context & potentially improve the quality of the response.
    */
    'content'?: Array<string>;
    /**
    * Unique identifier to denote current conversation.
    */
    'conversationId'?: string;
    /**
    * List of liveboard unique identifiers (GUIDs) whose data will be used to guide the response.
    */
    'liveboardIds'?: Array<string>;
    /**
    * Maximum number of decomposed queries that is allowed in the response, default = 5.
    */
    'maxDecomposedQueries'?: number;
    'nlsRequest'?: QueryGetDecomposedQueryRequestNlsRequest;
    /**
    * List of worksheetIds to provide context for decomposing user query into analytical queries that can be run on them.
    */
    'worksheetIds'?: Array<string>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "answerIds",
            "baseName": "answerIds",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "content",
            "baseName": "content",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "conversationId",
            "baseName": "conversationId",
            "type": "string",
            "format": ""
        },
        {
            "name": "liveboardIds",
            "baseName": "liveboardIds",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "maxDecomposedQueries",
            "baseName": "maxDecomposedQueries",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "nlsRequest",
            "baseName": "nlsRequest",
            "type": "QueryGetDecomposedQueryRequestNlsRequest",
            "format": ""
        },
        {
            "name": "worksheetIds",
            "baseName": "worksheetIds",
            "type": "Array<string>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return QueryGetDecomposedQueryRequest.attributeTypeMap;
    }

    public constructor() {
    }
}

