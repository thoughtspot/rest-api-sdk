/**
 * ThoughtSpot Public REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { GetRelevantQuestionsRequestAiContext } from '../models/GetRelevantQuestionsRequestAiContext';
import { GetRelevantQuestionsRequestMetadataContext } from '../models/GetRelevantQuestionsRequestMetadataContext';
import { HttpFile } from '../http/http';

export class GetRelevantQuestionsRequest {
    'metadata_context': GetRelevantQuestionsRequestMetadataContext;
    /**
    * Maximum number of relevant questions that is allowed in the response, default = 5.
    */
    'limit_relevant_questions'?: number;
    /**
    * If true, results are not returned from cache & calculated every time.
    */
    'bypass_cache'?: boolean | null;
    /**
    * A user query that requires breaking down into smaller, more manageable analytical questions to facilitate better understanding and analysis.
    */
    'query': string;
    'ai_context'?: GetRelevantQuestionsRequestAiContext;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "metadata_context",
            "baseName": "metadata_context",
            "type": "GetRelevantQuestionsRequestMetadataContext",
            "format": ""
        },
        {
            "name": "limit_relevant_questions",
            "baseName": "limit_relevant_questions",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "bypass_cache",
            "baseName": "bypass_cache",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "query",
            "baseName": "query",
            "type": "string",
            "format": ""
        },
        {
            "name": "ai_context",
            "baseName": "ai_context",
            "type": "GetRelevantQuestionsRequestAiContext",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return GetRelevantQuestionsRequest.attributeTypeMap;
    }

    public constructor() {
    }
}

