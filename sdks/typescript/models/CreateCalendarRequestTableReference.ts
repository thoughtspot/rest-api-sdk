/**
 * ThoughtSpot Public REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Table reference containing connection identifier and table details in this format: `{\"connection_identifier\":\"conn1\", \"database_name\":\"db1\", \"schema_name\":\"sc1\", \"table_name\":\"tb1\"}`. The given table will be created if `creation_method` is set as `FROM_INPUT_PARAMS`.
*/
export class CreateCalendarRequestTableReference {
    /**
    * Unique ID or name of the connection.
    */
    'connection_identifier': string;
    /**
    * Name of the database.
    */
    'database_name'?: string | null;
    /**
    * Name of the schema.
    */
    'schema_name'?: string | null;
    /**
    * Name of the table. Table names may be case-sensitive depending on the database system.
    */
    'table_name': string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "connection_identifier",
            "baseName": "connection_identifier",
            "type": "string",
            "format": ""
        },
        {
            "name": "database_name",
            "baseName": "database_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "schema_name",
            "baseName": "schema_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "table_name",
            "baseName": "table_name",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return CreateCalendarRequestTableReference.attributeTypeMap;
    }

    public constructor() {
    }
}

